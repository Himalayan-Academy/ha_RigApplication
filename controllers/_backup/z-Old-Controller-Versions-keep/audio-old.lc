<?rev

# DECLARE GLOBAL VARIABLES gControllerHandlers AND gData
global gControllerHandlers, gData

# PUT YOUR METHOD NAMES  INTO THE GLOBAL gControllerHandlers AS A COMMA SEPARATED LIST
put "search,audio,index" into gControllerHandlers

# PUT ALL THE VARIABLES TO BE MERGED WITH VIEWS INTO THE ARRAY VARIABLE gData


# WRITE INITIAL STATEMENTS INTO THE CONTROLLER HANDLER AND CALL IT AT THE END OF THE FILE

command audio

		# SAVE PAGE IN CACHE DIRECTORY WITH AN EXPIRATION TIME OF n MINUTES
	# NOTE: THIS IS NOT MANDATORY, DON'T USE CACHING WHILE WORKING ON THE CODE,
	# OTHERWISE YOU WON'T SEE YOUR CHANGES IMMEDIATELY
	# rigOutputCache 3
	
	put "The World of Sacred Music" into gData["pageTitle"]
	put url "file:/home/devhap/public_html/html/media/song-search-form.html" into gData["audioSearchForm"]
	
	# LOAD THE VIEW FILES
	get rigLoadView("sitewide/doc-head")	 	
	get rigLoadView("audio/look-listen-page-head")
	get rigLoadView("audio/audio-main-content")	
	get rigLoadView("sitewide/footer")
    rigLoadHelper "form"
	

end audio

# THIS COMMAND WILL BE CALLED IF NONE IS SPECIFYED IN THE URI

command index

end index


/*
* Render Search Results
*
* This command is used by the different search routines to display
* the audio results from the search.
*
* It will loop thru the gData["search results"][x], where x = 1 to the number
* of matches, rendering the data.
*
* It has the same structure as the index routines but it will add stuff to the
* audio/audio-main-content.irev file
*
* OBS: RenderSearchResults is not a command to be called from a URL so it does not
* need to be present in the commands array at the top.
*
*/

on rendersearchresults

	put "The World of Sacred Music" into gData["pageTitle"]
		
	# LOAD THE VIEW FILES
	get rigLoadView("sitewide/doc-head")	 	
	get rigLoadView("audio/look-listen-page-head")
	put rigLoadView("audio/search-results",true) into gData["search innerHTML"]
	get rigLoadView("audio/audio-main-content")	
	get rigLoadView("sitewide/footer")

end rendersearchresults


/*
* Search routine
*/

on search
	rigLogMessage "debug","searching for audio"
	
	# select only the specified media type
	rigDbWhere "media_type", rigVarPost("media_type")
	rigDbWhere "approved_for_public","YES"
	
	
	##### Filters
	# now we'll check the different filters. The more filters, the worst the performance
	
	
    if not (rigVarPost("filter_by_deity") is empty) then
 	   rigLogMessage "debug","Filter by Deity: YES"
 	   rigDbWhere "deity", rigVarPost("filter_by_deity")	  
 	     
    end if
		
	# Check if model for study
	if rigVarPost("filter_by_model") is "YES" then
		rigLogMessage "debug","Filter by Model: YES"
		rigDbWhere "model_for_study", "YES"
	end if	
	
	# check titles or artists
	if not (rigVarPost("filter_by_string") is empty) then
	    if rigVarPost("filter_by_string") = "title" then
			rigLogMessage "debug","Filter by Title: YES"
			rigDbLike "title", rigVarPost("query")
		else
			rigLogMessage "debug","Filter by Artists: YES"
			rigDbLike "artists", rigVarPost("query")	
		end if	
	end if
	
	
	# check description
	if rigVarPost("filter_by_description") is "YES" then
		rigLogMessage "debug","Filter by description: YES"
		rigDbLike "description", rigVarPost("query")
	end if
	
	# check transcription
	if rigVarPost("filter_by_transcript") is "YES" then
		rigLogMessage "debug","Filter by transcript: YES"
		rigDbLike "description", rigVarPost("query")
	end if
		
	put rigDbGet("item") into tQ
	rigLogMessage "debug","Number of results:" && tQ["numrows"]
	rigLogMessage "debug","SQL:" && rigDbLastQuery()
	if tQ["numrows"] < 1 then
		rigLogMessage "debug","No Results!!!"
		RenderSearchResults
		exit search
	end if
	

	# Some filters would required "grouped or" SQL statements which we
	# can't do with the RevIgniter Active Record implementation.
	# 
	# Instead of crafting this really complex SQL by hand, we avoid it by
	# throwing more CPU cycles into the problem. We pick every results from
	# the broad search terms and then using a loop, we refine the results cherry
	# picking what is needed.
	#
	# It is a waste of resources (CPU wise) but it is the easiest way to do it.

  put 0 into y
	repeat with x = 1 to tQ["numrows"]
		put rigDbRow(x) into tR
		
		## INSPIRED TALK ORs
		
		if rigVarPost("media_type") is "audio/inspiredtalk" then
			# include Gurudevas talks in the results
			if rigVarPost("include_gurudeva") is "YES" and tR["author"] is "Satguru Sivaya Subramuniyaswami" then
				rigLogMessage "debug","Include Gurudevas Talks: YES"
				add 1 to y
				put tR into gData["search results"][y]
				next repeat
			end if

			# include Bodhinathas talks in the results
			if rigVarPost("include_bodhinatha") is "YES" and tR["author"] is "Satguru Bodhinatha Veylanswami" then
				rigLogMessage "debug","Include Bodhinatas Talks: YES"
				add 1 to y
				put tR into gData["search results"][y]
				next repeat
			end if
			
			# ... or next repeat
			next repeat
		end if
		
		
	
		## SONGS ORs  
		if rigVarPost("media_type") is "audio/song" then
					
			## LOOP GENRE
			## In the view, Natchintanai is on a separate form but
			## it is just another song genre
			
			# include Natchintanai in the results
			if rigVarPost("include_natchintanai") is "YES" and tR["genre"] is "natchintanai" then
				rigLogMessage "debug","Include natchintanai: YES"
				add 1 to y
				put tR into gData["search results"][y]
				next repeat
			end if
			
			# include bhajan in the results
			if rigVarPost("include_bhajan") is "YES" and tR["genre"] is "bhajan" then
				rigLogMessage "debug","Include bhajan: YES"
				add 1 to y
				put tR into gData["search results"][y]
				next repeat
			end if
			
			# include gitam in the results
			if rigVarPost("include_gitam") is "YES" and tR["genre"] is "bhakti-gitam" then
				rigLogMessage "debug","Include gitam: YES"
				add 1 to y
				put tR into gData["search results"][y]
				next repeat
			end if
			
			# include stotram in the results
			if rigVarPost("include_stotram") is "YES" and tR["genre"] is "stotram" then
				rigLogMessage "debug","Include stotram: YES"
				add 1 to y
				put tR into gData["search results"][y]
				next repeat
			end if
			
			# include tirumurai in the results
			if rigVarPost("include_tirumurai") is "YES" and tR["genre"] is "tirumurai" then
				rigLogMessage "debug","Include tirumurai: YES"
				add 1 to y
				put tR into gData["search results"][y]
				next repeat
			end if		
			# ... or next repeat
			next repeat
		end if
				
		add 1 to y
		put tR into gData["search results"][y]
	end repeat
	RenderSearchResults
end search





--| END OF audio.lc
--| Location: ./system/application/controllers/audio.lc
----------------------------------------------------------------------
