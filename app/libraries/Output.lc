<?rev
put gBASEPATH into gBASEPATH

if gBASEPATH is "gBASEPATH" then
	put "No direct script access allowed."
	exit to top
end if

##
# revIgniter
#
# An application development framework for LiveCode
# modeled on CodeIgniter.
#
# @package		revIgniter
# @author		  rabit@revigniter.com
# @copyright	Copyright (c) 2009 - 2016, dimensionB Bitter u. Bitter GmbH
# @license		http://revigniter.com/userGuide/license.html
# @link		    http://revigniter.com
##

## ------------------------------------------------------------------------

##
# revIgniter Output Library
#
# Responsible for sending final output to browser
#
# @package		revIgniter
# @subpackage	Libraries
# @category	  Output
# @author		  rabit@revigniter.com
# @link		    http://revigniter.com/userGuide/libraries/output.html
##


# LOGGING
rigLogMessage "debug", "Output Library Loaded"


# DECLARE VARIABLES
local sFinalOutput, sHeaders, sCacheExpiration, sEnableProfiler, sProfilerPrefs

# SET INITIAL VALUES
put 0 into sCacheExpiration
put FALSE into sEnableProfiler






----------------------------------------------------------------------
--| FUNCTION rigGetOutput
--|
--| Author: rabit
--| Version:  1.0
--| Created: 10-10-09
--| Last Mod: 10-10-09
--| Requires: --
--|
--| Summary:  Returns the current output string.
--| 
--| Format:  rigGetOutput()
--|
--| Parameters: --
--|
--| Return: string
----------------------------------------------------------------------

function rigGetOutput
	return sFinalOutput
end rigGetOutput








----------------------------------------------------------------------
--| COMMAND rigSetOutput
--|
--| Author: rabit
--| Version:  1.0
--| Created: 10-10-09
--| Last Mod: 10-10-09
--| Requires: --
--|
--| Summary:  Sets the output string.
--| 
--| Format:  rigSetOutput param1
--|
--| Parameters: string <pOutput>
--|
--| Return: empty
----------------------------------------------------------------------

command rigSetOutput pOutput
	put pOutput into sFinalOutput
end rigSetOutput








----------------------------------------------------------------------
--| COMMAND rigAppendOutput
--|
--| Author: rabit
--| Version:  1.0
--| Created: 19-06-09
--| Last Mod: 19-06-09
--| Requires: --
--|
--| Summary:  Appends data onto the output string.
--| 
--| Format:  rigAppendOutput param1
--|
--| Parameters: string <pOutput>
--|
--| Return: empty
----------------------------------------------------------------------

command rigAppendOutput pOutput
	if sFinalOutput is "" then
		put pOutput into sFinalOutput
	else
		put sFinalOutput & return & pOutput into sFinalOutput
	end if
end rigAppendOutput






----------------------------------------------------------------------
--| COMMAND rigSetHeader
--|
--| Author: rabit
--| Version:  1.1
--| Created: 19-06-09
--| Last Mod: 21-06-09
--| Requires: --
--|
--| Summary:  Lets you set a server header which will be outputted with the final display.
--|                    Note:  If a file is cached, headers will not be sent.
--| 
--| Format:  rigSetHeader param1, param2
--|
--| Parameters: string <pHeader>, bool <pReplace> replace header
--|
--| Return: empty
----------------------------------------------------------------------

command rigSetHeader pHeader pReplace
	if pReplace is empty then
		put TRUE into tReplace
	else
		put pReplace into tReplace
	end if

	if sHeaders is an array then
		put the number of lines in the keys of sHeaders into tNumHeaders
		put tNumHeaders + 1 into tNewHeaderKey
		-- put pHeader into sHeaders[tNewHeaderKey]
		put tReplace into sHeaders[tNewHeaderKey][pHeader]
	else
		-- put pHeader into sHeaders[1]
		put tReplace into sHeaders[1][pHeader]
	end if
end rigSetHeader







----------------------------------------------------------------------
--| COMMAND rigEnableProfiler
--|
--| Author: rabit
--| Version:  1.1
--| Created: 10-10-09
--| Last Mod: 22-01-10
--| Requires: --
--|
--| Summary:  Enable/disable Profiler.
--| 
--| Format:  rigEnableProfiler param1 param2
--|
--| Parameters: bool <pVal>, array <pPrefs>
--|
--| Return: empty
----------------------------------------------------------------------

command rigEnableProfiler pVal pPrefs
	if pVal is empty then
		put TRUE into tVal
	else
		put pVal into tVal
	end if
	
	if tVal is a boolean then
		put tVal into sEnableProfiler
	else
		put TRUE into sEnableProfiler
	end if

	put pPrefs into sProfilerPrefs
end rigEnableProfiler







----------------------------------------------------------------------
--| COMMAND rigOutputCache
--|
--| Author: rabit
--| Version:  1.0
--| Created: 25-07-09
--| Last Mod: 25-07-09
--| Requires: --
--|
--| Summary:  Set cache.
--| 
--| Format:  rigOutputCache param1
--|
--| Parameters: integer <pTime> duration as minutes
--|
--| Return: empty
----------------------------------------------------------------------

command rigOutputCache pTime
	if pTime is not an integer then
		put 0 into sCacheExpiration
	else
		put pTime into sCacheExpiration
	end if
end rigOutputCache







/*----------------------------------------------------------------------
--| COMMAND _rigDisplay
--|
--| Author: rabit
--| Version:  2.5
--| Created: 19-06-09
--| Last Mod: 21-03-14
--| Requires: Log, _writeCache, _output, rigLogMessage, rigFetchConfigItem()
--|
--| Summary:  All "view" data is automatically put into this variable by the
--|           Loader library: sFinalOutput
--|
--|           This handler sends the finalized output data to the browser along
--|           with any server headers and profile data.  It also stops the
--|           benchmark timer so the page rendering speed  can be shown.
--| 
--| Format:  _rigDisplay param1, param2
--|
--| Parameters: string <pOutput>, bool <pCached>
--|
--| Return: empty
----------------------------------------------------------------------*/

command _rigDisplay pOutput, pCached
	# SET THE OUTPUT DATA
	if pOutput is "" then
		put sFinalOutput into tOutput
	else
		put pOutput into tOutput
	end if
	
	# DO WE NEED TO WRITE A CACHE FILE?
	if sCacheExpiration > 0 then
		_rigWriteCache tOutput
	end if
	
	# PARSE OUT THE ELAPSED TIME
	put rigElapsedTime("totalExecutionTime_start", "totalExecutionTime_end", 4) into tElapsed

	# SWAP THE VARIABLES WITH THE DATA, WHICH NEED TO BE UPDATED IN CACHED PAGES
	put rigCacheVarsMerged(tOutput) into tOutput

	# ARE THERE ANY SERVER HEADERS TO SEND?
	if sHeaders is an array then
		if (the number of lines in the keys of sHeaders) > 0 then
			
			# CSRF CONTROL VARIABLES
			put FALSE into tIsCSRFcookie
			put FALSE into tLastCookieHeaderWasCSRFcookie
			put 0 into tCookieHeadersSet

			repeat for each key tKey in sHeaders
				-- put new header sHeaders[tKey]
				 repeat for each key tHeader in sHeaders[tKey]

					# CHECK IF HEADER CONTAINS A CSRF COOKIE
					if rigFetchConfigItem("csrf_protection") is TRUE then
						if char 1 to 10 of tHeader is "Set-Cookie" then
							add 1 to tCookieHeadersSet
							set the itemDel to "="
							-- rigLogMessage "debug", "item 1 of tHeader:" && item 1 of tHeader
							if rigFetchConfigItem("csrf_cookie_name") is in item 1 of tHeader then
								-- put TRUE into tLastCookieHeaderWasCSRFcookie
								put TRUE into tIsCSRFcookie
							end if
						end if
					end if

					if sHeaders[tKey][tHeader] is FALSE then
						# DON'T REPLACE HEADER
						put new header tHeader
						
						# SET THE APPROPRIATE VALUES FOR THE CSRF COOKIE CONTROL VARIABLES
						if tIsCSRFcookie is TRUE then
							put TRUE into tLastCookieHeaderWasCSRFcookie
							put FALSE into tIsCSRFcookie
						end if
						
						
					else
						# REPLACE HEADER BUT DON'T REPLACE CSRF COOKIE
						if (tCookieHeadersSet > 1) and (tIsCSRFcookie is FALSE)  and (tLastCookieHeaderWasCSRFcookie is TRUE) then
							# RESET CONTROL VARIABLES
							put 0 into tCookieHeadersSet
							put FALSE into tLastCookieHeaderWasCSRFcookie
							
							# SET NEW HEADER
							put new header tHeader
						else
							# REPLACE HEADER
							put header tHeader
							
							# SET THE APPROPRIATE VALUES FOR THE CSRF COOKIE CONTROL VARIABLES
							if tIsCSRFcookie is TRUE then
								put TRUE into tLastCookieHeaderWasCSRFcookie
								put FALSE into tIsCSRFcookie
							end if
							
						end if

					end if -- if sHeaders[tKey][tHeader] is FALSE then
        end repeat -- repeat for each key tHeader in sHeaders[tKey]
			end repeat -- repeat for each key tKey in sHeaders
		end if
	end if

	# IF CONFIG CHARSET IS SET WE OVERRIDE THE CHARSET HEADER
	# SENT BY THE ENGINE
	put rigFetchConfigItem("charset") into tCharset
	if tCharset <> empty then
		put header "Content-Type: text/html; charset=" & tCharset
	end if


	# CHECK IF WE ARE DEALING WITH A CACHE FILE.
	# IF SO WE SIMPLY PUT THE DATA AND EXIT.
	if pCached is TRUE then
		# SEND CACHED PAGE TO THE BROWSER!
		rigLogMessage "debug", "Final output sent to browser. Total execution time:" && tElapsed		
		put tOutput
		exit _rigDisplay
	end if

	# DO WE NEED TO GENERATE PROFILE DATA?
	# IF SO, LOAD THE PROFILE LIBRARY.
	if sEnableProfiler is TRUE then
		rigLoaderLoadLibrary "Profiler", sProfilerPrefs
		
		# IF THE OUTPUT DATA CONTAINS CLOSING </BODY> AND </HTML> TAGS
		# WE WILL REMOVE THEM AND ADD THEM BACK AFTER WE INSERT THE PROFILE DATA
		put "(?is)</body>.*?</html>" into tRegEx

		if matchChunk(tOutput, tRegEx) is TRUE then
			put replacetext(tOutput,tRegEx,"") into tOutput
			put rigProfilerOutput() after tOutput
			put "</body></html>" after tOutput
		else
			put rigProfilerOutput() after tOutput
		end if
	end if


	# DOES THE CONTROLLER CONTAIN A HANDLER NAMED _OUTPUT?
	# IF SO SEND THE OUTPUT THERE.  OTHERWISE, PUT IT.
	if "_output" is among the items of gControllerHandlers then
		_output tOutput
	else

		# IS COMPRESSION REQUESTED?
		put rigFetchConfigItem("compress_output") into tDoGzip

		if (tDoGzip is TRUE) and (tOutput <> "") then
			if ($_SERVER["HTTP_ACCEPT_ENCODING"] <> "") AND ("gzip" is in $_SERVER["HTTP_ACCEPT_ENCODING"]) then
				put compress(tOutput) into tOutput
				put the length of tOutput into tOutputLength

				put header "Content-Encoding: gzip"
				put header "Content-Length:" && tOutputLength
			end if

			put header "Vary: Accept-Encoding"

			# SEND IT TO THE BROWSER!
			put binary tOutput
		else
			put tOutput
		end if
	end if
	
	if tOutput <> "" then
		rigLogMessage "debug", "Final output sent to browser"
	else
		rigLogMessage "debug", "Final output sent to browser. There was no view data."
	end if
	rigLogMessage "debug", "Total execution time: " & tElapsed

	# CHECK IF THERE ARE OPEN DATABASE CONNECTIONS
	if gDatabaseID is an integer then
		get _rigCloseDB()
	end if
end _rigDisplay





/*----------------------------------------------------------------------
--| COMMAND _rigWriteCache
--|
--| Author: rabit
--| Version:  1.2
--| Created: 25-07-09
--| Last Mod: 02-02-15
--| Requires: rigFetchConfigItem(), rigLogMessage
--|
--| Summary:  Write a cache file.
--| 
--| Format:  _rigWriteCache param1
--|
--| Parameters: string <pOutput>
--|
--| Return: empty
----------------------------------------------------------------------*/

command _rigWriteCache pOutput
	put rigFetchConfigItem("cache_path") into tPath

	if tPath is empty then
		put gBASEPATH & "cache/" into tCachePath
	else
		put tPath into tCachePath
	end if

	if (there is not a folder tCachePath) or (rigCanWriteFileTo(tCachePath) is not TRUE) then
		exit _rigWriteCache
	end if

	put rigFetchConfigItem("baseUrl") & rigFetchConfigItem("indexPage") & rigUriString() into tUri

	put tCachePath & rigHexDigest(tUri) into tCachePath

	open file tCachePath for write
  # ENGINE ≥ 7 VERSION
  -- put rigFetchConfigItem("defaultCharset") into tCharset
  -- open file tCachePath for tCharset text write
  
	if the result is empty then -- success!
		put gBASEPATH & "cache/flock.txt" into tFlockPath

		# CHECK IF CACHE FILE IS LOCKED BY ANOTHER CONNECTION
		if there is a file tFlockPath then
			put URL ("binfile:" & tFlockPath) into tLockedCacheFiles
			
			if the result <> empty then
				rigLogMessage "error", "Failed to read file! System error:" && the sysError
			end if
			
			put 0 into tCounter
			repeat for each line thisLine in tLockedCacheFiles
				add 1 to tCounter
				if item 2 of thisLine is tCachePath then
					if item 1 of thisLine is "writeLock" then
						# FILE IS LOCKED
						exit _rigWriteCache
					else
						# LOCK FILE
						-- put "writeLock" & "," & tCachePath after tLockedCacheFiles
						put "writeLock" & "," & tCachePath into line tCounter of tLockedCacheFiles
						put tLockedCacheFiles into URL ("binfile:" & tFlockPath)
						if the result is not empty then
							rigLogMessage "error", "Unable to secure a file lock for file at:" && tCachePath && "System error:" && the sysError
							exit _rigWriteCache
						end if
						exit repeat
					end if
				end if
			end repeat

		else
			# WRITE FLOCK FILE AND LOCK FILE
			put "writeLock" & "," & tCachePath & return into tLockedCacheFiles
			put tLockedCacheFiles into URL ("binfile:" & tFlockPath)
			
      if the result <> empty then
        rigLogMessage "error", "Failed to write to file! System error:" && the sysError
      end if
		end if

		# WRITE CACHE
		put the seconds + (sCacheExpiration * 60) into tExpire
		put tExpire & "TS--->" & pOutput into tDataToWrite
		write tDataToWrite to file tCachePath
	
		# SET FILE UNLOCKED
		put URL ("binfile:" & tFlockPath) into tLockedCacheFiles
		
    if the result <> empty then
      rigLogMessage "error", "Failed to read file! System error:" && the sysError
    end if
		
		put 0 into tCounter
		repeat for each line thisLine in tLockedCacheFiles
			add 1 to tCounter
			if item 2 of thisLine is tCachePath then
				put thisLine into tFoundString
				put "unlocked" into item 1 of  tFoundString
				put tFoundString into line tCounter of tLockedCacheFiles
				put tLockedCacheFiles into URL ("binfile:" & tFlockPath)
				
	      if the result <> empty then
	        rigLogMessage "error", "Failed to write to file! System error:" && the sysError
	      end if
				
				exit repeat
			end if
		end repeat
	
		close file tCachePath
	else
		exit _rigWriteCache
	end if
end _rigWriteCache




/*----------------------------------------------------------------------
--| FUNCTION _rigOutDisplayCache
--|
--| Author: rabit
--| Version:  1.1
--| Created: 25-07-09
--| Last Mod: 22-12-14
--| Requires: rigFetchConfigItem(), rigLogMessage, _rigDisplay
--|
--| Summary:  Update/serve a cached file.
--| 
--| Format:  _rigOutDisplayCache()
--|
--| Parameters: --
--|
--| Return: bool
----------------------------------------------------------------------*/

function _rigOutDisplayCache
	put rigFetchConfigItem("cache_path") into tCachePath

	if tCachePath is empty then
		put gBASEPATH & "cache/" into tCachePath
	end if

	if (there is not a folder tCachePath) or (rigCanWriteFileTo(tCachePath) is not TRUE) then
		return FALSE
	end if

	# BUILD THE FILE PATH.  THE FILE NAME IS AN Md5 HASH OF THE FULL URI
	put rigFetchConfigItem("baseUrl") & rigFetchConfigItem("indexPage") & rigUriString() into tUri

	put tCachePath & rigHexDigest(tUri) into tFilePath

	if there is not a file tFilePath then
		return FALSE
	end if

	open file tFilePath for read
  # ENGINE ≥ 7 VERSION
  -- put rigFetchConfigItem("defaultCharset") into tCharset
  -- open file tFilePath for tCharset text read

	if the result is not empty then
		return FALSE
	end if

	read from file tFilePath until EOF
	put it into tCache
	close file tFilePath
	if the number of chars of tCache = 0 then
		return FALSE
	end if

	# STRIP OUT THE EMBEDDED TIMESTAMP
	--put "(\d+)TS--->(.+)" into tRegEx
	--get matchtext(tCache,tRegEx,tCachedTime,tCachedString)
	put "(\d+)TS--->.+" into tRegEx
	get matchtext(tCache,tRegEx,tCachedTime)

	# HAS THE FILE EXPIRED? IF SO WE'LL DELETE IT.
	if the seconds >= tCachedTime then
		delete file tFilePath

		rigLogMessage "debug", "Cache file has expired. File deleted"
		return FALSE
	end if

	# DISPLAY THE CACHE
	put (the number of chars of tCachedTime) + 7 into tCachedStringOffset
	put char tCachedStringOffset to -1 of tCache into tCachedString

	put TRUE into tCached
	rigLogMessage "debug", "Cache file is current. Sending it to browser."
	_rigDisplay tCachedString, tCached
	return TRUE
end _rigOutDisplayCache




----------------------------------------------------------------------
--| FUNCTION rigCacheVarsMerged
--|
--| Author: rabit
--| Version:  1.0
--| Created: 25-07-09
--| Last Mod: 25-07-09
--| Requires: --
--|
--| Summary:  Merge pseudo variables in cached file.
--| 
--| Format:  rigCacheVarsMerged(param1)
--|
--| Parameters: string <pStr>
--|
--| Return: string
----------------------------------------------------------------------

function rigCacheVarsMerged pStr
	put pStr into tStr
	replace "{{" with "[[" in tStr
	replace "}}" with "]]" in tStr

	put merge(tStr) into tMergedStr

	return tMergedStr
end rigCacheVarsMerged






--| END OF Output.lc
--| Location:  ./system/libraries/Output.lc
----------------------------------------------------------------------