script "lib_Sitemap"
--> MetaData
-
copyright: David Bovill
license: GPLv3
name: lib_Sitemap
type: script library
version: 0.4

/*
This library is for creating Google sitemaps.
*/


--> Variables
-
constant cXMLNS = "http://www.sitemaps.org/schemas/sitemap/0.9"
constant cXMLNS_Content = "http://www.google.com/schemas/sitemap-content/1.0"
constant cXMLNS_Image ="http://www.google.com/schemas/sitemap-image/1.1"
constant cHapRoot = "http://himalayanacademy.com"
constant cHapDevRoot = "http://dev.himalayanacademy.com"


--> Sitemap | rigDB
-
/*
Some utitlity handlers for easily scripting the HA media database.
*/

command rigDB_ItemByMediaType mTypeList
   rigDbFrom "item"
   repeat for each item mType in mTypeList
      rigDbOrWhere "media_type", mType
   end repeat
   rigDbWhere "approved_for_public", "YES"
end rigDB_ItemByMediaType


--> Sitemap | Data
-
/*
These handlers are designed to return encoded arrays. 
They are used for Desktop based testing of more complex sitemap generation.

For now we have reverted to simple list based sitemap generation,
as we have got all the refinements working,
by adding pagemaps toHTML page headers and fixing bugs.

As we move forwards (in particular wwhen we have thumbnails and have decided to add "actions" to the search,
we will need this code (and the Desktop array to sitempa XML code to generate the media specific (complex) sitemaps.
*/

function rigDB_GetVideoData pFieldList
   rigDB_ItemByMediaType "video/building,video/news,video/pubdesk,video/ritual,video/talk,video/teaching,video/travel"
   if pFieldList is not empty then
      rigDbJoin "item_format", "item_format.item_id = item.item_id" -- item_Format.item_id is not unique
   end if
   return rigDB_GetData (pFieldList)
end rigDB_GetVideoData
   
function rigDB_GetPhotoData pFieldList
   rigDB_ItemByMediaType "art/photography,slideshow/external,slideshow/galleria"
   if pFieldList is not empty then
      rigDbJoin "item_format", "item_format.item_id = item.item_id" -- item_Format.item_id is not unique
   end if
   return rigDB_GetData (pFieldList)
end rigDB_GetPhotoData
    
function rigDB_GetArtData pFieldList
   rigDB_ItemByMediaType "art/drawing,art/painting,art/vector"
   if pFieldList is not empty then
      rigDbJoin "item_format", "item_format.item_id = item.item_id" -- item_Format.item_id is not unique
   end if
   return rigDB_GetData (pFieldList)
end rigDB_GetArtData

function rigDB_ExtractFirstThing tQuery
   repeat for each key tKey in tQuery ["resultarray"]
      put tQuery ["resultarray"][tKey][1] into fThing
      put empty into indexArray [fThing]
   end repeat
   put keys (indexArray) into fThings
   return fThings
end rigDB_ExtractFirstThing

function rigDB_GetData pFieldList
   switch pFieldList
      case empty
         rigDbSelect "file_id"
         put rigDbGet() into tQuery
         put rigDB_ExtractFirstThing (tQuery) into fileIDs
         sort fileIDs
         return fileIDs
      case "*"
         put rigDbGet() into tResultArray
         put base64Encode(arrayEncode(tResultArray)) into tEncodedArray
         return tEncodedArray
      default
         rigDbSelect pFieldList
         put rigDbGet() into tResultArray
         put base64Encode(arrayEncode(tResultArray)) into tEncodedArray
         return tEncodedArray
   end switch
end rigDB_GetData


--> Sitemap | Currently Working On
-
function sitemap_ConstructHapMediaUrl fileSlug
   -- was "hap_ConstructMediaUrl"
   sitemap_EntityEscape fileSlug
   put cHapRoot & "/view/" & fileSlug into someURL
   put cHapRoot & "/site/viewmedia/" & fileSlug into someURL
   return someURL
end sitemap_ConstructHapMediaUrl

function sitemap_ConstructFilePath shortSitemapFile
   put the desktop folder & "/" into sitemapRoute
   put sitemapRoute & shortSitemapFile into someFile
   return someFile
end sitemap_ConstructFilePath


--> Sitemap | Fetch and Save
-
function sitemap_Fetch shortSitemapFile
   put sitemap_ConstructFilePath (shortSitemapFile) into someFile
   put url ("binfile:" & someFile) into sitemapXML
   return sitemapXML
end sitemap_Fetch

command sitemap_Save shortSitemapFile, sitemapXML
   put sitemap_ConstructFilePath (shortSitemapFile) into someFile
   put sitemapXML into url ("binfile:" & someFile)
   return someFile
end sitemap_Save


--> Sitemap | Index
-
function sitemap_ListIndexURLs
   -- put "taka-sitemap.xml,book-sitemap.xml,video-sitemap.xml,audio-sitemap.xml,art-sitemap.xml,photos-sitemap.xml" into shortFiles
   put sitemap_ListHapRefinementNames() into refinementNames
   put ",html" after refinementNames
   put "http://himalayanacademy.com/blog/taka/sitemap.xml.gz" & CR after siteMapUrls
   repeat for each item refinementName in refinementNames
      put sitemap_ConstructShortFileName (refinementName) into shortSitemapFile
      put "http://himalayanacademy.com/" & shortSitemapFile & CR after siteMapUrls
   end repeat
   delete char -1 of siteMapUrls
   return siteMapUrls
end sitemap_ListIndexURLs

function sitemap_ConstructShortFileName refinementName
   put tolower (refinementName) & "-sitemap.xml" into shortSitemapFile   
   return shortSitemapFile
end sitemap_ConstructShortFileName

function sitemap_ConstructIndexXml siteMapUrls, pMakePretty
   put pMakePretty is not false into pIndent
   put date_ConstructWc3Datetime (the seconds) into dateNow
   repeat for each line someUrl in siteMapUrls
      put empty into someXML
      put xml_Enclose (someUrl, "loc", pIndent) after someXML
      put CR after someXML
      put xml_Enclose (dateNow, "lastmod", false) after someXML
      put CR after someXML
      put xml_Enclose (someXML, "sitemap", pIndent) into siteXML
      put siteXML & CR after sitesXML
   end repeat
   put xml_Enclose (sitesXML, "sitemapindex", pIndent, "xmlns", cXMLNS) into someXML
   xml_AddHeaderLine someXml, "1.0", "UTF-8"
   return someXML
end sitemap_ConstructIndexXml


--> Sitemap | Build
-
function sitemap_BuildImageSiteMap fileIDs, pPageType, pPriority
   -- was "sitemap_Construct"
   local urlsetXML
   put date_ConstructWc3Datetime (the seconds) into dateNow
   _setPageMapXML pageMapXML, pPageType
   
   repeat for each line fileID in fileIDs
      put sitemap_ConstructHapMediaUrl (fileID) into someUrl
      put xml_Enclose (someUrl, "loc", false) & CR into urlXML
      put xml_Enclose (dateNow, "lastmod", false) & CR after urlXML
      
      _addPriorityXML urlXML, pPriority
      _addPageMapXML urlXML, pageMapXML
      _addImageXML urlXML, pImageUrl
      
      put xml_Enclose (urlXML, "url", true) & CR after urlsetXML
   end repeat
   
   put xml_Enclose (urlsetXML, "urlset", true, "xmlns", cXMLNS, "xmlns:content", cXMLNS_Content, "xmlns:image", cXMLNS_Image) into someXML
   xml_AddHeaderLine someXml, "1.0", "UTF-8"
   return someXML
end sitemap_BuildImageSiteMap

function sitemap_Build fileIDs, pPageType, pPriority
   -- was "sitemap_Construct"
   local urlsetXML
   put date_ConstructWc3Datetime (the seconds) into dateNow
   _setPageMapXML pageMapXML, pPageType
   
   repeat for each line fileID in fileIDs
      put sitemap_ConstructHapMediaUrl (fileID) into someUrl
      put xml_Enclose (someUrl, "loc", false) & CR into urlXML
      put xml_Enclose (dateNow, "lastmod", false) & CR after urlXML
      
      _addPriorityXML urlXML, pPriority
      _addPageMapXML urlXML, pageMapXML
      
      put xml_Enclose (urlXML, "url", true) & CR after urlsetXML
   end repeat
   
   put xml_Enclose (urlsetXML, "urlset", true, "xmlns", cXMLNS, "xmlns:content", cXMLNS_Content) into someXML
   xml_AddHeaderLine someXml, "1.0", "UTF-8"
   return someXML
end sitemap_Build

function sitemap_BuildFromUrls someUrls, pPageType, pPriority
   local urlsetXML
   put date_ConstructWc3Datetime (the seconds) into dateNow
   _setPageMapXML pageMapXML, pPageType
   
   repeat for each line someUrl in someUrls
      put xml_Enclose (someUrl, "loc", false) into urlXML
      put CR after urlXML
      
      put xml_Enclose (dateNow, "lastmod", false) after urlXML
      put CR after urlXML
      
      _addPriorityXML urlXML, pPriority
      _addPageMapXML urlXML, pageMapXML
      
      put xml_Enclose (urlXML, "url", true) & CR after urlsetXML
   end repeat
   
   put xml_Enclose (urlsetXML, "urlset", true, "xmlns", cXMLNS) into someXML
   xml_AddHeaderLine someXml, "1.0", "UTF-8"
   return someXML
end sitemap_BuildFromUrls


--> Sitemap | List | Files
-
function sitemap_ListFileIDs refinementName
   put sitemap_HapRefinementToMediaTypes (refinementName) into mTypeList
   put sitemap_FileIDsFromMediaType (mTypeList) into fileIDs
   return fileIDs
end sitemap_ListFileIDs
   
function sitemap_FileIDsFromMediaType mTypeList
   rigDB_ItemByMediaType mTypeList
   rigDbSelect "file_id"
   put rigDbGet() into tQuery
   
   put rigDB_ExtractFirstThing (tQuery) into fileIDs
   return fileIDs
end sitemap_FileIDsFromMediaType


--> HAP | Refinements
-
function sitemap_HapRefinementToMediaTypes refinementName
   switch refinementName
      case "Image"
         put "art/photography,art/painting,art/drawing,art/vector" into mTypeList
      case "Photo"
         return "art/photography,slideshow/external,slideshow/galleria" into mTypeList
      case "Art"
         return "art/drawing,art/painting,art/vector" into mTypeList
      case "ArtPhoto"
         return "art/photography" into mTypeList
      case "Galleria"
         return "slideshow/galleria" into mTypeList
      case "Slideshow"
         return "slideshow/external,slideshow/galleria" into mTypeList
      case "Book"
         return "text/book,text/booklet,text/review" into mTypeList
      case "Audio"
         return "audio/inspiredtalk,audio/shum,audio/chant,audio/song" into mTypeList
      case "Video"
         return "video/building,video/news,video/pubdesk,video/ritual,video/talk,video/teaching,video/travel" into mTypeList
      default
         return empty
   end switch
end sitemap_HapRefinementToMediaTypes

function sitemap_ListHapRefinementNames
   return "Art,ArtPhoto,Audio,Book,Galleria,Image,Photo,Slideshow,Video"
end sitemap_ListHapRefinementNames


--> Sitemap | Encoding
-
command sitemap_EntityEscape @someURL
   -- see http://www.sitemaps.org/protocol.html#escaping
   
   text_Utf8Encode someURL
   set the itemdelimiter to "/"
   repeat with itemNum = 1 to the number of items of someURL
      put urlencode (item itemNum of someURL) into item itemNum of someURL
   end repeat
   -- maybe some others need escaping, maybe none of these are actually needed
   replace "%3A" with ":" in someURL
   replace "%26" with "&" in someURL
   replace "%3D" with "=" in someURL
   xml_Escape someURL
end sitemap_EntityEscape

command text_Utf8Encode @someText
   -- put unidecode(uniencode(someText),"UTF8") into someText
   put uniencode (someText) into someU16
   put unidecode (someU16,"UTF8") into someText
end text_Utf8Encode

command xml_Escape @someText
   replace "&" with "&amp;" in someText
   replace "<" with "&lt;" in someText
   replace ">" with "&gt;" in someText
   replace "'" with "&apos;" in someText
   replace quote with "&quot;" in sometext
end xml_Escape


--> Private | Sitemap
-
private command _addImageXML @urlXML, pImageUrl
   if pImageUrl is not empty then
      put xml_Enclose (pImageUrl, "image:loc", false) & CR into imageLocTag
      put xml_Enclose (imageLocTag, "image:image", true) into imageXML
      put imageXML & CR after urlXML
   end if
end _addImageXML

private command _addPageMapXML @urlXML, pageMapXML
   if pageMapXML is not empty then
      put pageMapXML after urlXML
      put CR after urlXML
   end if
end _addPageMapXML

private command _addPriorityXML @urlXML, pPriority
   if pPriority is a number then
      put xml_Enclose (pPriority, "priority", false) after urlXML
      put CR after urlXML
   end if
end _addPriorityXML

private command _setPageMapXML @pageMapXML, pPageType
   if pPageType is empty then
      put empty into pageMapXML
   else
      put "http://www.google.com/schemas/sitemap-pagemap/1.0" into pagemapNameSpace
      put xml_Enclose (pageType, "Attribute", false, "name", "pagetype") into attributeXML
      put xml_Enclose (attributeXML, "DataObject", true, "type", "document") into dataObjectXML
      put xml_Enclose (dataObjectXML, "PageMap", true, "xmlns", pagemapNameSpace) into pageMapXML
   end if
end _setPageMapXML
   

--> Deps
-
function url_Construct siteRoot, pPath, pShortFile
   text_AddTrailing siteRoot, "/"
   put siteRoot into someURL
   if pPath is empty then return someURL -- could add index
   
   text_TopAndTail pPath, "/"
   put pPath after someURL
   
   if pShortFile is empty then return someURL
   
   text_AddTrailing someURL, "/"
   put pShortFile after someURL
   return someURL
end url_Construct

command text_TopAndTail @someText, someChar
   if char 1 of someText is someChar then delete char 1 of someText
   if char -1 of someText is someChar then delete char -1 of someText
end text_TopAndTail

command text_AddTrailing @someText, someChar
   if char -1 of someText is not someChar then
      put someChar after someText
   end if
end text_AddTrailing

function date_ConstructWc3Datetime someDate
   -- extended is true:  1981-04-05T14:30:30-05:00
   put date_Construct8601 (someDate, true, true) into someDate
   replace space with empty in someDate
   return someDate
end date_ConstructWc3Datetime

command date_Wc3Datetime @revisionDate
   -- https://www.w3.org/TR/NOTE-datetime
   
   replace "T" with return in revisionDate
   put line 1 of revisionDate into someDate
   put line 2 of revisionDate into someTime
   
   replace "-" with comma in someDate
   
   set the itemdelimiter to "+"
   put item 1 of someTime into colonTime
   put item 2 of someTime into colonTimeDifference
   replace ":" with empty in colonTimeDifference
   put format("%04d", colonTimeDifference) into timeDifference
   -- put ":" after char 2 of timeDifference
   
   replace ":" with comma in colonTime
   
   set the itemdelimiter to comma
   put someDate into someDateItems
   put colonTime into item 4 of someDateItems
   
   put 0 into item 7 of someDateItems
   
   convert someDateItems to internet date
   put timeDifference into char -4 to -1 of someDateItems
   -- replace space with empty in someDateItems
   
   put someDateItems into revisionDate
end date_Wc3Datetime

function date_Construct8601 someDate, extended, convertToUTC
    -- extended is true:  1981-04-05T14:30:30-05:00
    -- extended is false: 19810405T14:30:30-05 00
    
    convert someDate to internet date
    put word -1 of someDate into utcOffset
     
    convert someDate to dateItems
    put item 1 of someDate into y
    put item 2 of someDate into mons
    put item 3 of someDate into d
    put item 4 of someDate into h
    put item 5 of someDate into mins
    put item 6 of someDate into s
    
    if convertToUTC is true then
        put char 2 to 3 of utcOffset into extraHours
        put char 4 to 5 of utcOffset into extraMin
         
        if char 1 of utcOffset is "+" then
            add extraHours to h
            add extraMin to m
        else
            subtract extraHours from h
            subtract extraMin from m
        end if
        
        if extended is true then
            put "%04d-%02d-%02dT%02d:%02d:%02d" into baseString
        else
            put "%04d%02d%02dT%02d:%02d:%02d" into baseString
        end if
        put format(baseString, y, mons, d, h, mins, s) into fDate
        if char -3 to -1 of fDate = ":00" then delete char -3 to -1 of fDate
        return fDate & " Z"
    else
        if extended is true then
            put "%04d-%02d-%02dT%02d:%02d:%02d %s" into baseString
        else
            put "%04d%02d%02dT%02d:%02d:%02d %s" into baseString
        end if
        put format(baseString, y, mons, d, h, mins, s, utcOffset) into fDate
        return fDate
    end if
end date_Construct8601

command date_Convert8601 @revisionDate
   -- converts to "internet date"
   replace "T" with return in revisionDate
   put line 1 of revisionDate into someDate
   
   put line 2 of revisionDate into someTime
   put last char of someTime into timeZoneThing
   delete last char of someTime
   
   replace "-" with comma in someDate
   
   set the itemdelimiter to "."
   put item 1 of someTime into colonTime
   put item 2 of someTime into colonSeconds
   replace ":" with comma in colonTime
   
   set the itemdelimiter to comma
   put someDate into someDateItems
   put colonTime into item 4 of someDateItems
   
   put 0 into item 7 of someDateItems
   convert someDateItems to internet date
   put someDateItems into revisionDate
end date_Convert8601
