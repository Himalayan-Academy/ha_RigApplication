<?rev

# DECLARE GLOBAL VARIABLES gControllerHandlers AND gData
global gControllerHandlers, gData, gBookData,gRealm,gZone,gPage

# PUT YOUR METHOD NAMES  INTO THE GLOBAL gControllerHandlers AS A COMMA SEPARATED LIST
put "books,index,bookinfo,getformat,viewer,viewbook,gifts,epub" into gControllerHandlers

# PUT ALL THE VARIABLES TO BE MERGED WITH VIEWS INTO THE ARRAY VARIABLE gData

# WRITE INITIAL STATEMENTS INTO THE CONTROLLER HANDLER AND CALL IT AT THE END OF THE FILE


command books
			# rigLogMessage "debug", "server root:" & $_SERVER["DOCUMENT_ROOT"]
			# 	rigLogMessage "debug", "books controller loading:" && $_SERVER["QUERY_STRING"]
			# 	if there is a file ($_SERVER["DOCUMENT_ROOT"] & $_SERVER["QUERY_STRING"]) then
			# 		rigLogMessage "debug", "sending raw file"
			# 		put url ("binfile:" &$_SERVER["DOCUMENT_ROOT"] & $_SERVER["QUERY_STRING"])
			# 		quit
			# 	end if
			# SAVE PAGE IN CACHE DIRECTORY WITH AN EXPIRATION TIME OF n MINUTES
			# NOTE: THIS IS NOT MANDATORY, DON'T USE CACHING WHILE WORKING ON THE CODE,
			# OTHERWISE YOU WON'T SEE YOUR CHANGES IMMEDIATELY
			# rigOutputCache 3
			# rigLoadModel "get-book-data"
			# 	put getBookData() into gBookData

    put rigFetchSegment(2, 0) into gRealm # top level - depth of URLs this is the command invoked above
    put rigFetchSegment(3, 0) into gZone  # second depth: use as a parameter in the command
    put rigFetchSegment(4, 0) into gPage  # pages in this realm-zone; another param you can use
    
    rigLoadLibrary "Getsetheadnav" # required opening for all pages
	rigLoadLibrary "dotted-slideshow" # use as needed, or not
	rigLoadLibrary "pagemetadata" 	
	rigLoadLibrary "cms"
	rigLoadLibrary "lorempixel"
	rigLoadHelper "asset"
    rigLoadPlugin "galleria"
     
end books

# THIS COMMAND WILL BE CALLED IF NONE IS SPECIFIED IN THE URI

command index
     put url("file:/home/devhap/public_html/html/monastery/about/monastery-sidebar.html")  into gData["sideBar"]
	put "Read and Learn - A Rich World of Himalayan Academy Publications" into gData["pageTitle"] 
	
    put getSetHeadNav("landing","Read &amp; Learn",">Read &amp; Learn<","") into gData["pageHeader"]			 
	put cmsParseXMLDataFile("/books/index.xml") into gData["modules"]
	get rigLoadView("sitewide/landing", gData)
end index


################ OLD HANDLERS FROM MAY-JUNE 2011 FROM ANDRE EARLIER EBOOK WORK 

# command getFormat
# 	put rigRUriToAssoc(3) into tDataA
# 	switch tDataA["format"]
# 		case "web"
# 			rigRedirect ("/books/viewer/file_id/" & tDataA["file_id"])
# 		break
# 	end switch
# end getFormat
# 
# function bookpath pID, pFile
# 	return ($_SERVER["DOCUMENT_ROOT"] & "/books/" & pID & "/" & pFile)
# end bookpath
# 
# command sender
# 	put rigRUriToAssoc(3) into tFileID
# 	put rigRUriToAssoc(4) into tRest
# 	rigLogMessage "debug", "sender:" && tFileID && tRest
# end sender
# 	
# 
# command viewer
# 	rigLoadLibrary "epub"
# 	put rigRUriToAssoc(3) into tDataA
# 	if tDataA["display"] is not empty then
# 		put tDataA["display"] into tChapterToDisplay
# 		put tChapterToDisplay+1 into gData["book"]["next_chapter"]
# 		put tChapterToDisplay-1 into gData["book"]["previous_chapter"]
# 		delete variable tDataA["display"]
# 	else
# 		put 1 into tChapterToDisplay
# 		put 2 into gData["book"]["next_chapter"]
# 		put 1 into gData["book"]["previous_chapter"]
# 	end if
# 	put findBookByArray(tDataA) into tBookA
# 	put tBookA[1]["file_id"] into tFileID
# 	put getBookFormat(tBookA[1],"epub") into tEpubA
# 	if  tEpubA["filename"] is empty then
# 		put tFileID & ".epub" into  tEpubA["filename"]
# 	end if
# 	put tFileID into gData["book"]["file_id"]
# 	put tItemID into gData["book"]["item_id"]
# 	
# 	put bookPath(tFileID, tEpubA["filename"]) into tFilePath	
# 	epubOpen tFileID, tFilePath
# 	
# 	put epubTOC(tFileID) into gData["book"]["toc"]
# 	put epubSpineItem(tFileID,tChapterToDisplay) into tBaseURL
# 	set the itemdel to slash
# 	put item 1 to -2 of tBaseURL into tBaseURL
# 	ePubRegisterBaseURL ("/books/" & tFileID & "/web/" & tBaseURL)
# 	rigLogMessage "debug", "base url:" && ePubBaseURL()
# 	rigLogMessage "debug", ("first page:" && ("binfile:" & epubPathForSpineItem(tFileID,tChapterToDisplay)))
# 	put url ("binfile:" & epubPathForSpineItem(tFileID,tChapterToDisplay)) into gData["book"]["body"]
# 	put rigLoadView("epub/head", TRUE) into tHead
# 	put rigLoadView("epub/footer", TRUE) into tFooter
# 	replace "<head>" with tHead in  gData["book"]["body"]
# 	replace "<body>" with "<body> <div id='page-content'>" in  gData["book"]["body"]
# 	replace "</body>" with tFooter in  gData["book"]["body"]
# 	get rigLoadView("epub/body")
# end viewer 
# 
# 
# 
# 
# 
# 
# command bookinfo
# 	put rigRUriToAssoc(3) into tBookToFindA
# 	 put findBookByArray(tBookToFindA) into tBookA
# 	 if tBookA is not false then
# 			put tBookA[1] into gData["book"]
# 	 end if
# 
# 	 # GENERATING METADATA
# 
# 	 -- GET FORMAT
# 	put empty into tBuf
# 	if the keys of gData["book"]["formats"] is empty then
# 	   put empty into gData["meta"]["format"]
# 	end if
# 	put format("<p class=\"formats\"><b>&nbsp;&nbsp;&nbsp;Formats:&nbsp;&nbsp;&nbsp;</b>") after tBuf
# 	repeat for each key tC in gData["book"]["formats"]
# 	   put gData["book"]["formats"][tC] into tFormat
# 	   switch tFormat["format_name"]
# 	      case "web"
# 	         put "/books/viewbook/" & gData["book"]["file_id"] into tFormat["url"]
# 	         break
# 	      case "epub"
# 	         put "/book/" & gData["book"]["file_id"] & "/epub" into tFormat["url"]
# 	         break
# 	      case "nook"
# 	         put "/book/" & gData["book"]["file_id"] & "/nook" into tFormat["url"]
# 	         break
# 	      case "pdf"
# 	         put "/book/" & gData["book"]["file_id"] & "/pdf" into tFormat["url"]
# 	      case "print"
# 	         repeat for each key tC in gData["book"]["channels"]
# 	            put gData["book"]["channels"][tC] into tChannel
# 	            if tChannel["channel_name"] is "Minimela" then
# 	               put tChannel["url"] into tFormat["url"]
# 	            end if
# 	         end repeat  
# 	         break 
# 	   end switch
# 	   if tFormat["url"] is not empty then
# 	      put format("<a href=\"%s\">%s</a> | ", tFormat["url"], tFormat["format_name"]) after tBuf
# 	   else
# 	      put format("%s | ", tFormat["format_name"]) after tBuf
# 	   end if
# 	end repeat
# 	delete char -3 to -1 of tBuf
# 	put (tBuf & "</p>") into gData["meta"]["format"]
# 
# 
# 
# 
# 	#put rigLoadView("sitewide/top-banner") into gData["siteWideBanner"] 
#      put rigImageAsset("masthead/KHM-logo.png",,,TRUE) into gData["khmLogo"]
#      put rigImageAsset("sitewide/thin-orange-border.png",,,TRUE) into gData["thinBorder"]
# 	put rigCssAsset("books.css",,,TRUE) into gData["booksCSS"]
#      put rotateMastheadBackground() into gData["mastheadBackground"]
# 	# SET PAGE TITLE
# 	put "Books by Himalayan Academy" into gData["pageTitle"]
# 
# 	# LOAD THE VIEW FILE
# 	get rigLoadView("sitewide/head")	 	
# 	get rigLoadView("books/books-masthead")
# 	get rigLoadView("sitewide/main-nav")
# 	get rigLoadView("books/books-main-content")
# 	get rigLoadView("books/books-bottom-content")
# 	#get rigLoadView("sitewide/bottom-nav")
# 	get rigLoadView("sitewide/footer")
# end bookinfo
# 
# command viewbook
# 	rigLogMessage "info", "handler viewbook"
# 	put rigFetchSegment(3) into tBookA["file_id"]
# 	 put findBookByArray(tBookA) into tBookA
# 	 if tBookA is not false then
# 			put tBookA[1] into gData["book"]
# 	 end if
# 	put format("/book/%s/web", tBookA[1]["file_id"]) into gData["url"]
# 	## comment the following line to remove top banner
# 	# put rigLoadView("sitewide/top-banner") into gData["siteWideBanner"] 
#      put rigImageAsset("masthead/KHM-logo.png",,,TRUE) into gData["khmLogo"]
#      put rigImageAsset("sitewide/thin-orange-border.png",,,TRUE) into gData["thinBorder"]
# 	put rigCssAsset("books.css",,,TRUE) into gData["booksCSS"]
#      put rotateMastheadBackground() into gData["mastheadBackground"]
# 	# SET PAGE TITLE
# 	put "Books by Himalayan Academy" into gData["pageTitle"]
# 
# 	# LOAD THE VIEW FILE
# 	get rigLoadView("sitewide/head")	 	
# 	get rigLoadView("books/books-masthead")
# 	get rigLoadView("sitewide/main-nav")
# 	get rigLoadView("books/books-main-viewer")
# 	get rigLoadView("books/books-bottom-content")
# 			#get rigLoadView("sitewide/bottom-nav")
# 	get rigLoadView("sitewide/footer")
# end viewbook
# 
command gifts

put "Free Ebooks" into gData["pageTitle"]  
			
		put getSetHeadNav("skinny","Books",">Read &amp; Learn<","cat-books active") into gData["pageHeader"]
		put "" into gData["sideBar"]
		put url("file:/home/devhap/public_html/html/readlearn//books/ebook-gifts.html") into gData["singleArticle"]	
		
		get rigLoadView("sitewide/two-column")

end gifts

command epub

 if gZone = 0 then 
	   # this is the landing page for epub if we need it
       # right now we don't have one...
       
   else # we have another, 3rd  segment
      	
			
	put getSetHeadNav("skinny","Books",">Read &amp; Learn<","cat-books active") into gData["pageHeader"]
	put "" into gData["sideBar"]
		
		switch gZone # third segment in the URL 
		
			case "info"
				put "How to Use Your Ebook Files" into gData["pageTitle"]  		
				put url("file:/home/devhap/public_html/html/readlearn/books/epub-info.html") into gData["singleArticle"]	 	 
			break
				
			case "gifts"
				put "Free Ebooks" into gData["pageTitle"]  
				put url("file:/home/devhap/public_html/html/readlearn//books/ebook-gifts.html") into gData["singleArticle"]
					
			break	
				
		end switch
		
		get rigLoadView("sitewide/two-column")
				
	end if
		       


end epub






# CALL THE CONTROLLER HANDLER


--| END OF books.irev
--| Location: ./system/application/ha/controllers/books.irev
----------------------------------------------------------------------