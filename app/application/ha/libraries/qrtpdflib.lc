<?revput gBASEPATH into gBASEPATHif gBASEPATH is "gBASEPATH" then    put "No direct script access allowed."    exit to topend if# LOGGINGrigLogMessage "debug", "Qrtpdflib Library Loaded"--> constantsconstant kLibVersion = "1.1.5"constant kPdfProducer = "Quartam PDF Library for LiveCode"constant kLibDebugMode = "false"--> comma-separated lists for assertionsconstant kSupportedAligns = "left,center,right,justify,leftjustify,centerjustify,rightjustify"constant kSupportedBlendModes = "Normal,Multiply,Screen,Overlay,Darken,Lighten,ColorDodge,ColorBurn,HardLight,SoftLight,Difference,Exclusion,Hue,Saturation,Color,Luminosity"constant kSupportedCapTypes = "butt,round,square"constant kSupportedFitModes = "DontFit,Clip,Space,Scale,AlwaysSpace,AlwaysScale"constant kSupportedFontFamilies = "Arial,Courier,Helvetica,Symbol,Times,ZapfDingbats"constant kSupportedImageTypes = "PNG,JPG,JPEG"constant kSupportedImagePositioningTypes = "exact,pixel"constant kSupportedJoinTypes = "miter,round,bevel"--> settings property namesconstant kp_MacToISO = "MacToISO"constant kp_ImageInterpolation = "ImageInterpolation"constant kp_ImageIntentPerceptual = "ImageIntentPerceptual"constant kp_ImagePositioning = "ImagePositioning"--> document property namesconstant kp_PdfVersion = "PdfVersion"constant kp_CurrentState = "CurrentState"constant kp_CurrentObject = "CurrentObject"constant kp_CurrentPage = "CurrentPage"constant kp_NumberOfPages = "NumberOfPages"constant kp_OrientationChanges = "OrientationChanges"constant kp_DefaultOrientation = "DefaultOrientation"constant kp_CurrentOrientation = "CurrentOrientation"constant kp_ScaleFactor = "ScaleFactor"constant kp_PageWidth = "PageWidth"constant kp_PageWidthPt = "PageWidthPt"constant kp_PageHeight = "PageHeight"constant kp_PageHeightPt = "PageHeightPt"constant kp_CurrentWidth = "CurrentWidth"constant kp_CurrentWidthtPt = "CurrentWidthPt"constant kp_CurrentHeight = "CurrentHeight"constant kp_CurrentHeightPt = "CurrentHeightPt"constant kp_CurrentX = "CurrentX"constant kp_CurrentY = "CurrentY"constant kp_LeftMargin = "LeftMargin"constant kp_RightMargin = "RightMargin"constant kp_TopMargin = "TopMargin"constant kp_BoxMargin = "BoxMargin"constant kp_PageBreakFlag = "PageBreakFlag"constant kp_PageBreakMargin = "PageBreakMargin"constant kp_PageBreakTrigger = "PageBreakTrigger"--> colorsconstant kp_DrawColor_PDF = "DrawColor_PDF"constant kp_DrawColor_LC = "DrawColor_LC"constant kp_FillColor_PDF = "FillColor_PDF"constant kp_FillColor_LC = "FillColor_LC"constant kp_TextColor_PDF = "TextColor_PDF"constant kp_TextColor_LC = "TextColor_LC"constant kp_TextColorFlag = "TextColorFlag"--> line optionsconstant kp_LineWidth = "LineWidth"constant kp_LineCap = "LineCap"constant kp_LineJoin = "LineJoin"constant kp_LineDashes = "LineDashes"constant kp_LinePhase = "LinePhase"--> fontsconstant kp_FontFamily = "FontFamily"constant kp_FontStyle = "FontStyle"constant kp_FontSize = "FontSize"constant kp_FontSizePt = "FontSizePt"constant kp_TextAlign = "TextAlign"constant kp_UnderlineFlag = "UnderlineFlag"constant kp_WordSpacing = "WordSpacing"constant kp_CurrentFont = "CurrentFont"--> metadataconstant kp_Title = "Title"constant kp_Author = "Author"constant kp_Keywords = "Keywords"constant kp_Subject = "Subject"constant kp_Creator = "Creator"--> linksconstant kp_LinkList = "LinkList"--> fontsconstant kp_FontList = "FontList"constant kp_FONT_Object = "FONT_Object"--> imagesconstant kp_ImageList = "ImageList"constant kp_IMG_Width = "IMG_Width"constant kp_IMG_Height = "IMG_Height"constant kp_IMG_ColorSpace = "IMG_ColorSpace"constant kp_IMG_BitsPerComponent = "IMG_BitsPerComponent"constant kp_IMG_Filter = "IMG_Filter"constant kp_IMG_Params = "IMG_Params"constant kp_IMG_MaskData = "IMG_MaskData"constant kp_IMG_SMaskData = "IMG_SMaskData"constant kp_IMG_Data = "IMG_Data"constant kp_IMG_Palette = "IMG_Palette"constant kp_IMG_Object = "IMG_Object"--> bookmarksconstant kp_OutlineRoot = "OutlineRoot"constant kp_BookmarkList = "BookmarkList"constant kp_BM_Title = "BM_Title"constant kp_BM_Level = "BM_Level"constant kp_BM_YComplement = "BM_YComplement"constant kp_BM_PageNumber = "BM_PageNumber"constant kp_BM_Actual = "BM_Actual"constant kp_BM_Parent = "BM_Parent"constant kp_BM_First = "BM_First"constant kp_BM_Last = "BM_Last"constant kp_BM_Next = "BM_Next"constant kp_BM_Prev = "BM_Prev"--> extended graphics statesconstant kp_ExtGStateCount = "ExtGStateCount"constant kp_ExtG_StateParams = "EXTG_StateParams"constant kp_ExtG_Object = "EXTG_Object"--> shadersconstant kp_ShaderCount = "ShaderCount"constant kp_Shader_Type = "Shader_Type"constant kp_Shader_StartColor = "Shader_StartColor"constant kp_Shader_EndColor = "Shader_EndColor"constant kp_Shader_Coords = "Shader_Coords"constant kp_Shader_Object = "Shader_Object"--> miscconstant kp_ClippingSet = "ClippingSet"constant kp_ExtGStateId = "ExtGStateId"constant kp_TransformationSet = "TransformationSet"constant kp_ZoomMode = "ZoomMode"constant kp_LayoutMode = "LayoutMode"constant kp_CompressionFlag = "CompressionFlag"constant kp_ImageScale = "ImageScale"constant kp_InFooterFlag = "InFooter"constant kp_LastLineHeight = "LastLineHeight"constant kp_CallbackObject = "CallbackObject"constant kp_Buffer = "Buffer"constant kp_XRefOffset = "XRefOffset"--> subsetsconstant kp_Saved = "SavedSettings"constant kp_Bookmarks = "Bookmarks"constant kp_Images = "Images"constant kp_PageBuffers = "PageBuffers"constant kp_PageLinks = "PageLinks"constant kp_ExtGStates = "ExtGStates"constant kp_Shaders = "Shaders"constant kp_Fonts = "Fonts"constant kp_Offsets = "Offsets"--> statesconstant kp_State_Created = 0constant kp_State_Waiting = 1constant kp_State_Drawing = 2constant kp_State_Closing = 3constant kp_State_Closed = 4--> font property namesconstant kp_Font_Name = "Name"constant kp_Font_CharWidths = "CharWidths"constant kp_Font_Up = "Up"constant kp_Font_Ut = "Ut"-- pseudo constantslocal kScaleFactorsAlocal kColorNamesAlocal kPageFormatsAlocal kCoreFontsA-- script local variableslocal sSettingsAlocal sDocumentsAcommand rigRunInitialQrtpdflibConfig pConfig    qrtPDF_ResetAllend rigRunInitialQrtpdflibConfig	--> library handlers########### ### The following two handlers we don't need to run:# on libraryStack#   qrtPDF_InitLibrary# end libraryStack# command qrtPDF_InitLibrary#   qrtPDF_ResetAll# end qrtPDF_InitLibrary###########command qrtPDF_ResetAll   put (the platform is "MacOS") into sSettingsA[kp_MacToISO]   put false into sSettingsA[kp_ImageInterpolation]   put false into sSettingsA[kp_ImageIntentPerceptual]   put empty into sDocumentsA   --> load the pseudo constants   p_qrtPDF_LoadColorNames   p_qrtPDF_LoadCoreFonts   p_qrtPDF_LoadPageFormats   p_qrtPDF_LoadScaleFactorsend qrtPDF_ResetAllfunction qrtPDF_VersionNumber   return kLibVersionend qrtPDF_VersionNumber--> global settingscommand qrtPDF_SetMacToISO pFlag   p_qrtPDF_AssertFlag kp_MacToISO, pFlag   put pFlag into sSettingsA[kp_MacToISO]end qrtPDF_SetMacToISOfunction qrtPDF_GetMacToISO   return sSettingsA[kp_MacToISO]end qrtPDF_GetMacToISOcommand qrtPDF_SetImageInterpolation pFlag   p_qrtPDF_AssertFlag kp_ImageInterpolation, pFlag   put pFlag into sSettingsA[kp_ImageInterpolation]end qrtPDF_SetImageInterpolationfunction qrtPDF_GetImageInterpolation   return sSettingsA[kp_ImageInterpolation]end qrtPDF_GetImageInterpolationcommand qrtPDF_SetImageIntentPerceptual pFlag   p_qrtPDF_AssertFlag kp_ImageIntentPerceptual, pFlag   put pFlag into sSettingsA[kp_ImageIntentPerceptual]end qrtPDF_SetImageIntentPerceptualfunction qrtPDF_GetImageIntentPerceptual   return sSettingsA[kp_ImageIntentPerceptual]end qrtPDF_GetImageIntentPerceptualcommand qrtPDF_SetImagePositioning pPositioning   p_qrtPDF_AssertImagePositioning pPositioning   put pPositioning into sSettingsA[kp_ImagePositioning]end qrtPDF_SetImagePositioningfunction qrtPDF_GetImagePositioning   return sSettingsA[kp_ImagePositioning]end qrtPDF_GetImagePositioning-- license key (obsolete)command qrtPDF_InitLicense pLicenseKey   -- noopend qrtPDF_InitLicense-- create and delete documentsfunction qrtPDF_CreateDocument pOrientation, pUnit, pPageFormat   ## STEP 1 :: assign default values   if pOrientation is empty then       put "portrait" into pOrientation   end if   if pUnit is empty then       put "mm" into pUnit   end if   if pPageFormat is empty then       put "A4" into pPageFormat   end if      ## STEP 2 :: check the parameters and shorten if need be   p_qrtPDF_AssertOrientation pOrientation   p_qrtPDF_AssertUnit pUnit   p_qrtPDF_AssertPageFormat pPageFormat      ## STEP 3 :: proceed with setting up the data   -- generate the document reference   local tDocId   put item 2 of line 1 of the extents of sDocumentsA into tDocId   add 1 to tDocID   -- assign the document properties' start values   put "1.3" into sDocumentsA[tDocID][kp_PdfVersion]   put kp_State_Created into sDocumentsA[tDocID][kp_CurrentState]   put 2 into sDocumentsA[tDocID][kp_CurrentObject]   put 0 into sDocumentsA[tDocID][kp_CurrentPage]   put 0 into sDocumentsA[tDocID][kp_NumberOfPages]   --> scale factor   put kScaleFactorsA[pUnit] into sDocumentsA[tDocID][kp_ScaleFactor]   --> page format   if pPageFormat is a point then      put (item 1 of pPageFormat) * sDocumentsA[tDocID][kp_ScaleFactor] into sDocumentsA[tDocID][kp_PageWidthPt]      put (item 2 of pPageFormat) * sDocumentsA[tDocID][kp_ScaleFactor] into sDocumentsA[tDocID][kp_PageHeightPt]   else      local tPageSizePt      put kPageFormatsA[pPageFormat] into tPageSizePt      put item 1 of tPageSizePt into sDocumentsA[tDocID][kp_PageWidthPt]      put item 2 of tPageSizePt into sDocumentsA[tDocID][kp_PageHeightPt]   end if   put sDocumentsA[tDocID][kp_PageWidthPt] / sDocumentsA[tDocID][kp_ScaleFactor] into sDocumentsA[tDocID][kp_PageWidth]    put sDocumentsA[tDocID][kp_PageHeightPt] / sDocumentsA[tDocID][kp_ScaleFactor] into sDocumentsA[tDocID][kp_PageHeight]    --> orientation   put pOrientation into sDocumentsA[tDocID][kp_DefaultOrientation]   put pOrientation into sDocumentsA[tDocID][kp_CurrentOrientation]   --> current width and height   if pOrientation is "p" then      put sDocumentsA[tDocID][kp_PageWidthPt] into sDocumentsA[tDocID][kp_CurrentWidthtPt]      put sDocumentsA[tDocID][kp_PageHeightPt] into sDocumentsA[tDocID][kp_CurrentHeightPt]   else      put sDocumentsA[tDocID][kp_PageHeightPt] into sDocumentsA[tDocID][kp_CurrentWidthtPt]      put sDocumentsA[tDocID][kp_PageWidthPt] into sDocumentsA[tDocID][kp_CurrentHeightPt]   end if   put sDocumentsA[tDocID][kp_CurrentWidthtPt] / sDocumentsA[tDocID][kp_ScaleFactor] into sDocumentsA[tDocID][kp_CurrentWidth]    put sDocumentsA[tDocID][kp_CurrentHeightPt] / sDocumentsA[tDocID][kp_ScaleFactor] into sDocumentsA[tDocID][kp_CurrentHeight]    --> margins   -- page margins (1cm)   local tMargin   put 28.35 / sDocumentsA[tDocID][kp_ScaleFactor] into tMargin   put tMargin into sDocumentsA[tDocID][kp_LeftMargin]   put tMargin into sDocumentsA[tDocID][kp_TopMargin]   put tMargin into sDocumentsA[tDocID][kp_RightMargin]   -- interior cell margin (1mm)   put tMargin / 10 into sDocumentsA[tDocID][kp_BoxMargin]   -- automatic page break   put true into sDocumentsA[tDocID][kp_PageBreakFlag]   put tMargin * 2 into sDocumentsA[tDocID][kp_PageBreakMargin]   put sDocumentsA[tDocID][kp_CurrentHeight] - sDocumentsA[tDocID][kp_PageBreakMargin] into sDocumentsA[tDocID][kp_PageBreakTrigger]   --> colors   put "black" into sDocumentsA[tDocID][kp_DrawColor_LC]   put "0 G" into sDocumentsA[tDocID][kp_DrawColor_PDF]   put "black" into sDocumentsA[tDocID][kp_FillColor_LC]   put "0 g" into sDocumentsA[tDocID][kp_FillColor_PDF]   put "black" into sDocumentsA[tDocID][kp_TextColor_LC]   put "0 g" into sDocumentsA[tDocID][kp_TextColor_PDF]   put false into sDocumentsA[tDocID][kp_TextColorFlag]   --> line settings   -- line width (0.2mm)   put 0.567 / sDocumentsA[tDocID][kp_ScaleFactor] into sDocumentsA[tDocID][kp_LineWidth]   -- other options   put "butt" into sDocumentsA[tDocID][kp_LineCap]   put "miter" into sDocumentsA[tDocID][kp_LineJoin]   put empty into sDocumentsA[tDocID][kp_LineDashes]   put 0 into sDocumentsA[tDocID][kp_LinePhase]   --> display mode   put "fullwidth" into sDocumentsA[tDocID][kp_ZoomMode]   put "continuous" into sDocumentsA[tDocID][kp_LayoutMode]   --> compression   put false into sDocumentsA[tDocID][kp_CompressionFlag]   --> text settings   put "Helvetica" into sDocumentsA[tDocID][kp_FontFamily]   put empty into sDocumentsA[tDocID][kp_FontStyle]   put 12 into sDocumentsA[tDocID][kp_FontSizePt]   put "left" into sDocumentsA[tDocID][kp_TextAlign]   put false into sDocumentsA[tDocID][kp_UnderlineFlag]   put 0 into sDocumentsA[tDocID][kp_WordSpacing]   --> misc settings   put 100 into sDocumentsA[tDocID][kp_ImageScale]   put false into sDocumentsA[tDocID][kp_InFooterFlag]   put 0 into sDocumentsA[tDocID][kp_LastLineHeight]      ## finally return the new document ID   return tDocIDend qrtPDF_CreateDocumentcommand qrtPDF_DeleteDocument pDocID   p_qrtPDF_AssertDocID pDocID, 99   delete variable sDocumentsA[pDocId]end qrtPDF_DeleteDocumentcommand qrtPDF_DeleteAllDocuments   put empty into sDocumentsAend qrtPDF_DeleteAllDocumentsfunction qrtPDF_Documents   local tDocuments   put the keys of sDocumentsA into tDocuments   replace return with comma in tDocuments   return tDocumentsend qrtPDF_Documents--> open/close methodscommand qrtPDF_OpenDocument pDocID   p_qrtPDF_AssertDocID pDocID, kp_State_Created   put kp_State_Waiting into sDocumentsA[pDocID][kp_CurrentState]end qrtPDF_OpenDocumentcommand qrtPDF_CloseDocument pDocID   p_qrtPDF_AssertDocID pDocID   -- terminate the document   if sDocumentsA[pDocID][kp_CurrentState] = kp_State_Closed then       exit qrtPDF_CloseDocument   else if sDocumentsA[pDocID][kp_CurrentPage] = kp_State_Created then       qrtPDF_CreatePage pDocID   end if   -- handle the last footer   p_qrtPDF_TriggerFooter pDocID   -- close the last page   p_qrtPDF_EndPage pDocID   -- close the document   p_qrtPDF_EndDoc pDocIDend qrtPDF_CloseDocument--> output methodscommand qrtPDF_OutputDocument pDocID, pFilePath, pFileType   p_qrtPDF_AssertDocID pDocID, 99   if pFileType is empty then       put "????????" into pFileType   end if   p_qrtPDF_AssertFileType pFileType   -- finish document if necessary   if sDocumentsA[pDocID][kp_CurrentState] < kp_State_Closed then       qrtPDF_CloseDocument pDocID   end if   local tSavedFileType, tResult   put the fileType into tSavedFileType   set the fileType to pFileType   put sDocumentsA[pDocID][kp_Buffer] into URL("binfile:" & pFilePath)   put the result into tResult   set the fileType to tSavedFileType   if tResult is not empty then      throw "qrtPDFErr:" && tResult   end ifend qrtPDF_OutputDocumentcommand qrtPDF_SaveDocument pDocID, pFilePath, pFileType   -- redirect   qrtPDF_OutputDocument pDocID, pFilePath, pFileTypeend qrtPDF_SaveDocumentcommand qrtPDF_PutDocument pDocID   p_qrtPDF_AssertDocID pDocID, 99   -- finish document if necessary   if sDocumentsA[pDocID][kp_CurrentState] < kp_State_Closed then       qrtPDF_CloseDocument pDocID   end if   -- start by putting the HTTP headers   put header "Content-type: application/pdf"   put header "Content-length:" && (the number of bytes in sDocumentsA[pDocID][kp_Buffer])   -- now put the document buffer as HTTP payload   put sDocumentsA[pDocID][kp_Buffer]end qrtPDF_PutDocument-- property setter/getter pairscommand qrtPDF_SetImageScale pDocID, pScale   p_qrtPDF_AssertDocID pDocID   put pScale into sDocumentsA[pDocID][kp_ImageScale]end qrtPDF_SetImageScalefunction qrtPDF_GetImageScale pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_ImageScale]end qrtPDF_GetImageScalefunction qrtPDF_GetPageWidth pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_CurrentWidth]end qrtPDF_GetPageWidthfunction qrtPDF_GetPageHeight pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_CurrentHeight]end qrtPDF_GetPageHeightcommand qrtPDF_SetAutoPageBreak pDocID, pPageBreakFlag, pPageBreakMargin   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertFlag "pageBreakMode", pPageBreakFlag   p_qrtPDF_AssertNumber "pagebreakMargin", pPageBreakMargin   --    put pPageBreakFlag into sDocumentsA[pDocID][kp_PageBreakFlag]   p_qrtPDF_SetPageBreakMargin pDocID, pPageBreakMarginend qrtPDF_SetAutoPageBreakcommand qrtPDF_SetPageBreakMode pDocID, pPageBreakFlag   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertFlag "pageBreakMode", pPageBreakFlag   --   put pPageBreakFlag into sDocumentsA[pDocID][kp_PageBreakFlag]end qrtPDF_SetPageBreakModefunction qrtPDF_GetPageBreakMode pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_PageBreakFlag]end qrtPDF_GetPageBreakModecommand qrtPDF_SetPageBreakMargin pDocID, pMargin   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "pageBreakMargin", pMargin   --   p_qrtPDF_SetPageBreakMargin pDocId, pMarginend qrtPDF_SetPageBreakMarginfunction qrtPDF_GetPageBreakMargin pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_PageBreakMargin]end qrtPDF_GetPageBreakMarginfunction qrtPDF_GetScaleFactor pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_ScaleFactor]end qrtPDF_GetScaleFactorcommand qrtPDF_SetMargins pDocID, pLeftMargin, pTopMargin, pRightMargin   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "leftMargin", pLeftMargin   p_qrtPDF_AssertNumber "topMargin", pTopMargin   p_qrtPDF_AssertNumber "rightMargin", pRightMargin   --   put pLeftMargin into sDocumentsA[pDocID][kp_LeftMargin]   put pTopMargin into sDocumentsA[pDocID][kp_TopMargin]   if pRightMargin is not empty then       put pRightMargin into sDocumentsA[pDocID][kp_RightMargin]   else       put pLeftMargin into sDocumentsA[pDocID][kp_RightMargin]   end ifend qrtPDF_SetMarginsfunction qrtPDF_GetMargins pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_LeftMargin],sDocumentsA[pDocID][kp_TopMargin],sDocumentsA[pDocID][kp_RightMargin]end qrtPDF_GetMarginscommand qrtPDF_SetLeftMargin pDocID, pMargin   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "leftMargin", pMargin   --   put pMargin into sDocumentsA[pDocID][kp_LeftMargin]   if sDocumentsA[pDocID][kp_CurrentPage] > 0 and sDocumentsA[pDocID][kp_CurrentX] < pMargin then      put pMargin into sDocumentsA[pDocID][kp_CurrentX]   end ifend qrtPDF_SetLeftMarginfunction qrtPDF_GetLeftMargin pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_LeftMargin]end qrtPDF_GetLeftMargincommand qrtPDF_SetTopMargin pDocID, pMargin   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "topMargin", pMargin   --   put pMargin into sDocumentsA[pDocID][kp_TopMargin]end qrtPDF_SetTopMarginfunction qrtPDF_GetTopMargin pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_TopMargin]end qrtPDF_GetTopMargincommand qrtPDF_SetRightMargin pDocID, pMargin   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "rightMargin", pMargin   --   put pMargin into sDocumentsA[pDocID][kp_RightMargin]end qrtPDF_SetRightMarginfunction qrtPDF_GetRightMargin pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_RightMargin]end qrtPDF_GetRightMargincommand qrtPDF_SetDisplayMode pDocID, pZoom, pLayout   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertZoomMode pZoom   p_qrtPDF_AssertLayoutMode pLayout   --   put pZoom into sDocumentsA[pDocID][kp_ZoomMode]   put pLayout into sDocumentsA[pDocID][kp_LayoutMode]end qrtPDF_SetDisplayModecommand qrtPDF_SetZoomMode pDOCID, pZoom   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertZoomMode pZoom   --   put pZoom into sDocumentsA[pDocID][kp_ZoomMode]end qrtPDF_SetZoomModefunction qrtPDF_GetZoomMode pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_ZoomMode]end qrtPDF_GetZoomModecommand qrtPDF_SetLayoutMode pDOCID, pLayout   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertLayoutMode pLayout   --   put pLayout into sDocumentsA[pDocID][kp_LayoutMode]end qrtPDF_SetLayoutModefunction qrtPDF_GetLayoutMode pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_LayoutMode]end qrtPDF_GetLayoutModecommand qrtPDF_SetCompression pDocID, pCompressionFlag   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertFlag "compression", pCompressionFlag   --   put pCompressionFlag into sDocumentsA[pDocID][kp_CompressionFlag]end qrtPDF_SetCompressionfunction qrtPDF_GetCompression pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_CompressionFlag]end qrtPDF_GetCompressioncommand qrtPDF_SetTitle pDocID, pTitle   p_qrtPDF_AssertDocID pDocID   put pTitle into sDocumentsA[pDocID][kp_Title]end qrtPDF_SetTitlefunction qrtPDF_GetTitle pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_Title]end qrtPDF_GetTitlecommand qrtPDF_SetAuthor pDocID, pAuthor   p_qrtPDF_AssertDocID pDocID   put pAuthor into sDocumentsA[pDocID][kp_Author]end qrtPDF_SetAuthorfunction qrtPDF_GetAuthor pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_Author]end qrtPDF_GetAuthorcommand qrtPDF_SetCreator pDocID, pCreator   p_qrtPDF_AssertDocID pDocID   put pCreator into sDocumentsA[pDocID][kp_Creator]end qrtPDF_SetCreatorfunction qrtPDF_GetCreator pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_Creator]end qrtPDF_GetCreatorcommand qrtPDF_SetKeywords pDocID, pKeywords   p_qrtPDF_AssertDocID pDocID   put pKeywords into sDocumentsA[pDocID][kp_Keywords]end qrtPDF_SetKeywordsfunction qrtPDF_GetKeywords pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_Keywords]end qrtPDF_GetKeywordscommand qrtPDF_SetSubject pDocID, pSubject   p_qrtPDF_AssertDocID pDocID   put pSubject into sDocumentsA[pDocID][kp_Subject]end qrtPDF_SetSubjectfunction qrtPDF_GetSubject pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_Subject]end qrtPDF_GetSubject--> current / number of pagesfunction qrtPDF_GetCurrentPage pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_CurrentPage]end qrtPDF_GetCurrentPagefunction qrtPDF_GetNumberOfPages pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_NumberOfPages]end qrtPDF_GetNumberOfPages--> draw colorcommand qrtPDF_SetDrawColor pDocID, pR, pG, pB   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertColorTriplet pR, pG, pB   --   put pR,pG,pB into sDocumentsA[pDocID][kp_DrawColor_LC]   local tColor   if pR = pG and pR = pB then      -- color is a grayscale      put format("%.3f G", pR / 255) into tColor   else      put format("%.3f %.3f %.3f RG", pR / 255, pG / 255, pB / 255) into tColor   end if   put tColor into sDocumentsA[pDocID][kp_DrawColor_PDF]   if sDocumentsA[pDocID][kp_CurrentPage] > 0 then      p_qrtPDF_ATB pDocID, tColor   end ifend qrtPDF_SetDrawColorfunction qrtPDF_GetDrawColor pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_DrawColor_LC]end qrtPDF_GetDrawColor--> fill colorcommand qrtPDF_SetFillColor pDocID, pR, pG, pB   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertColorTriplet pR, pG, pB   --   put pR,pG,pB into sDocumentsA[pDocID][kp_FillColor_LC]   local tColor   if pR = pG and pR = pB then      -- color is a grayscale      put format("%.3f g", pR / 255) into tColor   else      put format("%.3f %.3f %.3f rg", pR / 255, pG / 255, pB / 255) into tColor   end if   put tColor into sDocumentsA[pDocID][kp_FillColor_PDF]   put sDocumentsA[pDocID][kp_TextColor_PDF] <> sDocumentsA[pDocID][kp_FillColor_PDF] into sDocumentsA[pDocID][kp_TextColorFlag]   if sDocumentsA[pDocID][kp_CurrentPage] > 0 then       p_qrtPDF_ATB pDocID, tColor   end ifend qrtPDF_SetFillColorfunction qrtPDF_GetFillColor pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_FillColor_LC]end qrtPDF_GetFillColor--> text colorcommand qrtPDF_SetTextColor pDocID, pR, pG, pB   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertColorTriplet pR, pG, pB   --   put pR,pG,pB into sDocumentsA[pDocID][kp_TextColor_LC]   local tColor   if pR = pG and pR = pB then      -- color is a grayscale      put format("%.3f g", pR / 255) into tColor   else      put format("%.3f %.3f %.3f rg", pR / 255, pG / 255, pB / 255) into tColor   end if   put tColor into sDocumentsA[pDocID][kp_TextColor_PDF]   put sDocumentsA[pDocID][kp_TextColor_PDF] <> sDocumentsA[pDocID][kp_FillColor_PDF] into sDocumentsA[pDocID][kp_TextColorFlag]end qrtPDF_SetTextColorfunction qrtPDF_GetTextColor pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_TextColor_LC]end qrtPDF_GetTextColor--> line settingscommand qrtPDF_SetLineWidth pDocID, pLineWidth   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "lineWidth", pLineWidth   --   put pLineWidth into sDocumentsA[pDocID][kp_LineWidth]   if sDocumentsA[pDocID][kp_CurrentPage] > 0 then       p_qrtPDF_ATB pDocID, format("%.2f w", pLineWidth * sDocumentsA[pDocID][kp_ScaleFactor])   end ifend qrtPDF_SetLineWidthfunction qrtPDF_GetLineWidth pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_LineWidth]end qrtPDF_GetLineWidthcommand qrtPDF_SetLineOptions pDocID, pCap, pJoin, pDashes, pPhase   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertCap pCap   p_qrtPDF_AssertJoin pJoin   p_qrtPDF_AssertDashes pDashes   if pPhase is empty then put 0 into pPhase   p_qrtPDF_AssertNumber "phase", pPhase   --   put pCap into sDocumentsA[pDocID][kp_LineCap]   put pJoin into sDocumentsA[pDocID][kp_LineJoin]   put pDashes into sDocumentsA[pDocID][kp_LineDashes]   put pPhase into sDocumentsA[pDocID][kp_LinePhase]   switch pCap      case "butt"         p_qrtPDF_ATB pDocID, "0 J"         break      case "join"         p_qrtPDF_ATB pDocID, "1 J"         break      case "square"         p_qrtPDF_ATB pDocID, "2 J"         break   end switch   switch pJoin      case "miter"         p_qrtPDF_ATB pDocID, "0 j"         break      case "round"         p_qrtPDF_ATB pDocID, "1 j"         break      case "bevel"         p_qrtPDF_ATB pDocID, "2 j"         break   end switch   if pDashes is not empty then      local tDashes      repeat for each item tDash in pDashes         put format("%2.f", tDash) & space after tDashes      end repeat      delete char -1 of tDashes      p_qrtPDF_ATB pDocID, format("[%s] %2.f d", tDashes, pPhase)   end ifend qrtPDF_SetLineOptions--> font settingsfunction qrtPDF_WidthOfString pDocID, pString   p_qrtPDF_AssertDocID pDocID   return p_qrtPDF_GetStringWidth(pDocID, pString)end qrtPDF_WidthOfStringcommand qrtPDF_SetFont pDocID, pFont, pStyle, pSize   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertFontName pFont   p_qrtPDF_AssertFontStyle pStyle   -- tweak the size param   if pSize is empty or pSize = 0 then put sDocumentsA[pDocID][kp_FontSizePt] into pSize   p_qrtPDF_AssertNumber "fontSize", pSize   -- tweak the font param   put lower(pFont) into pFont   if pFont is empty then put sDocumentsA[pDocID][kp_FontFamily] into pFont   if pFont = "arial" then put "helvetica" into pFont   if pFont is among the items of "symbol,zapfdingbats" then put empty into pStyle   -- tweak the style param   if pStyle contains "U" then      put true into sDocumentsA[pDocID][kp_UnderlineFlag]      replace "U" with empty in pStyle   else      put false into sDocumentsA[pDocID][kp_UnderlineFlag]   end if   if pStyle = "IB" then put "BI" into pStyle   -- test if used for the first time   local tFontID, tFontRef   put pFont & pStyle into tFontID   if tFontID is not among the lines of sDocumentsA[pDocID][kp_FontList] then      if sDocumentsA[pDocID][kp_FontList] is empty      then put tFontID into sDocumentsA[pDocID][kp_FontList]      else put return & tFontID after sDocumentsA[pDocID][kp_FontList]      put the number of lines in sDocumentsA[pDocID][kp_FontList] into tFontRef   else      set the wholeMatches to true      put lineOffset(tFontID, sDocumentsA[pDocID][kp_FontList]) into tFontRef      set the wholeMatches to false   end if   -- update relevant setttings   put pFont into sDocumentsA[pDocID][kp_FontFamily]   put pStyle into sDocumentsA[pDocID][kp_FontStyle]   put pSize into sDocumentsA[pDocID][kp_FontSizePt]   put pSize / sDocumentsA[pDocID][kp_ScaleFactor] into sDocumentsA[pDocID][kp_FontSize]   put tFontID into sDocumentsA[pDocID][kp_CurrentFont]   -- append the font change to the buffer   if sDocumentsA[pDocID][kp_CurrentPage] > 0 then      p_qrtPDF_ATB pDocID, format("BT /F%d %.2f Tf ET", tFontRef, pSize)   end ifend qrtPDF_SetFontcommand qrtPDF_SetFontStyle pDocID, pStyle   -- redirect   qrtPDF_SetFont pDocID, empty, pStyleend qrtPDF_SetFontStylecommand qrtPDF_SetFontSize pDocID, pSize   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "fontSize", pSize   --   local tFontRef   if pSize <> sDocumentsA[pDocID][kp_FontSize] then      put pSize into sDocumentsA[pDocID][kp_FontSizePt]      put pSize / sDocumentsA[pDocID][kp_ScaleFactor] into sDocumentsA[pDocID][kp_FontSize]      if sDocumentsA[pDocID][kp_CurrentPage] > 0 then         set the wholeMatches to true         put lineOffset(sDocumentsA[pDocID][kp_CurrentFont],sDocumentsA[pDocID][kp_FontList]) into tFontRef         set the wholeMatches to false         p_qrtPDF_ATB pDocID, format("BT /F%d %.2f Tf ET", tFontRef, pSize)      end if   end ifend qrtPDF_SetFontSizecommand qrtPDF_SetTextAlign pDocID, pAlign   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertAlign pAlign   --   put pAlign into sDocumentsA[pDocID][kp_TextAlign]end qrtPDF_SetTextAlignfunction qrtPDF_GetTextAlign pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_TextAlign]end qrtPDF_GetTextAligncommand qrtPDF_SetX pDocID, pX   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "X", pX   --   if pX >= 0 then      put pX into sDocumentsA[pDocID][kp_CurrentX]   else      put sDocumentsA[pDocID][kp_RightMargin] + pX into sDocumentsA[pDocID][kp_CurrentX]   end ifend qrtPDF_SetXfunction qrtPDF_GetX pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_CurrentX]end qrtPDF_GetXcommand qrtPDF_SetY pDocID, pY, pResetXFlag   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "Y", pY   if pResetXFlag is empty then put false into pResetXFlag   p_qrtPDF_AssertFlag "resetX", pResetXFlag   --   if pResetXFlag is true   then put sDocumentsA[pDocID][kp_LeftMargin] into sDocumentsA[pDocID][kp_CurrentX]   if pY >= 0 then      put pY into sDocumentsA[pDocID][kp_CurrentY]   else      put sDocumentsA[pDocID][kp_CurrentHeight] + pY into sDocumentsA[pDocID][kp_CurrentY]   end ifend qrtPDF_SetYfunction qrtPDF_GetY pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_CurrentY]end qrtPDF_GetYcommand qrtPDF_SetXY pDocID, pX, pY   qrtPDF_SetX pDocID, pX   qrtPDF_SetY pDocID, pYend qrtPDF_SetXY--> page handlingcommand qrtPDF_CreatePage pDocID, pOrientation   p_qrtPDF_AssertDocID pDocID   if pOrientation is empty then       put sDocumentsA[pDocID][kp_DefaultOrientation] into pOrientation   end if   p_qrtPDF_AssertOrientation pOrientation   --   p_qrtPDF_CloseCurrentPage pDocID   p_qrtPDF_BeginNewPage pDocID, pOrientationend qrtPDF_CreatePagecommand qrtPDF_InsertPageAfterExistingPage pDocID, pExistingPage, pOrientation   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertInteger "existing page", pExistingPage, 1, qrtPDF_GetNumberOfPages(pDocID)   if pOrientation is empty then      put sDocumentsA[pDocID][kp_DefaultOrientation] into pOrientation   end if   p_qrtPDF_AssertOrientation pOrientation   --   p_qrtPDF_CloseCurrentPage pDocID   p_qrtPDF_PushBackPages pDocID, pExistingPage   p_qrtPDF_BeginInsertedPage pDocID, pExistingPage, pOrientationend qrtPDF_InsertPageAfterExistingPage/* private */ command p_qrtPDF_CloseCurrentPage pDocID   ## STEP 1 :: backup current settings   p_qrtPDF_SaveCurrentPageSettings pDocID   ## STEP 2 :: print the footer   if sDocumentsA[pDocID][kp_CurrentPage] > 0 then      p_qrtPDF_TriggerFooter pDocID   end ifend p_qrtPDF_CloseCurrentPage/* private */ command p_qrtPDF_BeginNewPage pDocID, pOrientation   p_qrtPDF_BeginPage pDocID, pOrientation   p_qrtPDF_OpenNewPage pDocIDend p_qrtPDF_BeginNewPage/* private */ command p_qrtPDF_BeginInsertedPage pDocID, pExistingPage, pOrientation   put pExistingPage into sDocumentsA[pDocID][kp_CurrentPage]   p_qrtPDF_BeginPage pDocID, pOrientation   p_qrtPDF_OpenNewPage pDocIDend p_qrtPDF_BeginInsertedPage/* private */ command p_qrtPDF_OpenNewPage pDocID   ## STEP 1 :: restore pre-footer settings   p_qrtPDF_LoadCurrentPageSettings pDocID   ## STEP 2 :: print the header   p_qrtPDF_Header pDocID   ## STEP 3 :: restore pre-footer settings (again)   p_qrtPDF_LoadCurrentPageSettings pDocIDend p_qrtPDF_OpenNewPage/* private */ command p_qrtPDF_SaveCurrentPageSettings pDocID   -- line settings   put sDocumentsA[pDocId][kp_LineWidth] into sDocumentsA[pDocId][kp_Saved][kp_LineWidth]   put sDocumentsA[pDocId][kp_LineCap] into sDocumentsA[pDocId][kp_Saved][kp_LineCap]   put sDocumentsA[pDocId][kp_LineJoin] into sDocumentsA[pDocId][kp_Saved][kp_LineJoin]   put sDocumentsA[pDocId][kp_LineDashes] into sDocumentsA[pDocId][kp_Saved][kp_LineDashes]   put sDocumentsA[pDocId][kp_LinePhase] into sDocumentsA[pDocId][kp_Saved][kp_LinePhase]   -- font settings   put sDocumentsA[pDocId][kp_FontFamily] into sDocumentsA[pDocId][kp_Saved][kp_FontFamily]   put sDocumentsA[pDocId][kp_FontStyle] into sDocumentsA[pDocId][kp_Saved][kp_FontStyle]   put sDocumentsA[pDocId][kp_FontSizePt] into sDocumentsA[pDocId][kp_Saved][kp_FontSizePt]   -- color settings   put sDocumentsA[pDocId][kp_DrawColor_LC] into sDocumentsA[pDocId][kp_Saved][kp_DrawColor_LC]   put sDocumentsA[pDocId][kp_FillColor_LC] into sDocumentsA[pDocId][kp_Saved][kp_FillColor_LC]   put sDocumentsA[pDocId][kp_TextColor_LC] into sDocumentsA[pDocId][kp_Saved][kp_TextColor_LC]   -- misc settings   put sDocumentsA[pDocId][kp_ClippingSet] into sDocumentsA[pDocId][kp_Saved][kp_ClippingSet]   put sDocumentsA[pDocId][kp_ExtGStateId] into sDocumentsA[pDocId][kp_Saved][kp_ExtGStateId]   put sDocumentsA[pDocId][kp_TransformationSet] into sDocumentsA[pDocId][kp_Saved][kp_TransformationSet]end p_qrtPDF_SaveCurrentPageSettings/* private */ command p_qrtPDF_LoadCurrentPageSettings pDocID   if sDocumentsA[pDocID][kp_CurrentPage] > 0 then      -- restore settings that we copied earlier      qrtPDF_SetLineWidth pDocID, \            sDocumentsA[pDocID][kp_Saved][kp_LineWidth]      qrtPDF_SetLineOptions pDocID, \            sDocumentsA[pDocID][kp_Saved][kp_LineCap], \            sDocumentsA[pDocID][kp_Saved][kp_LineJoin], \            sDocumentsA[pDocID][kp_Saved][kp_LineDashes], \            sDocumentsA[pDocID][kp_Saved][kp_LinePhase]      qrtPDF_SetFont pDocID, \            sDocumentsA[pDocID][kp_Saved][kp_FontFamily], \            sDocumentsA[pDocID][kp_Saved][kp_FontStyle], \            sDocumentsA[pDocID][kp_Saved][kp_FontSizePt]      qrtPDF_SetDrawColor pDocID, \            sDocumentsA[pDocID][kp_Saved][kp_DrawColor_LC]      qrtPDF_SetFillColor pDocID, \            sDocumentsA[pDocID][kp_Saved][kp_FillColor_LC]      qrtPDF_SetTextColor pDocID, \            sDocumentsA[pDocID][kp_Saved][kp_TextColor_LC]      p_qrtPDF_ApplyTransformationSet pDocID, \            sDocumentsA[pDocID][kp_Saved][kp_TransformationSet]      p_qrtPDF_ApplyClippingSet pDocID, \            sDocumentsA[pDocID][kp_Saved][kp_ClippingSet]      p_qrtPDF_SetExtGState pDocID, \            sDocumentsA[pDocID][kp_Saved][kp_ExtGStateId]   end ifend p_qrtPDF_LoadCurrentPageSettings/* private */ command p_qrtPDF_PushBackPages pDocID, pAfterPage   -- push back the page buffers and link sources   local tLastPage, tPageNumber   put sDocumentsA[pDocID][kp_NumberOfPages] into tLastPage   repeat with tPageNumber = tLastPage down to pAfterPage + 1      put sDocumentsA[pDocID][kp_PageBuffers][tPageNumber] into sDocumentsA[pDocID][kp_PageBuffers][tPageNumber +1]      put sDocumentsA[pDocID][kp_PageLinks][tPageNumber] into sDocumentsA[pDocID][kp_PageLinks][tPageNumber +1]   end repeat   if pAfterPage < tLastPage then      put empty into sDocumentsA[pDocID][kp_PageBuffers][(pAfterPage + 1)]      put empty into sDocumentsA[pDocID][kp_PageLinks][(pAfterPage + 1)]   end if   -- push back the link targets   local tLinks, tLink, tNewLinks, tNewLink   put sDocumentsA[pDocID][kp_LinkList] into tLinks   repeat for each line tLink in tLinks      put tLink into tNewLink      if (item 1 of tLink) > pAfterPage then         add 1 to item 1 of tNewLink      end if      put tNewLink & return after tNewLinks   end repeat   delete char -1 of tNewLinks   put tNewLinks into sDocumentsA[pDocID][kp_LinkList]   -- push back the bookmarks   local tBookmarks, tBookmarkID   put sDocumentsA[pDocID][kp_BookmarkList] into tBookmarks   repeat with tBookmarkID = 1 to tBookmarks      if sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_PageNumber] > pAfterPage then         add 1 to sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_PageNumber]      end if   end repeat   -- push back the orientationchanges   put return after line pAfterPage of sDocumentsA[pDocID][kp_OrientationChanges]   -- TODO: check thoroughly and fix bugsend p_qrtPDF_PushBackPages-- callback handlingcommand qrtPDF_SetCallbacks pDocID, pActiveFlag   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertFlag "activeFlag", pActiveFlag   --   if pActiveFlag then      put "server" into sDocumentsA[pDocID][kp_CallbackObject]   else      put empty into sDocumentsA[pDocID][kp_CallbackObject]   end ifend qrtPDF_SetCallbacksfunction qrtPDF_GetCallbacks pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_CallbackObject] is not emptyend qrtPDF_GetCallbackscommand qrtPDF_SetCallbackObject pDocID, pObjectRef   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertObjectRef pObjectRef   --   put pObjectRef into sDocumentsA[pDocID][kp_CallbackObject]end qrtPDF_SetCallbackObjectfunction qrtPDF_GetCallbackObject pDocID   p_qrtPDF_AssertDocID pDocID   return sDocumentsA[pDocID][kp_CallbackObject]end qrtPDF_GetCallbackObject/* private */ command p_qrtPDF_Header pDocID   local tCallbackObject   put sDocumentsA[pDocID][kp_CallbackObject] into tCallbackObject   if tCallbackObject is empty then      exit p_qrtPDF_Header   end if   --   local tCurrentPage   put sDocumentsA[pDocID][kp_CurrentPage] into tCurrentPage   try      if the environment is "server" then         qrtPDF_PrintHeader pDocID, tCurrentPage      else         send "qrtPDF_PrintHeader pDocID, tCurrentPage" to tCallbackObject      end if   end tryend p_qrtPDF_Header/* private */ command p_qrtPDF_Footer pDocID   local tCallbackObject   put sDocumentsA[pDocID][kp_CallbackObject] into tCallbackObject   if tCallbackObject is empty then      exit p_qrtPDF_Footer   end if   --   local tCurrentPage   put sDocumentsA[pDocID][kp_CurrentPage] into tCurrentPage   try      if the environment is "server" then         qrtPDF_PrintFooter pDocID, tCurrentPage      else         send "qrtPDF_PrintFooter pDocID, tCurrentPage" to tCallbackObject      end if   end tryend p_qrtPDF_Footer/* private */ command p_qrtPDF_TriggerFooter pDocID   put true into sDocumentsA[pDocID][kp_InFooterFlag]   p_qrtPDF_Footer pDocID   put false into sDocumentsA[pDocID][kp_InFooterFlag]end p_qrtPDF_TriggerFooter-- graphic drawing methodscommand qrtPDF_DrawLine pDocID, pX1, pY1, pX2, pY2   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x1", pX1   p_qrtPDF_AssertNumber "y1", pY1   p_qrtPDF_AssertNumber "x2", pX2   p_qrtPDF_AssertNumber "y2", pY2   --   local tFactor, tHeight, tData   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   put format("%.2f %.2f m %.2f %.2f l S", pX1 * tFactor, (tHeight - pY1) * tFactor, pX2 * tFactor, (tHeight - pY2) * tFactor) into tData   p_qrtPDF_ATB pDocID, tDataend qrtPDF_DrawLinecommand qrtPDF_DrawRectangle pDocID, pX, pY, pWidth, pHeight, pStyle   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   p_qrtPDF_AssertNumber "width", pWidth   p_qrtPDF_AssertNumber "height", pHeight   p_qrtPDF_AssertDrawStyle pStyle   --   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   local tOperator   if pStyle is "F" then      put "f" into tOperator   else if pStyle is among the items of "DF,FD" then      put "B" into tOperator   else       put "S" into tOperator   end if   local tData   put format("%.2f %.2f %.2f %.2f re %s", (pX * tFactor), ((tHeight - pY) * tFactor), (pWidth * tFactor), (pHeight * tFactor * -1), tOperator) into tData   p_qrtPDF_ATB pDocID, tDataend qrtPDF_DrawRectanglecommand qrtPDF_DrawRoundedRectangle pDocID, pX, pY, pWidth, pHeight, pRadius, pStyle   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   p_qrtPDF_AssertNumber "width", pWidth   p_qrtPDF_AssertNumber "height", pHeight   p_qrtPDF_AssertNumber "roundRadius", pRadius   p_qrtPDF_AssertDrawStyle pStyle   --   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   local tOperator   if pStyle is "F" then      put "f" into tOperator   else if pStyle is among the items of "DF,FD" then      put "B" into tOperator   else       put "S" into tOperator   end if   local tArc, tXC, tYC   put 4 / 3 * (sqrt(2) - 1) into tArc   put pX + pWidth - pRadius into tXC   put pY + pRadius into tYC   p_qrtPDF_SetPlotPoint pDocID, (pX + pRadius), pY   p_qrtPDF_PlotLine pDocID, tXC, pY   p_qrtPDF_PlotCurve pDocID, tXC + pRadius * tArc, tYC - pRadius, tXC + pRadius, tYC - pRadius * tArc, tXC + pRadius, tYC   put pX + pWidth - pRadius into tXC   put pY + pHeight - pRadius into tYC   p_qrtPDF_PlotLine pDocID, pX + pWidth, tYC   p_qrtPDF_PlotCurve pDocID, tXC + pRadius, tYC + pRadius * tArc, tXC + pRadius * tArc, tYC + pRadius, tXC, tYC + pRadius   put pX + pRadius into tXC   put pY + pHeight - pRadius into tYC   p_qrtPDF_PlotLine pDocID, tXC, pY + pHeight   p_qrtPDF_PlotCurve pDocID, tXC - pRadius * tArc, tYC + pRadius, tXC - pRadius, tYC + pRadius * tArc, tXC - pRadius, tYC   put pX + pRadius into tXC   put pY + pRadius into tYC   p_qrtPDF_PlotLine pDocID, pX, tYC   p_qrtPDF_PlotCurve pDocID, tXC - pRadius, tYC - pRadius * tArc, tXC - pRadius * tArc, tYC - pRadius, tXC, tYC - pRadius   p_qrtPDF_ATB pDocID, tOperatorend qrtPDF_DrawRoundedRectanglecommand qrtPDF_DrawOval pDocID, pX, pY, pWidth, pHeight, pStyle   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   p_qrtPDF_AssertNumber "width", pWidth   p_qrtPDF_AssertNumber "height", pHeight   p_qrtPDF_AssertDrawStyle pStyle   -- determine the center location and radius of the ellipse   local tRadiusX, tRadiusY, tCenterX, tCenterY   put pWidth / 2 into tRadiusX   put pHeight / 2 into tRadiusY   put pX + tRadiusX into tCenterX   put pY + tRadiusY into tCenterY   -- redirect   qrtPDF_DrawEllipse pDocID, tCenterX, tCenterY, tRadiusX, tRadiusY, pStyleend qrtPDF_DrawOvalcommand qrtPDF_DrawEllipse pDocID, pX, pY, pRadiusX, pRadiusY, pStyle   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   p_qrtPDF_AssertNumber "radiusX", pRadiusX   p_qrtPDF_AssertNumber "radiusY", pRadiusY   p_qrtPDF_AssertDrawStyle pStyle   --   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   local tOperator   if pStyle is "F" then      put "f" into tOperator   else if pStyle is among the items of "DF,FD" then      put "B" into tOperator   else       put "S" into tOperator   end if   local tLX, tLY   put 4 / 3 * (sqrt(2) - 1) * pRadiusX into tLX   put 4 / 3 * (sqrt(2) - 1) * pRadiusY into tLY   local tData   put format("%.2f %.2f m %.2f %.2f %.2f %.2f %.2f %.2f c", (pX + pRadiusX) * tFactor, (tHeight - pY) * tFactor, (pX + pRadiusX) * tFactor, (tHeight - (pY - tLY)) * tFactor, (pX + tLX) * tFactor, (tHeight - (pY - pRadiusY)) * tFactor, pX * tFactor, (tHeight - (pY - pRadiusY)) * tFactor) into tData   p_qrtPDF_ATB pDocID, tData   put format("%.2f %.2f %.2f %.2f %.2f %.2f c", (pX - tLX) * tFactor, (tHeight - (pY - pRadiusY)) * tFactor, (pX - pRadiusX) * tFactor, (tHeight - (pY - tLY)) * tFactor, (pX - pRadiusX) * tFactor, (tHeight - pY) * tFactor) into tData   p_qrtPDF_ATB pDocID, tData   put format("%.2f %.2f %.2f %.2f %.2f %.2f c", (pX - pRadiusX) * tFactor, (tHeight - (pY + tLY)) * tFactor, (pX - tLX) * tFactor, (tHeight - (pY + pRadiusY)) * tFactor, pX * tFactor, (tHeight - (pY + pRadiusY)) * tFactor) into tData   p_qrtPDF_ATB pDocID, tData   put format("%.2f %.2f %.2f %.2f %.2f %.2f c %s", (pX + tLX) * tFactor, (tHeight - (pY + pRadiusY)) * tFactor, (pX + pRadiusX) * tFactor, (tHeight - (pY + tLY)) * tFactor, (pX + pRadiusX) * tFactor, (tHeight - pY) * tFactor, tOperator) into tData   p_qrtPDF_ATB pDocID, tDataend qrtPDF_DrawEllipsecommand qrtPDF_DrawBezierCurve pDocID, pX1, pY1, pX2, pY2, pX3, pY3, pX4, pY4, pStyle   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertDrawStyle pStyle   p_qrtPDF_AssertNumber "x1", pX1   p_qrtPDF_AssertNumber "y1", pY1   p_qrtPDF_AssertNumber "x2", pX2   p_qrtPDF_AssertNumber "y2", pY2   p_qrtPDF_AssertNumber "x3", pX3   p_qrtPDF_AssertNumber "y3", pY3   p_qrtPDF_AssertNumber "x4", pX4   p_qrtPDF_AssertNumber "y4", pY4   --   local tOperator   if pStyle is "F" then      put "f" into tOperator   else if pStyle is among the items of "DF,FD" then      put "B" into tOperator   else       put "S" into tOperator   end if   p_qrtPDF_SetPlotPoint pDocID, pX1, pY1   p_qrtPDF_PlotCurve pDocID, pX2, pY2, pX3, pY3, pX4, pY4   p_qrtPDF_ATB pDocID, tOperatorend qrtPDF_DrawBezierCurvecommand qrtPDF_DrawPolygon pDocID, pPoints, pStyle   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertPoints pPoints   p_qrtPDF_AssertDrawStyle pStyle   -- proceed now that we're sure all is right   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   local tOperator   if pStyle is "F" then      put "f" into tOperator   else if pStyle is among the items of "DF,FD" then      put "B" into tOperator   else       put "S" into tOperator   end if   local tStartPoint, tPoints, tPoint, tDrawFlag   put line 1 of pPoints into tStartPoint   p_qrtPDF_SetPlotPoint pDocID, (item 1 of tStartPoint), (item 2 of tStartPoint)   put true into tDrawFlag   delete line 1 of pPoints   repeat for each line tPoint in pPoints      if tDrawFlag is false then         if tPoint is not empty then            p_qrtPDF_SetPlotPoint pDocID, (item 1 of tPoint), (item 2 of tPoint)         end if      else         if tPoint is empty then            put false into tDrawFlag         else            p_qrtPDF_PlotLine pDocID, (item 1 of tPoint), (item 2 of tPoint)         end if      end if   end repeat   if tDrawFlag then      p_qrtPDF_PlotLine pDocID, (item 1 of tStartPoint), (item 2 of tStartPoint)   end if   p_qrtPDF_ATB pDocID, tOperatorend qrtPDF_DrawPolygoncommand qrtPDF_DrawRegularPolygon pDocID, pX, pY, pWidth, pHeight, pSides, pStartAngle, pStyle   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   p_qrtPDF_AssertNumber "width", pWidth   p_qrtPDF_AssertNumber "height", pHeight   p_qrtPDF_AssertInteger "sides", pSides, 3   p_qrtPDF_AssertInteger "startAngle", pStartAngle, 0, 360   p_qrtPDF_AssertDrawStyle pStyle   -- proceed now that we're sure all is right   local tRadiusX, tRadiusY, tCenterX, tCenterY   put pWidth / 2 into tRadiusX   put pHeight / 2 into tRadiusY   put pX + tRadiusX into tCenterX   put pY + tRadiusY into tCenterY   local tPoints   repeat with i = 1 to pSides      local tCurrentAngle, tCurrentRadians      put (180 + pStartAngle) + (i - 1) * 360 / pSides - 90 into tCurrentAngle      put tCurrentAngle * pi / 180 into tCurrentRadians      put tCenterX + tRadiusX * sin(tCurrentRadians) & comma & \             tCenterY + tRadiusY * cos(tCurrentRadians) & return \             after tPoints   end repeat   delete char -1 of tPoints   qrtPDF_DrawPolygon pDocID, tPoints, pStyle   return tPointsend qrtPDF_DrawRegularPolygon-- eps drawing methodscommand qrtPDF_DrawEPS pDocID, pX, pY, pWidth, pHeight, pFile, pLink, pUseBoundingBox   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   if pWidth is empty then       put 0 into pWidth   end if   p_qrtPDF_AssertNumber "width", pWidth, 0   if pHeight is empty then       put 0 into pHeight   end if   p_qrtPDF_AssertNumber "height", pHeight, 0   p_qrtPDF_AssertFile pFile   ## QQQ :: p_qrtPDF_AssertLink pDocID, pLink   if pUseBoundingBox is empty then      put true into pUseBoundingBox   end if   p_qrtPDF_AssertFlag "useBoundingBox", pUseBoundingBox   --   local tEPSdata, tOffset   put URL ("binfile:" & pFile) into tEPSdata   put offset("%!PS-Adobe", tEPSdata) into tOffset   if tOffset = 0 then      throw "qrtPDFerr: not a valid EPS file '" & pFile &"'"   else if tOffset > 1 then      delete char 1 to tOffset - 1 of tEPSdata   end if   put offset("%%BoundingBox:", tEPSdata) into tOffset   if tOffset = 0 then      throw "qrtPDFerr: not a valid EPS file '" & pFile &"'"   end if   -- make sure we can use the 'line' chunk   replace crlf with linefeed in tEPSdata   replace numToChar(13) with linefeed in tEPSdata   -- now read the boundingbox data   local tLine   put line (lineOffset("%%BoundingBox:", tEPSdata)) of tEPSdata into tLine   set the itemDelimiter to colon   local tBoundingBox, tX1, tY1, tX2, tY2   put word 1 to -1 of (item 2 of tLine) into tBoundingBox   put word 1 of tBoundingBox into tX1   put word 2 of tBoundingBox into tY1   put word 3 of tBoundingBox into tX2   put word 4 of tBoundingBox into tY2   set the itemDelimiter to comma   -- find the start of the actual EPS data   put offset("%%EndSetup", tEPSdata) into tOffset   if tOffset = 0 then put offset("%%EndProlog", tEPSdata) into tOffset   if tOffset = 0 then put offset("%%BoundingBox", tEPSdata) into tOffset   delete char 1 to tOffset - 1 of tEPSdata   -- find the end of the actual EPS data   put offset("%%PageTrailer", tEPSdata) into tOffset   if tOffset = 0 then put offset("showdata", tEPSdata) into tOffset   if tOffset > 0 then delete char tOffset to -1 of tEPSdata   -- save the current graphics state   p_qrtPDF_ATB pDocID, "q"   local tFactor, tHeightPt, tDeltaX, tDeltaY   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeightPt] into tHeightPt   -- apply the translation   if pUseBoundingBox then      put pX * tFactor - tX1 into tDeltaX      put pY * tFactor - tY1 into tDeltaY   else      put pX * tFactor into tDeltaX      put pY * tFactor into tDeltaY   end if   p_qrtPDF_ATB pDocID, format("%.3f %.3f %.3f %.3f %.3f %.3f cm", 1, 0, 0, 1, tDeltaX, tDeltaY + (tHeightPt - 2 * pY * tFactor - (tY2 - tY1)))   -- apply the scale   local tScaleX, tScaleY   if pWidth > 0 then      put pWidth / ((tX2 - tX1) / tFactor) into tScaleX      if pHeight > 0 then         put pHeight / ((tY2 - tY1) / tFactor) into tScaleY      else         put tScaleX into tScaleY         put (tY2 - tY1) / tFactor * tScaleY into pHeight      end if   else if pHeight > 0 then      put pHeight / ((tY2 - tY1) / tFactor) into tScaleY      put tScaleY into tScaleX      put (tX2 - tX1) / tFactor * tScaleX into pWidth   else      put (tX2 - tX1) / tFactor into pWidth      put (tY2 - tY1) / tFactor into pHeight   end if   if tScaleX is not empty then      p_qrtPDF_ATB pDocID, format("%.3f %.3f %.3f %.3f %.3f %.3f cm", tScaleX, 0, 0, tScaleY, tX1 * (1 - tScaleX), tY2 * (1 - tScaleY))   end if   -- now process the EPS data   local tNumberOfLines, tLineNumber, tULevel   put the number of lines in tEPSdata into tNumberOfLines   put 0 into tLineNumber   put 0 into tULevel   set the caseSensitive to true   repeat for each line tLine in tEPSdata      add 1 to tLineNumber      if tLine is empty or char 1 of tLine is "%" then next repeat      --      local tLongCmd, tCmd      put word -1 of tLine into tLongCmd      if tLongCmd is among the items of "rg,RG,Xa,XA" then         put tLongCmd into tCmd      else         put char 1 of tLongCmd into tCmd      end if      --      local tCyan, tMagenta, tYellow, tBlack      local tUFlag, tBlockEnd, tBuffer      --      switch tCmd         case "c"         case "d"         case "g"         case "G"         case "j"         case "J"         case "k"         case "K"         case "l"         case "m"         case "M"         case "n"         case "s"         case "S"         case "v"         case "w"         case "y"            -- this sort of command can just be passed on            p_qrtPDF_ATB pDocID, tLine            break         case "x"            -- custom fill color            put word 1 of tLine into tCyan            put word 2 of tLine into tMagenta            put word 3 of tLine into tYellow            put word 4 of tLine into tBlack            p_qrtPDF_ATB pDocID, format("%s %s %s %s k", tCyan, tMagenta, tYellow, tBlack)            break         case "X"            -- custom stroke color            put word 1 of tLine into tCyan            put word 2 of tLine into tMagenta            put word 3 of tLine into tYellow            put word 4 of tLine into tBlack            p_qrtPDF_ATB pDocID, format("%s %s %s %s K", tCyan, tMagenta, tYellow, tBlack)            break         case "C"         case "L"         case "N"         case "V"         case "Y"            -- replace with lowercase version of the command            p_qrtPDF_ATB pDocID, (char 1 to -2 of tLine) & toLower(tCmd)            break         case "b"         case "B"            p_qrtPDF_ATB pDocID, tCmd & "*"            break         case "f"         case "F"            if tULevel > 0 then               put false into tUFlag               put min(tLineNumber + 5, tNumberOfLines) into tBlockEnd               repeat with tCounter = tLineNumber + 1 to tBlockEnd                  put line tCounter of tEPSdata into tBuffer                  if (tBuffer is "U") or (tBuffer is "*U") then                     put true into tUFlag                     exit repeat                  end if               end repeat               if tUFlag then                  p_qrtPDF_ATB pDocID, "f*"               end if            else               p_qrtPDF_ATB pDocID, "f*"            end if            break         case "u"            if char 1 of tLine is "*" then               add 1 to tULevel            end if            break         case "U"            if char 1 of tLine is "*" then               subtract 1 from tULevel            end if            break         case "rg"         case "RG"            p_qrtPDF_ATB pDocID, tLine            break         case "Xa"            p_qrtPDF_ATB pDocID, word -4 to -2 of tLine && "rg"            break         case "XA"            p_qrtPDF_ATB pDocID, word -4 to -2 of tLine && "RG"            break      end switch   end repeat   set the caseSensitive to false   -- restore previous graphics state   p_qrtPDF_ATB pDocID, "Q"   -- apply the link   if pLink is not empty then      qrtPDF_PlaceLink pDocID, pX, pY, pWidth, pHeight, pLink   end if   -- and set the result to the width and height of the freshly added EPS drawing   return (pWidth, pHeight)end qrtPDF_DrawEPS-- image drawing methodscommand qrtPDF_DrawImage pDocID, pX, pY, pWidth, pHeight, pFile, pType, pLink   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   if pWidth is empty then      put 0 into pWidth   end if   p_qrtPDF_AssertNumber "width", pWidth, 0   if pHeight is empty then      put 0 into pHeight   end if   p_qrtPDF_AssertNumber "height", pHeight, 0   p_qrtPDF_AssertFile pFile   p_qrtPDF_AssertImageType pFile, pType   ## QQQ :: p_qrtPDF_AssertLink pDocID, pLink   --   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   set the wholeMatches to true   local tImageId   put lineOffset(pFile,sDocumentsA[pDocID][kp_ImageList]) into tImageID   if tImageID = 0 then put p_qrtPDF_LoadImage(pDocID, pFile, pType) into tImageID   set the wholeMatches to false   local tImgWidth, tImgHeight, tImgScale   put sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_Width] into tImgWidth   put sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_Height] into tImgHeight   if pWidth = 0 and pHeight = 0 then      -- draw image in 72 dpi at full width and height      put sDocumentsA[pDocID][kp_ImageScale] / 100 into tImgScale      put tImgWidth * tImgScale / tFactor into pWidth      put tImgHeight * tImgScale / tFactor into pHeight   else if pWidth = 0 then      put pHeight * tImgWidth / tImgHeight into pWidth   else if pHeight = 0 then      put pWidth * tImgHeight / tImgWidth into pHeight   end if   local tActualWidth, tActualHeight, tActualLeft, tActualBottom   put pWidth * tFactor into tActualWidth   put pHeight * tFactor into tActualHeight   put pX * tFactor into tActualLeft   put (tHeight - (pY + pHeight)) * tFactor into tActualBottom   if sSettingsA[kp_ImagePositioning] is "pixel" then      put trunc(tActualWidth) into tActualWidth      put trunc(tActualHeight) into tActualHeight      put trunc(tActualLeft) into tActualLeft      put trunc(tActualBottom) into tActualBottom   end if   p_qrtPDF_ATB pDocID, format("q %.2f 0 0 %.2f %.2f %.2f cm /I%d Do Q", tActualWidth, tActualHeight, tActualLeft, tActualBottom, tImageID)   if pLink is not empty then qrtPDF_PlaceLink pDocID, pX, pY, pWidth, pHeight, pLink   return (pWidth, pHeight)end qrtPDF_DrawImage-- text drawing methodscommand qrtPDF_DrawString pDocID, pX, pY, pText   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   --   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   local tData   put format("BT %.2f %.2f Td (%s) Tj ET", pX * tFactor, (tHeight - pY) * tFactor, p_qrtPDF_EscapeText(pDocID,pText)) into tData   if sDocumentsA[pDocID][kp_UnderlineFlag] and pText is not empty then       put space & p_qrtPDF_DoUnderline(pDocID, pX, pY, pText) after tData   end if   if sDocumentsA[pDocID][kp_TextColorFlag] then      put "q" && sDocumentsA[pDocID][kp_TextColor_PDF] && tData && "Q" into tData   end if   p_qrtPDF_ATB pDocID, tDataend qrtPDF_DrawStringcommand qrtPDF_WriteTextBox pDocID, pWidth, pHeight, pText, pBorder, pNewPosition, pAlign, pFill, pLink, pFitMode   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "width", pWidth   p_qrtPDF_AssertNumber "height", pHeight   p_qrtPDF_AssertNewPosition pNewPosition   p_qrtPDF_AssertBorder pBorder   if pAlign is empty then      put sDocumentsA[pDocID][kp_TextAlign] into pAlign   end if   p_qrtPDF_AssertAlign pAlign   if pFitMode is empty then      put "DontFit" into pFitMode   end if   p_qrtPDF_AssertFitMode pFitMode   --   local tFactor, tBoxMargin, tHeight, tX, tY, tFontSize, tWordSpacing   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_BoxMargin] into tBoxMargin   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   put sDocumentsA[pDocID][kp_CurrentX] into tX   put sDocumentsA[pDocID][kp_CurrentY] into tY   put sDocumentsA[pDocID][kp_FontSize] into tFontSize   put sDocumentsA[pDocID][kp_WordSpacing] into tWordSpacing   if sDocumentsA[pDocID][kp_PageBreakFlag] and sDocumentsA[pDocID][kp_InFooterFlag] is false and tY + pHeight > sDocumentsA[pDocID][kp_PageBreakTrigger] then      ## automatic page break      if tWordSpacing > 0 then         put 0 into sDocumentsA[pDocID][kp_WordSpacing]         p_qrtPDF_ATB pDocID, "0 Tw"      end if      qrtPDF_CreatePage pDocID      put tX into sDocumentsA[pDocID][kp_CurrentX]      if tWordSpacing > 0 then         put tWordSpacing into sDocumentsA[pDocID][kp_WordSpacing]         p_qrtPDF_ATB pDocID, format("%.3f Tw", tWordSpacing * tFactor)      end if   end if   put sDocumentsA[pDocID][kp_CurrentX] into tX   put sDocumentsA[pDocID][kp_CurrentY] into tY   if pWidth = 0 then       put sDocumentsA[pDocID][kp_CurrentWidth] - sDocumentsA[pDocID][kp_RightMargin] - tX into pWidth   end if   -- draw the border   local tData, tOperator   if pFill is true or pBorder = "bottom,left,right,top" then      if pFill is true and pBorder = "bottom,left,right,top" then         put "B" into tOperator      else if pFill is true then         put "f" into tOperator      else         put "S" into tOperator      end if      put format("%.2f %.2f %.2f %.2f re %s ", tX * tFactor, (tHeight - tY) * tFactor, pWidth * tFactor, -pHeight * tFactor, tOperator) into tData   end if   if tData is not empty then      p_qrtPDF_ATB pDocID, tData      put empty into tData   end if   -- remember that pBorder is sorted alphabetically   if pBorder is "bottom,left,right" then      -- from top-left to bottom-left to bottom-right to top-right      p_qrtPDF_SetPlotPoint pDocId, tX, tY      p_qrtPDF_PlotLine pDocId, tX, tY + pHeight      p_qrtPDF_PlotLine pDocId, tX + pWidth, tY + pHeight      p_qrtPDF_PlotLine pDocId, tX + pWidth, tY      p_qrtPDF_ATB pDocId, "S"   else if pBorder is "bottom,left,top" then      -- from top-right to top-left to bottom-left to bottom-right      p_qrtPDF_SetPlotPoint pDocId, tX + pWidth, tY      p_qrtPDF_PlotLine pDocId, tX, tY      p_qrtPDF_PlotLine pDocId, tX, tY + pHeight      p_qrtPDF_PlotLine pDocId, tX + pWidth, tY + pHeight   else if pBorder is "bottom,right,top" then      -- from top-left to top-right to bottom-right to bottom-left      p_qrtPDF_SetPlotPoint pDocId, tX, tY      p_qrtPDF_PlotLine pDocId, tX + pWidth, tY      p_qrtPDF_PlotLine pDocId, tX + pWidth, tY + pHeight      p_qrtPDF_PlotLine pDocId, tX, tY + pHeight   else if pBorder is "bottom,left" then      -- from bottom-right to bottom-left to top-left      p_qrtPDF_SetPlotPoint pDocId, tX + pWidth, tY + pHeight      p_qrtPDF_PlotLine pDocId, tX, tY + pHeight      p_qrtPDF_PlotLine pDocId, tX, tY   else if pBorder is "bottom,right" then      -- from top-right to bottom-right to bottom-left      p_qrtPDF_SetPlotPoint pDocId, tX + pWidth, tY      p_qrtPDF_PlotLine pDocId, tX + pWidth, tY + pHeight      p_qrtPDF_PlotLine pDocId, tX, tY + pHeight   else if pBorder is "bottom,top" then      qrtPDF_DrawLine pDocId, tX, tY, tX + pWidth, tY      qrtPDF_DrawLine pDocId, tX, tY + pHeight, tX + pWidth, tY + pHeight   else if pBorder is "bottom" then      qrtPDF_DrawLine pDocId, tX, tY + pHeight, tX + pWidth, tY + pHeight   else if pBorder is "left,right,top" then      -- from bottom-left to top-left to top-right to bottom-right      p_qrtPDF_SetPlotPoint pDocId, tX, tY + pHeight      p_qrtPDF_PlotLine pDocId, tX, tY      p_qrtPDF_PlotLine pDocId, tX + pWidth, tY      p_qrtPDF_PlotLine pDocId, tX + pWidth, tY + pHeight      p_qrtPDF_ATB pDocId, "S"   else if pBorder is "left,right" then      qrtPDF_DrawLine pDocId, tX, tY, tX, tY + pHeight      qrtPDF_DrawLine pDocId, tX + pWidth, tY, tX + pWidth, tY + pHeight   else if pBorder is "left,top" then      -- from top-right to top-left to bottom-left      p_qrtPDF_SetPlotPoint pDocId, tX + pWidth, tY      p_qrtPDF_PlotLine pDocId, tX, tY      p_qrtPDF_PlotLine pDocId, tX, tY + pHeight   else if pBorder is "left" then      qrtPDF_DrawLine pDocId, tX, tY, tX, tY + pHeight   else if pBorder is "right,top" then      -- from top-left to top-right to bottom-right      p_qrtPDF_SetPlotPoint pDocId, tX, tY      p_qrtPDF_PlotLine pDocId, tX + pWidth, tY      p_qrtPDF_PlotLine pDocId, tX + pWidth, tY + pHeight   else if pBorder is "right" then      qrtPDF_DrawLine pDocId, tX + pWidth, tY, tX + pWidth, tY + pHeight   else if pBorder is "top" then      qrtPDF_DrawLine pDocId, tX, tY, tX + pWidth, tY   end if   -- determine how to fit the text in the box   local tStringWidth, tFitRatio   put p_qrtPDF_GetStringWidth(pDocID, pText) into tStringWidth   if tStringWidth = 0 then      put 1 into tFitRatio   else      put (pWidth - tBoxMargin) / tStringWidth into tFitRatio   end if   local tDoesNotFitFlag, tSpacing, tScale   put (tFitRatio < 1) or (tFitRatio > 1 and pFitMode contains "always") or (tFitRatio > 1 and pAlign is "justify") into tDoesNotFitFlag   if tDoesNotFitFlag then      if pFitMode contains "space" or pAlign is "justify" then         put (pWidth - tBoxMargin * 2 - tStringWidth) / max(length(pText) - 1, 1) * tFactor into tSpacing         p_qrtPDF_ATB pDocID, format("BT %.2f Tc ET", tSpacing)      else if pFitMode contains "scale" then         put tFitRatio * 100 into tScale         p_qrtPDF_ATB pDocID, format("BT %.2f Tz ET", tScale)      else if pFitMode contains "clip" then         qrtPDF_SetClippingRectangle pDocID, tX, tY, pWidth - tBoxMargin, pHeight, false      end if   end if   if pText is not empty then      local tDeltaX      switch pAlign         case "justify"         case "leftjustify"         case "rightjustify"         case "centerjustify"            -- assumes word spacing has been set beforehand         case "left"            put sDocumentsA[pDocID][kp_BoxMargin] into tDeltaX            break         case "right"            put pWidth - sDocumentsA[pDocID][kp_BoxMargin] - p_qrtPDF_GetStringWidth(pDocID, pText) into tDeltaX            break         case "center"            put (pWidth - p_qrtPDF_GetStringWidth(pDocID, pText)) / 2 into tDeltaX            break      end switch      if sDocumentsA[pDocID][kp_TextColorFlag] is true then         put "q" && sDocumentsA[pDocID][kp_TextColor_PDF] & space after tData      end if      local tText      put p_qrtPDF_Escape(pText) into tText      put format("BT %.2f %.2f Td (%s) Tj ET", (tX + tDeltaX) * tFactor, (tHeight - (tY + 0.5 * pHeight + 0.3 * tFontSize)) * tFactor, tText) after tData      if sDocumentsA[pDocID][kp_UnderlineFlag] is true then         put space & p_qrtPDF_DoUnderline(pDocID, tX + tDeltaX, tY + 0.5 * pHeight + 0.3 * tFontSize, pText) after tData      end if      if sDocumentsA[pDocID][kp_TextColorFlag] is true then         put space & "Q" after tData      end if      if pLink is not empty then         qrtPDF_PlaceLink pDocID, tX + tDeltaX, tY + 0.5 * pHeight - 0.5 * tFontSize, p_qrtPDF_GetStringWidth(pDocID, pText), tFontSize, pLink      end if   end if   if tData is not empty then      p_qrtPDF_ATB pDocID, tData   end if   put pHeight into sDocumentsA[pDocID][kp_LastLineHeight]   switch pNewPosition      case "begin"         put sDocumentsA[pDocID][kp_LeftMargin] into sDocumentsA[pDocID][kp_CurrentX]         -- no break      case "below"         add pHeight to sDocumentsA[pDocID][kp_CurrentY]         break      case "left"         put tX + tDeltaX - sDocumentsA[pDocID][kp_BoxMargin] into sDocumentsA[pDocID][kp_CurrentX]         break      case "right"         add pWidth to sDocumentsA[pDocID][kp_CurrentX]         break   end switch   if tDoesNotFitFlag then      if pFitMode contains "space" or pAlign is "justify" then         p_qrtPDF_ATB pDocID, format("BT %.2f Tc ET", tWordSpacing)      else if pFitMode contains "scale" then         p_qrtPDF_ATB pDocID, format("BT %.2f Tz ET", 100)      else if pFitMode contains "clip" then         qrtPDF_ResetClipping pDocID      end if   end ifend qrtPDF_WriteTextBoxcommand qrtPDF_WriteTextArea pDocID, pWidth, pHeight, pText, pBorder, pAlign, pFill   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "width", pWidth   p_qrtPDF_AssertNumber "height", pHeight   p_qrtPDF_AssertBorder pBorder   if pAlign is empty then      put sDocumentsA[pDocID][kp_TextAlign] into pAlign   end if   p_qrtPDF_AssertAlign pAlign   --   local tFactor, tHeight, tMaxWidth, tLength   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   if pWidth = 0 then      put sDocumentsA[pDocID][kp_CurrentWidth] - sDocumentsA[pDocID][kp_RightMargin] - sDocumentsA[pDocID][kp_CurrentX] into pWidth   end if   put (pWidth - 2 * sDocumentsA[pDocID][kp_BoxMargin]) into tMaxWidth   put length(pText) into tLength   if char -1 of pText is return then       subtract 1 from tLength   end if   local tFirstBorder, tMiddleBorder, tLastBorder, tCurrentBorder   if pBorder is not empty then      if pBorder = "bottom,left,right,top" then         put "left,right,top" into tFirstBorder         put "left,right" into tMiddleBorder         put "bottom,left,right" into tLastBorder      else         put empty into tMiddleBorder         if "left" is among the items of pBorder then            put "left" & comma after tMiddleBorder         end if         if "right" is among the items of pBorder then             put "right" & comma after tMiddleBorder         end if         delete char -1 of tMiddleBorder         put tMiddleBorder into tFirstBorder         if "top" is among the items of pBorder then            put comma & "top" after tFirstBorder         end if         put tMiddleBorder into tLastBorder         if "bottom" is among the items of pBorder then            put "bottom" after tLastBorder         end if      end if      put tFirstBorder into tCurrentBorder      if tMiddleBorder is empty then         delete char 1 of tFirstBorder         delete char 1 of tLastBorder      end if   end if   local tSepIndex, tEndIndex, tStartIndex, tLineWidth, tLineWidthSep, tNumberOfSeparators, tNumberOfLines   put -1 into tSepIndex   put 1 into tEndIndex   put 1 into tStartIndex   put 0 into tLineWidth   put 0 into tLineWidthSep   put 0 into tNumberOfSeparators   put 1 into tNumberOfLines   local tCurrentChar, tWordSpacing, tAlign   repeat while tEndIndex < tLength      put char tEndIndex of pText into tCurrentChar      if tCurrentChar is return then         -- explicit line break         if sDocumentsA[pDocID][kp_WordSpacing] > 0 then            put 0 into sDocumentsA[pDocID][kp_WordSpacing]            p_qrtPDF_ATB pDocID, "0 Tw"         end if         switch pAlign            case "leftjustify"               put "left" into tAlign               break            case "centerjustify"               put "center" into tAlign               break            case "rightjustify"               put "right" into tAlign               break            default               put pAlign into tAlign         end switch         qrtPDF_WriteTextBox pDocID, pWidth, pHeight, char tStartIndex to (tEndIndex - 1) of pText, tCurrentBorder, "below", tAlign, pFill         add 1 to tEndIndex         put -1 into tSepIndex         put tEndIndex into tStartIndex         put 0 into tLineWidth         put 0 into tNumberOfSeparators         add 1 to tNumberOfLines         if pBorder is not empty and tNumberOfLines = 2 then            put tMiddleBorder into tCurrentBorder         end if         next repeat      end if      if tCurrentChar is space then         put tEndIndex into tSepIndex         put tLineWidth into tLineWidthSep         add 1 to tNumberOfSeparators      end if      add p_qrtPDF_GetStringWidth(pDocID, tCurrentChar) to tLineWidth      if tLineWidth > tMaxWidth then         -- automatic line break         if tSepIndex = -1 then            if tEndIndex = tStartIndex then               add 1 to tEndIndex            end if            if sDocumentsA[pDocID][kp_WordSpacing] > 0 then               put 0 into sDocumentsA[pDocID][kp_WordSpacing]               p_qrtPDF_ATB pDocID, "0 Tw"            end if            qrtPDF_WriteTextBox pDocID, pWidth, pHeight, char tStartIndex to tEndIndex of pText, tCurrentBorder, "below", pAlign, pFill         else            if pAlign contains "justify" then               if tNumberOfSeparators > 1 then                  put (tMaxWidth - tLineWidthSep) / (tNumberOfSeparators - 1) into tWordSpacing               else                  put 0 into tWordSpacing               end if               put tWordSpacing into sDocumentsA[pDocID][kp_WordSpacing]               p_qrtPDF_ATB pDocID, format("%3.f Tw", tWordSpacing * tFactor)               put "justify" into tAlign            else               put pAlign into tAlign            end if            qrtPDF_WriteTextBox pDocID, pWidth, pHeight, char tStartIndex to tSepIndex - 1 of pText, tCurrentBorder, "below", tAlign, pFill            put tSepIndex + 1 into tEndIndex         end if         put -1 into tSepIndex         put tEndIndex into tStartIndex         put 0 into tLineWidth         put 0 into tNumberOfSeparators         add 1 to tNumberOfLines         if pBorder is not empty and tNumberOfLines = 2 then            put tMiddleBorder into tCurrentBorder         end if      else         add 1 to tEndIndex      end if   end repeat   -- write the final chunk   if sDocumentsA[pDocID][kp_WordSpacing] > 0 then      put 0 into sDocumentsA[pDocID][kp_WordSpacing]      p_qrtPDF_ATB pDocID, "0 Tw"   end if   -- fix the border in case there was just a single line   if tStartIndex = 1 and "top" is among the items of pBorder then      if tLastBorder is not empty then put comma after tLastBorder      put "top" after tLastBorder   end if   switch pAlign      case "leftjustify"         put "left" into tAlign         break      case "centerjustify"         put "center" into tAlign         break      case "rightjustify"         put "right" into tAlign         break      default         put pAlign into tAlign   end switch   qrtPDF_WriteTextBox pDocID, pWidth, pHeight, char tStartIndex to tEndIndex of pText, tLastBorder, "begin", tAlign, pFillend qrtPDF_WriteTextAreacommand qrtPDF_WriteText pDocID, pHeight, pText, pLink   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "height", pHeight   --   local tFactor, tWidth, tMaxWidth   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentWidth] - sDocumentsA[pDocID][kp_RightMargin] - sDocumentsA[pDocID][kp_CurrentX] into tWidth   put (tWidth - 2 * sDocumentsA[pDocID][kp_BoxMargin]) into tMaxWidth   local tLength, tSepIndex, tEndIndex, tStartIndex, tLineWidth, tNumberOfLines   put length(pText) into tLength   put -1 into tSepIndex   put 1 into tEndIndex   put 1 into tStartIndex   put 0 into tLineWidth   put 1 into tNumberOfLines   local tCurrentChar, tTextAlign, tAlign   put sDocumentsA[pDocID][kp_TextAlign] into tTextAlign   repeat while tEndIndex < tLength      put char tEndIndex of pText into tCurrentChar      if tCurrentChar is return then         -- explicit line break         switch tTextAlign            case "leftjustify"               put "left" into tAlign               break            case "centerjustify"               put "center" into tAlign               break            case "rightjustify"               put "right" into tAlign               break            default               put tTextAlign into tAlign         end switch         qrtPDF_WriteTextBox pDocID, tWidth, pHeight, char tStartIndex to tEndIndex of pText, empty, "below", tAlign, false, pLink         add 1 to tEndIndex         put -1 into tSepIndex         put tEndIndex into tStartIndex         put 0 into tLineWidth         if tNumberOfLines = 1 then            put sDocumentsA[pDocID][kp_LeftMargin] into sDocumentsA[pDocID][kp_CurrentX]            put sDocumentsA[pDocID][kp_CurrentWidth] - sDocumentsA[pDocID][kp_RightMargin] - sDocumentsA[pDocID][kp_CurrentX] into tWidth            put (tWidth - 2 * sDocumentsA[pDocID][kp_BoxMargin]) into tMaxWidth         end if         add 1 to tNumberOfLines         next repeat      end if      if tCurrentChar is space then         put tEndIndex into tSepIndex      end if      add p_qrtPDF_GetStringWidth(pDocID, tCurrentChar) to tLineWidth      if tLineWidth > tMaxWidth then         -- automatic line break         if tSepIndex = -1 then            if sDocumentsA[pDocID][kp_CurrentX] > sDocumentsA[pDocID][kp_LeftMargin] then               -- move to the begin of the next line               add pHeight to sDocumentsA[pDocID][kp_CurrentY]               put sDocumentsA[pDocID][kp_LeftMargin] into sDocumentsA[pDocID][kp_CurrentX]               put sDocumentsA[pDocID][kp_CurrentWidth] - sDocumentsA[pDocID][kp_RightMargin] - sDocumentsA[pDocID][kp_CurrentX] into tWidth               put (tWidth - 2 * sDocumentsA[pDocID][kp_BoxMargin]) into tMaxWidth               add 1 to tEndIndex               add 1 to tNumberOfLines               next repeat            end if            if tEndIndex = tStartIndex then               add 1 to tEndIndex             end if            switch tTextAlign               case "leftjustify"               case "centerjustify"               case "rightjustify"                  put "justify" into tAlign                  break               default                  put tTextAlign into tAlign            end switch            qrtPDF_WriteTextBox pDocID, tWidth, pHeight, char tStartIndex to tEndIndex - 1 of pText, empty, "below", tAlign, false, pLink         else            switch tTextAlign               case "leftjustify"               case "centerjustify"               case "rightjustify"                  put "justify" into tAlign                  break               default                  put tTextAlign into tAlign            end switch            qrtPDF_WriteTextBox pDocID, tWidth, pHeight, char tStartIndex to tSepIndex - 1 of pText, empty, "below", tAlign, false, pLink            put tSepIndex + 1 into tEndIndex         end if         put -1 into tSepIndex         put tEndIndex into tStartIndex         put 0 into tLineWidth         if tNumberOfLines = 1 then            put sDocumentsA[pDocID][kp_LeftMargin] into sDocumentsA[pDocID][kp_CurrentX]            put sDocumentsA[pDocID][kp_CurrentWidth] - sDocumentsA[pDocID][kp_RightMargin] - sDocumentsA[pDocID][kp_CurrentX] into tWidth            put (tWidth - 2 * sDocumentsA[pDocID][kp_BoxMargin]) into tMaxWidth         end if         add 1 to tNumberOfLines      else         add 1 to tEndIndex      end if   end repeat   -- write the final chunk   if length(pText) = 1 or tEndIndex is not tStartIndex then      local tFinalChunk, tFinalWidth, tDeltaX      put char tStartIndex to tEndIndex of pText into tFinalChunk      put p_qrtPDF_GetStringWidth(pDocID, tFinalChunk) into tFinalWidth      switch tTextAlign         case "left"         case "leftjustify"         case "justify"            -- we're already in the right position            put "left" into tAlign            break         case "right"         case "rightjustify"            -- then we'll end up at the right margin anyway            put "right" into tAlign            put tWidth into tFinalWidth            break         case "center"         case "centerjustify"            -- now we must calculate the correct position            put "left" into tAlign            put (tWidth - tFinalWidth) / 2 into tDeltaX            qrtPDF_SetX pDocID, qrtPDF_GetLeftMargin(pDocID) + tDeltaX      end switch      qrtPDF_WriteTextBox pDocID, tFinalWidth, pHeight, tFinalChunk, empty, "right", tAlign, false, pLink   end ifend qrtPDF_WriteTextcommand qrtPDF_WriteTextTable pDocID, pText, pColumnWidths, pColumnAligns, pBorder, pFill   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertIntegerList "columnWidths", pColumnWidths, 0   p_qrtPDF_AssertTextArray pText   if pColumnAligns is empty then       put sDocumentsA[pDocID][kp_TextAlign] into pColumnAligns   end if   p_qrtPDF_AssertAlignList pColumnAligns   -- backward compatibility: border parameter is new in version 1.1.1   if pFill is empty and pBorder is a boolean then      put pBorder into pFill      put empty into pBorder   end if   if pBorder is empty then put "grid" into pBorder   p_qrtPDF_AssertTableBorder pBorder   if pFill is empty then put false into pFill   p_qrtPDF_AssertFlag "fill", pFill   -- proceed now that we're sure all is right   local tExtents, tNumberOfRows, tNumberOfColumns   put the extents of pText into tExtents   put item 2 of line 1 of tExtents into tNumberOfRows   put item 2 of line 2 of tExtents into tNumberOfColumns   local tRow, tColumn, tColumnWidth, tColumnAlign, tX, tY   local tSingleLineHeight   put sDocumentsA[pDocId][kp_FontSize] * 6 / 5 into tSingleLineHeight   repeat with tRow = 1 to tNumberOfRows      -- calculate the height of the row      local tRowLines, tHeight      put 0 into tRowLines      repeat with tColumn = 1 to tNumberOfColumns         put item tColumn of pColumnWidths into tColumnWidth         if tColumnWidth is empty then             put item -1 of pColumnWidths into tColumnWidth         end if         put max(tRowLines, p_qrtPDF_NumberOfLines(pDocID,tColumnWidth,pText[tRow,tColumn])) into tRowLines      end repeat      put tRowLines * tSingleLineHeight into tHeight      -- page break if needed      p_qrtPDF_CheckPageBreak pDocID, tHeight      -- draw the cells in the row      repeat with tColumn = 1 to tNumberOfColumns         put item tColumn of pColumnWidths into tColumnWidth         if tColumnWidth is empty then             put item -1 of pColumnWidths into tColumnWidth         end if         put item tColumn of pColumnAligns into tColumnAlign         if tColumnAlign is empty then             put item -1 of pColumnAligns into tColumnAlign         end if         put sDocumentsA[pDocID][kp_CurrentX] into tX         put sDocumentsA[pDocID][kp_CurrentY] into tY         -- determine the border         local tCellBorder         switch pBorder            case "none"               put empty into tCellBorder               break            case "frame"               put empty into tCellBorder               if tRow is 1 then                  put "top," after tCellBorder               end if               if tRow is tNumberOfRows then                   put "bottom," after tCellBorder               end if               if tColumn is 1 then                  put "left," after tCellBorder               end if               if tColumn is tNumberOfColumns then                  put "right," after tCellBorder               end if               delete char -1 of tCellBorder               break            case "grid"               put "top,bottom,left,right" into tCellBorder               break         end switch         -- draw the border here, not in the text area         -- (otherwise it won't match the row height)         if "top" is among the items of tCellBorder then            qrtPDF_DrawLine pDocId, tX, tY, tX + tColumnWidth, tY         end if         if "bottom" is among the items of tCellBorder then            qrtPDF_DrawLine pDocId, tX, tY + tHeight, tX + tColumnWidth, tY + tHeight         end if         if "left" is among the items of tCellBorder then            qrtPDF_DrawLine pDocId, tX, tY, tX, tY + tHeight         end if         if "right" is among the items of tCellBorder then            qrtPDF_DrawLine pDocId, tX + tColumnWidth, tY, tX + tColumnWidth, tY + tHeight         end if         -- draw the text area without a border         qrtPDF_WriteTextArea pDocID, tColumnWidth, tSingleLineHeight, pText[tRow,tColumn], empty, tColumnAlign         -- move to the right of this cell         qrtPDF_SetXY pDocID, tX + tColumnWidth, tY      end repeat      -- go to the next line      qrtPDF_DoLineBreak pDocID, tHeight   end repeatend qrtPDF_WriteTextTable-- link handling methodsfunction qrtPDF_CreateLink pDocID, pPage, pY   p_qrtPDF_AssertDocID pDocID   if pPage is empty then      put sDocumentsA[pDocID][kp_CurrentPage] into pPage   end if   p_qrtPDF_AssertInteger "pageNumber", pPage   if pY is empty then      put sDocumentsA[pDocID][kp_CurrentY] into pY   end if   p_qrtPDF_AssertNumber "y", pY   --   local tLinks, tLinkID   put sDocumentsA[pDocID][kp_LinkList] into tLinks   if tLinks is empty then      put 1 into tLinkID      put "#" into tLinks   else      put the number of lines in tLinks into tLinkID      add 1 to tLinkID      put return & "#" after tLinks   end if   put tLinks into sDocumentsA[pDocID][kp_LinkList]   put pPage & comma & pY into line tLinkID of sDocumentsA[pDocID][kp_LinkList]   return tLinkIDend qrtPDF_CreateLinkcommand qrtPDF_SetLink pDocID, pLink, pPage, pY   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertLink pDocID, pLink   if pPage is empty then      put sDocumentsA[pDocID][kp_CurrentPage] into pPage   end if   p_qrtPDF_AssertInteger "pageNumber", pPage   if pY is empty then      put sDocumentsA[pDocID][kp_CurrentY] into pY   end if   p_qrtPDF_AssertNumber "y", pY   --   put pPage & comma & pY into line pLink of sDocumentsA[pDocID][kp_LinkList]end qrtPDF_SetLinkfunction qrtPDF_GetLink pDocID, pLink   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertLink pDocID, pLink   --   return line pLink of sDocumentsA[pDocID][kp_LinkList]end qrtPDF_GetLinkcommand qrtPDF_PlaceLink pDocID, pX, pY, pWidth, pHeight, pLink   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   p_qrtPDF_AssertNumber "width", pWidth   p_qrtPDF_AssertNumber "height", pHeight   --    local tPage, tFactor, tHeight   put sDocumentsA[pDocID][kp_CurrentPage] into tPage   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   local tPageLinks   put sDocumentsA[pDocID][kp_PageLinks][tPage] into tPageLinks   if tPageLinks is not empty then      put return after tPageLinks   end if   put (pX * tFactor) & comma & ((tHeight - pY) * tFactor) & comma & (pWidth * tFactor) & comma & (pHeight * tFactor) & comma & pLink after tPageLinks   put tPageLinks into sDocumentsA[pDocID][kp_PageLinks][tPage]end qrtPDF_PlaceLink-- bookmark methodson qrtPDF_CreateBookmark pDocID, pTitle, pLevel, pY   p_qrtPDF_AssertDocID pDocID   if pLevel is empty then      put 0 into pLevel   end if   p_qrtPDF_AssertInteger "level", pLevel   if pY is empty then      put sDocumentsA[pDocID][kp_CurrentY] into pY   end if   p_qrtPDF_AssertNumber "y", pY   --   if sDocumentsA[pDocID][kp_BookmarkList] is empty then      put 0 into sDocumentsA[pDocID][kp_BookmarkList]   else      add 1 to sDocumentsA[pDocID][kp_BookmarkList]   end if   local tBookmarkID   put sDocumentsA[pDocID][kp_BookmarkList] into tBookmarkID   put pTitle into sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_Title]   put pLevel into sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_Level]   put sDocumentsA[pDocID][kp_CurrentHeight] - pY into sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_YComplement]   put sDocumentsA[pDocID][kp_CurrentPage] into sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_PageNumber]end qrtPDF_CreateBookmark-- misc helper methodson qrtPDF_DoLineBreak pDocID, pHeight   p_qrtPDF_AssertDocID pDocID   if pHeight is empty then      put sDocumentsA[pDocID][kp_LastLineHeight] into pHeight   end if   p_qrtPDF_AssertNumber "height", pHeight   --   put sDocumentsA[pDocID][kp_LeftMargin] into sDocumentsA[pDocID][kp_CurrentX]   add pHeight to sDocumentsA[pDocID][kp_CurrentY]end qrtPDF_DoLineBreak-- unit conversion functionsfunction qrtPDF_ConvertFromUnitToUnit pValue, pSourceUnit, pTargetUnit   p_qrtPDF_AssertUnit pSourceUnit   p_qrtPDF_AssertUnit pTargetUnit   if pSourceUnit = pTargetUnit then      return pValue   end if   local tSourceFactor, tTargetFactor   put kScaleFactorsA[pSourceUnit] into tSourceFactor   put kScaleFactorsA[pTargetUnit] into tTargetFactor   return pValue * tSourceFactor / tTargetFactorend qrtPDF_ConvertFromUnitToUnitfunction qrtPDF_ConvertFromUnitToDocUnit pDocID, pValue, pSourceUnit   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertUnit pSourceUnit   local tSourceFactor, tTargetFactor   put kScaleFactorsA[pSourceUnit] into tSourceFactor   put sDocumentsA[pDocID][kp_ScaleFactor] into tTargetFactor   return pValue * tSourceFactor / tTargetFactorend qrtPDF_ConvertFromUnitToDocUnitfunction qrtPDF_ConvertFromDocUnitToUnit pDocID, pValue, pTargetUnit   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertUnit pTargetUnit   local tSourceFactor, tTargetFactor   put sDocumentsA[pDocID][kp_ScaleFactor] into tSourceFactor   put kScaleFactorsA[pTargetUnit] into tTargetFactor   return pValue * tSourceFactor / tTargetFactorend qrtPDF_ConvertFromDocUnitToUnit-- transformation handlerscommand qrtPDF_StartTransformation pDocID   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_ATB pDocID, "q"end qrtPDF_StartTransformationcommand qrtPDF_StopTransformation pDocID   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_ATB pDocID, "Q"   put empty into sDocumentsA[pDocID][kp_TransformationSet]end qrtPDF_StopTransformationcommand qrtPDF_ScaleX pDocID, pScale, pX, pY   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "scale",pScale,,,0   qrtPDF_Scale pDocID, pScale, 100, pX, pYend qrtPDF_ScaleXcommand qrtPDF_ScaleY pDocID, pScale, pX, pY   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "scale",pScale,,,0   qrtPDF_Scale pDocID, 100, pScale, pX, pYend qrtPDF_ScaleYcommand qrtPDF_ScaleXY pDocID, pScale, pX, pY   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "scale",pScale,,,0   qrtPDF_Scale pDocID, pScale, pScale, pX, pYend qrtPDF_ScaleXYcommand qrtPDF_Scale pDocID, pScaleX, pScaleY, pX, pY   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "scaleX",pScaleX,,,0   p_qrtPDF_AssertNumber "scaleY",pScaleY,,,0   if pX is empty then      put sDocumentsA[pDocID][kp_CurrentX] into pX   end if   p_qrtPDF_AssertNumber "x", pX   if pY is empty then      put sDocumentsA[pDocID][kp_CurrentY] into pY   end if   p_qrtPDF_AssertNumber "y", pY   --   put pX * sDocumentsA[pDocID][kp_ScaleFactor] into pX   put (sDocumentsA[pDocID][kp_CurrentHeight] - pY) * sDocumentsA[pDocID][kp_ScaleFactor] into pY   divide pScaleX by 100   divide pScaleY by 100   -- apply transformation matrix   qrtPDF_ApplyTransformation pDocID, pScaleX, 0, 0, pScaleY, pX * (1 - pScaleX), pY * (1 - pScaleY)end qrtPDF_Scalecommand qrtPDF_MirrorH pDocID, pX   p_qrtPDF_AssertDocID pDocID   qrtPDF_Scale pDocID, -100, 100, pX, emptyend qrtPDF_MirrorHcommand qrtPDF_MirrorV pDocID, pY   p_qrtPDF_AssertDocID pDocID   qrtPDF_Scale pDocID, 100, -100, empty, pYend qrtPDF_MirrorVcommand qrtPDF_MirrorPoint pDocID, pX, pY   p_qrtPDF_AssertDocID pDocID   qrtPDF_Scale pDocID, -100, -100, pX, pYend qrtPDF_MirrorPointcommand qrtPDF_MirrorAngle pDocID, pAngle, pX, pY   p_qrtPDF_AssertDocID pDocID   qrtPDF_Scale pDocID, -100, 100, pX, pY   qrtPDF_Rotate pDocID, -2 * (pAngle - 90), pX, pYend qrtPDF_MirrorAnglecommand qrtPDF_MirrorLine pDocID, pX1, pY1, pX2, pY2   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x1", pX1   p_qrtPDF_AssertNumber "x2", pX2   p_qrtPDF_AssertNumber "y1", pY1   p_qrtPDF_AssertNumber "y2", pY2   --   local tAngle   ##QQQ:: qrtPDF_MirrorAngle pDocID, tAngle, tX, tYend qrtPDF_MirrorLinecommand qrtPDF_TranslateX pDocID, pDeltaX   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "delta", pDeltaX   qrtPDF_Translate pDocID, pDeltaX, 0end qrtPDF_TranslateXcommand qrtPDF_TranslateY pDocID, pDeltaY   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "delta", pDeltaY   qrtPDF_Translate pDocID, 0, pDeltaYend qrtPDF_TranslateYcommand qrtPDF_Translate pDocID, pDeltaX, pDeltaY   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "deltaX", pDeltaX   p_qrtPDF_AssertNumber "deltaY", pDeltaY   --   local tScale   put sDocumentsA[pDocID][kp_ScaleFactor] into tScale   qrtPDF_ApplyTransformation pDocID, 1, 0, 0, 1, pDeltaX * tScale, -pDeltaY * tScaleend qrtPDF_Translatecommand qrtPDF_Rotate pDocID, pAngle, pX, pY   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "angle", pAngle   if pX is empty then      put sDocumentsA[pDocID][kp_CurrentX] into pX   end if   p_qrtPDF_AssertNumber "x", pX   if pY is empty then      put sDocumentsA[pDocID][kp_CurrentY] into pY   end if   p_qrtPDF_AssertNumber "y", pY   --   local tRadAngle, tCos, tSin   put pX * sDocumentsA[pDocID][kp_ScaleFactor] into pX   put (sDocumentsA[pDocID][kp_CurrentHeight] - pY) * sDocumentsA[pDocID][kp_ScaleFactor] into pY   put pAngle * pi / 180 into tRadAngle   put cos(tRadAngle) into tCos   put sin(tRadAngle) into tSin   qrtPDF_ApplyTransformation pDocID, tCos, tSin, -tSin, tCos, pX + tSin * pY - tCos * pX, pY - tCos * pY - tSin * pXend qrtPDF_Rotatecommand qrtPDF_SkewX pDocID, pAngle, pX, pY   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "angle", pAngle   qrtPDF_Skew pDocID, pAngle, 0, pX, pYend qrtPDF_SkewXcommand qrtPDF_SkewY pDocID, pAngle, pX, pY   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "angle", pAngle   qrtPDF_Skew pDocID, 0, pAngle, pX, pYend qrtPDF_SkewYcommand qrtPDF_Skew pDocID, pAngleX, pAngleY, pX, pY   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "angleX", pAngleX, -90, 90   p_qrtPDF_AssertNumber "angleY", pAngleY, -90, 90   if pX is empty then      put sDocumentsA[pDocID][kp_CurrentX] into pX   end if   p_qrtPDF_AssertNumber "x", pX   if pY is empty then      put sDocumentsA[pDocID][kp_CurrentY] into pY   end if   p_qrtPDF_AssertNumber "y", pY   --   local tTanX, tTanY   put pX * sDocumentsA[pDocID][kp_ScaleFactor] into pX   put (sDocumentsA[pDocID][kp_CurrentHeight] - pY) * sDocumentsA[pDocID][kp_ScaleFactor] into pY   put tan(pAngleX * pi / 180) into tTanX   put tan(pAngleY * pi / 180) into tTanY   qrtPDF_ApplyTransformation pDocID, 1, tTanY, tTanX, 1, -tTanX * pY, -tTanY * pXend qrtPDF_Skewcommand qrtPDF_ApplyTransformation pDocID, pTM1, pTM2, pTM3, pTM4, pTM5, pTM6   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "tm1", pTM1   p_qrtPDF_AssertNumber "tm2", pTM2   p_qrtPDF_AssertNumber "tm3", pTM3   p_qrtPDF_AssertNumber "tm4", pTM4   p_qrtPDF_AssertNumber "tm5", pTM5   p_qrtPDF_AssertNumber "tm6", pTM6   --   put pTM1,pTM2,pTM3,pTM4,pTM5,pTM6 & return after sDocumentsA[pDocID][kp_TransformationSet]   p_qrtPDF_ATB pDocID, format("%.3f %.3f %.3f %.3f %.3f %.3f cm", pTM1, pTM2, pTM3, pTM4, pTM5, pTM6)end qrtPDF_ApplyTransformation/* private */ command p_qrtPDF_ApplyTransformationSet pDocID, pTransformationSet   if pTransformationSet is not empty then      qrtPDF_StartTransformation pDocID      repeat for each line tTransformation in pTransformationSet         if tTransformation is not empty then            qrtPDF_ApplyTransformation pDocID, \                   item 1 of tTransformation, \                   item 2 of tTransformation, \                   item 3 of tTransformation, \                   item 4 of tTransformation, \                   item 5 of tTransformation, \                   item 6 of tTransformation         end if      end repeat   end ifend p_qrtPDF_ApplyTransformationSet-- alpha and blendmodes functions and handlerson qrtPDF_SetAlpha pDocID, pAlpha, pBlendmode   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertInteger "alpha", pAlpha, 0, 100   if pBlendmode is empty then      put "Normal" into pBlendmode   end if   p_qrtPDF_AssertBlendmode pBlendmode   -- proceed now that we're sure all is right   local tExtGS   put qrtPDF_CreateExtGState(pDocID, pAlpha, pAlpha, pBlendmode) into tExtGS   qrtPDF_SetExtGState pDocID, tExtGSend qrtPDF_SetAlphafunction qrtPDF_CreateExtGState pDocID, pStrokeAlpha, pNonStrokeAlpha, pBlendMode   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertInteger "strokeAlpha", pStrokeAlpha, 0, 255   p_qrtPDF_AssertInteger "nonStrokeAlpha", pNonStrokeAlpha, 0, 255   if pBlendmode is empty then      put "Normal" into pBlendmode   end if   p_qrtPDF_AssertBlendmode pBlendmode   --   local tExtGStateID   if sDocumentsA[pDocID][kp_ExtGStateCount] is empty then      put 0 into tExtGStateID   else      put sDocumentsA[pDocID][kp_ExtGStateCount] into tExtGStateID   end if   add 1 to tExtGStateID   put "ca" & colon & (pStrokeAlpha / 100) & return & \          "CA" & colon & (pNonStrokeAlpha / 100) & return & \          "BM" & colon & "/" & pBlendmode into sDocumentsA[pDocID][kp_ExtGStates][tExtGStateID][kp_ExtG_StateParams]   put tExtGStateID into sDocumentsA[pDocID][kp_ExtGStateCount]   -- alpha is only available since PDF 1.4   if sDocumentsA[pDocID][kp_PDFVersion] < "1.4" then      put "1.4" into sDocumentsA[pDocID][kp_PDFVersion]   end if   return tExtGStateIDend qrtPDF_CreateExtGStatecommand qrtPDF_SetExtGState pDocID, pExtGStateID   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertExtGStateID pDocID, pExtGStateID   --   put pExtGStateID into sDocumentsA[pDocID][kp_ExtGStateId]   p_qrtPDF_ATB pDocID, format("/GS%d gs", pExtGStateID)end qrtPDF_SetExtGState/* private */ command p_qrtPDF_SetExtGState pDocID, pExtGStateID   if pExtGStateID is not empty then      qrtPDF_SetExtGState pDocID, pExtGStateID   end ifend p_qrtPDF_SetExtGState-- clipping handlers and functionscommand qrtPDF_SetClippingString pDocID, pX, pY, pText, pOutline   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   if pOutline is empty then      put false into pOutline   end if   p_qrtPDF_AssertFlag "outline", pOutline   --   put "string",pX,pY,URLEncode(pText),pOutline & return after sDocumentsA[pDocID][kp_ClippingSet]   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   local tOperator, tData   if pOutline then      put 5 into tOperator   else       put 7 into tOperator   end if   put p_qrtPDF_EscapeText(pDocID,pText) into pText   put format("q BT %.2f %.2f Td %d Tr (%s) Tj ET", pX * tFactor, (tHeight - pY) * tFactor, tOperator, pText) into tData   p_qrtPDF_ATB pDocID, tDataend qrtPDF_SetClippingStringcommand qrtPDF_SetClippingRectangle pDocID, pX, pY, pWidth, pHeight, pOutline   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   p_qrtPDF_AssertNumber "width", pWidth   p_qrtPDF_AssertNumber "height", pHeight   if pOutline is empty then      put false into pOutline   end if   p_qrtPDF_AssertFlag "outline", pOutline   --   put "rectangle",pX,pY,pWidth,pHeight,pOutline & return after sDocumentsA[pDocID][kp_ClippingSet]   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   local tOperator, tData   if pOutline then      put "S" into tOperator   else       put "n" into tOperator   end if   put format("q %.2f %.2f %.2f %.2f re W %s", (pX * tFactor), ((tHeight - pY) * tFactor), (pWidth * tFactor), (pHeight * tFactor * -1), tOperator) into tData   p_qrtPDF_ATB pDocID, tDataend qrtPDF_SetClippingRectanglecommand qrtPDF_SetClippingRoundedRectangle pDocID, pX, pY, pWidth, pHeight, pRadius, pOutline   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   p_qrtPDF_AssertNumber "width", pWidth   p_qrtPDF_AssertNumber "height", pHeight   p_qrtPDF_AssertNumber "roundRadius", pRadius   if pOutline is empty then      put false into pOutline   end if   p_qrtPDF_AssertFlag "outline", pOutline   --   put "roundedrectangle",pX,pY,pWidth,pHeight,pRadius,pOutline & return after sDocumentsA[pDocID][kp_ClippingSet]   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   local tOperator   if pOutline then      put "S" into tOperator   else       put "n" into tOperator   end if   local tArc, tXC, tYC   put 4 / 3 * (sqrt(2) - 1) into tArc   put pX + pWidth - pRadius into tXC   put pY + pRadius into tYC   p_qrtPDF_ATB pDocID, "q "   p_qrtPDF_SetPlotPoint pDocID, (pX + pRadius), pY   p_qrtPDF_PlotLine pDocID, tXC, pY   p_qrtPDF_PlotCurve pDocID, tXC + pRadius * tArc, tYC - pRadius, tXC + pRadius, tYC - pRadius * tArc, tXC + pRadius, tYC   put pX + pWidth - pRadius into tXC   put pY + pHeight - pRadius into tYC   p_qrtPDF_PlotLine pDocID, pX + pWidth, tYC   p_qrtPDF_PlotCurve pDocID, tXC + pRadius, tYC + pRadius * tArc, tXC + pRadius * tArc, tYC + pRadius, tXC, tYC + pRadius   put pX + pRadius into tXC   put pY + pHeight - pRadius into tYC   p_qrtPDF_PlotLine pDocID, tXC, pY + pHeight   p_qrtPDF_PlotCurve pDocID, tXC - pRadius * tArc, tYC + pRadius, tXC - pRadius, tYC + pRadius * tArc, tXC - pRadius, tYC   put pX + pRadius into tXC   put pY + pRadius into tYC   p_qrtPDF_PlotLine pDocID, pX, tYC   p_qrtPDF_PlotCurve pDocID, tXC - pRadius, tYC - pRadius * tArc, tXC - pRadius * tArc, tYC - pRadius, tXC, tYC - pRadius   p_qrtPDF_ATB pDocID, " W " & tOperatorend qrtPDF_SetClippingRoundedRectanglecommand qrtPDF_SetClippingOval pDocID, pX, pY, pWidth, pHeight, pOutline   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   p_qrtPDF_AssertNumber "width", pWidth   p_qrtPDF_AssertNumber "height", pHeight   if pOutline is empty then      put false into pOutline   end if   p_qrtPDF_AssertFlag "outline", pOutline   -- determine the center location and radius of the ellipse   local tRadiusX, tRadiusY, tCenterX, tCenterY   put pWidth / 2 into tRadiusX   put pHeight / 2 into tRadiusY   put pX + tRadiusX into tCenterX   put pY + tRadiusY into tCenterY   -- redirect as ellipse   qrtPDF_SetClippingEllipse pDocID, tCenterX, tCenterY, tRadiusX, tRadiusY, pOutlineend qrtPDF_SetClippingOvalcommand qrtPDF_SetClippingEllipse pDocID, pX, pY, pRX, pRY, pOutline   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   p_qrtPDF_AssertNumber "radiusX", pRX   p_qrtPDF_AssertNumber "radiusY", pRY   if pOutline is empty then put false into pOutline   p_qrtPDF_AssertFlag "outline", pOutline   --   put "ellipse",pX,pY,pRX,pRY,pOutline & return after sDocumentsA[pDocID][kp_ClippingSet]   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   local tOperator   if pOutline then      put "S" into tOperator   else       put "n" into tOperator   end if   local tLX, tLY   put 4 / 3 * (sqrt(2) - 1) * pRX into tLX   put 4 / 3 * (sqrt(2) - 1) * pRY into tLY   local tData   p_qrtPDF_ATB pDocID, "q "   put format("%.2f %.2f m %.2f %.2f %.2f %.2f %.2f %.2f c", (pX + pRX) * tFactor, (tHeight - pY) * tFactor, (pX + pRX) * tFactor, (tHeight - (pY - tLY)) * tFactor, (pX + tLX) * tFactor, (tHeight - (pY - pRY)) * tFactor, pX * tFactor, (tHeight - (pY - pRY)) * tFactor) into tData   p_qrtPDF_ATB pDocID, tData   put format("%.2f %.2f %.2f %.2f %.2f %.2f c", (pX - tLX) * tFactor, (tHeight - (pY - pRY)) * tFactor, (pX - pRX) * tFactor, (tHeight - (pY - tLY)) * tFactor, (pX - pRX) * tFactor, (tHeight - pY) * tFactor) into tData   p_qrtPDF_ATB pDocID, tData   put format("%.2f %.2f %.2f %.2f %.2f %.2f c", (pX - pRX) * tFactor, (tHeight - (pY + tLY)) * tFactor, (pX - tLX) * tFactor, (tHeight - (pY + pRY)) * tFactor, pX * tFactor, (tHeight - (pY + pRY)) * tFactor) into tData   p_qrtPDF_ATB pDocID, tData   put format("%.2f %.2f %.2f %.2f %.2f %.2f c", (pX + tLX) * tFactor, (tHeight - (pY + pRY)) * tFactor, (pX + pRX) * tFactor, (tHeight - (pY + tLY)) * tFactor, (pX + pRX) * tFactor, (tHeight - pY) * tFactor) into tData   p_qrtPDF_ATB pDocID, tData   p_qrtPDF_ATB pDocID, " W " & tOperatorend qrtPDF_SetClippingEllipsecommand qrtPDF_SetClippingPolygon pDocID, pPoints, pOutline   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertPoints pPoints   if pOutline is empty then      put false into pOutline   end if   p_qrtPDF_AssertFlag "outline", pOutline   --   put "polygon",URLEncode(pPoints),pOutline & return after sDocumentsA[pDocID][kp_ClippingSet]   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   local tOperator   if pOutline then      put "S" into tOperator   else       put "n" into tOperator   end if   local tStartPoint, tPoint, tDrawFlag   p_qrtPDF_ATB pDocID, "q "   put line 1 of pPoints into tStartPoint   p_qrtPDF_SetPlotPoint pDocID, (item 1 of tStartPoint), (item 2 of tStartPoint)   put true into tDrawFlag   delete line 1 of pPoints   repeat for each line tPoint in pPoints      if tDrawFlag is false then         if tPoint is not empty then            p_qrtPDF_SetPlotPoint pDocID, (item 1 of tPoint), (item 2 of tPoint)         end if      else         if tPoint is empty then            put false into tDrawFlag         else            p_qrtPDF_PlotLine pDocID, (item 1 of tPoint), (item 2 of tPoint)         end if      end if   end repeat   if tDrawFlag then p_qrtPDF_PlotLine pDocID, (item 1 of tStartPoint), (item 2 of tStartPoint)   p_qrtPDF_ATB pDocID, " W " &tOperatorend qrtPDF_SetClippingPolygoncommand qrtPDF_SetClippingRegularPolygon pDocID, pX, pY, pWidth, pHeight, pSides, pStartAngle, pOutline   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   p_qrtPDF_AssertNumber "width", pWidth   p_qrtPDF_AssertNumber "height", pHeight   p_qrtPDF_AssertInteger "sides", pSides, 3   p_qrtPDF_AssertInteger "startAngle", pStartAngle, 0, 360   if pOutline is empty then      put false into pOutline   end if   p_qrtPDF_AssertFlag "outline", pOutline   --   put "regularpolygon",pX,pY,pWidth,pHeight,pSides,pStartAngle,pOutline & return after sDocumentsA[pDocID][kp_ClippingSet]   local tRadiusX, tRadiusY, tCenterX, tCenterY   put pWidth / 2 into tRadiusX   put pHeight / 2 into tRadiusY   put pX + tRadiusX into tCenterX   put pY + tRadiusY into tCenterY   local tPoints   repeat with i = 1 to pSides      local tCurrentAngle, tCurrentRadians      put (180 + pStartAngle) + (i - 1) * 360 / pSides - 90 into tCurrentAngle      put tCurrentAngle * pi / 180 into tCurrentRadians      put tCenterX + tRadiusX * sin(tCurrentRadians) & comma & \             tCenterY + tRadiusY * cos(tCurrentRadians) & return \             after tPoints   end repeat   delete char -1 of tPoints   qrtPDF_SetClippingPolygon pDocID, tPoints, pOutlineend qrtPDF_SetClippingRegularPolygoncommand qrtPDF_ResetClipping pDocID   p_qrtPDF_AssertDocID pDocID   --   put empty into sDocumentsA[pDocID][kp_ClippingSet]   p_qrtPDF_ATB pDocID, "Q"end qrtPDF_ResetClipping/* private */ command p_qrtPDF_ApplyClippingSet pDocID, pClippingSet   if pClippingSet is not empty then      repeat for each line tClipping in pClippingSet         switch item 1 of tClipping            case "string"               qrtPDF_SetClippingString pDocID, \                      item 2 of tClipping, \                      item 3 of tClipping, \                      URLDecode(item 4 of tClipping), \                      item 5 of tClipping               break            case "rectangle"               qrtPDF_SetClippingRectangle pDocID, \                      item 2 of tClipping, \                      item 3 of tClipping, \                      item 4 of tClipping, \                      item 5 of tClipping, \                      item 6 of tClipping               break            case "roundedrectangle"               qrtPDF_SetClippingRoundedRectangle pDocID, \                      item 2 of tClipping, \                      item 3 of tClipping, \                      item 4 of tClipping, \                      item 5 of tClipping, \                      item 6 of tClipping, \                      item 7 of tClipping               break            case "ellipse"               qrtPDF_SetClippingEllipse pDocID, \                      item 2 of tClipping, \                      item 3 of tClipping, \                      item 4 of tClipping, \                      item 5 of tClipping, \                      item 6 of tClipping               break            case "polygon"               qrtPDF_SetClippingPolygon pDocID, \                      URLDecode(item 2 of tClipping), \                      item 3 of tClipping               break            case "regularpolygon"               qrtPDF_SetClippingRegularPolygon pDocID, \                      item 2 of tClipping, \                      item 3 of tClipping, \                      item 4 of tClipping, \                      item 5 of tClipping, \                      item 6 of tClipping, \                      item 7 of tClipping, \                      item 8 of tClipping               break         end switch      end repeat   end ifend p_qrtPDF_ApplyClippingSet-- gradients handlers and functionscommand qrtPDF_DrawLinearGradient pDocID, pX, pY, pWidth, pHeight, pStartColor, pEndColor, pGradientData   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   p_qrtPDF_AssertNumber "width", pWidth   p_qrtPDF_AssertNumber "height", pHeight   p_qrtPDF_AssertColor "start color", pStartColor   p_qrtPDF_AssertColor "end color", pEndColor   if pGradientData is empty then      put "0,0,1,0" into pGradientData   end if   p_qrtPDF_AssertLinearGradientData pGradientData   -- proceed now that we're sure all is right   local tGradientA   put pStartColor into tGradientA[kp_Shader_StartColor]   put pEndColor into tGradientA[kp_Shader_EndColor]   put pGradientData into tGradientA[kp_Shader_Coords]   p_qrtPDF_DrawGradient pDocID, pX, pY, pWidth, pHeight, 2, tGradientAend qrtPDF_DrawLinearGradientcommand qrtPDF_DrawRadialGradient pDocID, pX, pY, pWidth, pHeight, pStartColor, pEndColor, pGradientData   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   p_qrtPDF_AssertNumber "width", pWidth   p_qrtPDF_AssertNumber "height", pHeight   p_qrtPDF_AssertColor "start color", pStartColor   p_qrtPDF_AssertColor "end color", pEndColor   if pGradientData is empty then      put "0.5,0.5,0.5,0.5,1" into pGradientData   end if   p_qrtPDF_AssertRadialGradientData pGradientData   -- proceed now that we're sure all is right   local tGradientA   put pStartColor into tGradientA[kp_Shader_StartColor]   put pEndColor into tGradientA[kp_Shader_EndColor]   put pGradientData into tGradientA[kp_Shader_Coords]   p_qrtPDF_DrawGradient pDocID, pX, pY, pWidth, pHeight, 3, tGradientAend qrtPDF_DrawRadialGradient/* private */ command p_qrtPDF_DrawGradient pDocID, pX, pY, pWidth, pHeight, pGradientType, pGradientData   p_qrtPDF_AssertDocID pDocID   p_qrtPDF_AssertNumber "x", pX   p_qrtPDF_AssertNumber "y", pY   p_qrtPDF_AssertNumber "width", pWidth   p_qrtPDF_AssertNumber "height", pHeight   p_qrtPDF_AssertGradientData pGradientType, pGradientData   --   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   ## prepare for gradient   local tPrepString   put "q" into tPrepString   ## set up clipping rect   put format(" %.2f %.2f %.2f %.2f re W n", pX * tFactor, (tHeight - pY) * tFactor, pWidth * tFactor, pHeight * -1 * tFactor) after tPrepString   ## set up transformation matrix for gradient   put format(" %.3f 0 0 %.3f %.3f %.3f cm", pWidth * tFactor, pHeight * tFactor, pX * tFactor, (tHeight - (pY + pHeight)) * tFactor) after tPrepString   p_qrtPDF_ATB pDocID, tPrepString   ## now play the shades game   local tShaderID   if sDocumentsA[pDocID][kp_ShaderCount] is empty then      put 0 into tShaderID   else      put sDocumentsA[pDocID][kp_ShaderCount] into tShaderID   end if   add 1 to tShaderID   local tKeys, tKey   put the keys of pGradientData into tKeys   repeat for each line tKey in tKeys      put pGradientData[tKey] into sDocumentsA[pDocID][kp_Shaders][tShaderID][tKey]   end repeat   put pGradientType into sDocumentsA[pDocID][kp_Shaders][tShaderID][kp_Shader_Type]   put tShaderID into sDocumentsA[pDocID][kp_ShaderCount]   p_qrtPDF_ATB pDocID, "/Sh" & tShaderID && "sh"   ## cleanup after gradient   p_qrtPDF_ATB pDocID, "Q"end p_qrtPDF_DrawGradient# ***** BEGIN PRIVATE HANDLERS *****--> core handlers for building the PDF documents/* private */ command p_qrtPDF_PutHeader pDocID   p_qrtPDF_ATB pDocID, "%PDF-" & sDocumentsA[pDocID][kp_PdfVersion]end p_qrtPDF_PutHeader/* private */ command p_qrtPDF_PutPages pDocID   local tNumberOfPages   put sDocumentsA[pDocID][kp_NumberOfPages] into tNumberOfPages   -- read the default orientation data   if sDocumentsA[pDocID][kp_DefaultOrientation] = "p" then      put sDocumentsA[pDocID][kp_PageWidthPt] into sDocumentsA[pDocID][kp_CurrentWidthtPt]      put sDocumentsA[pDocID][kp_PageHeightPt] into sDocumentsA[pDocID][kp_CurrentHeightPt]   else      put sDocumentsA[pDocID][kp_PageWidthPt] into sDocumentsA[pDocID][kp_CurrentHeightPt]      put sDocumentsA[pDocID][kp_PageHeightPt] into sDocumentsA[pDocID][kp_CurrentWidthtPt]   end if   -- prepare for compression   local tFilter   if sDocumentsA[pDocID][kp_CompressionFlag] then      put "/Filter /FlateDecode " into tFilter   else      put "" into tFilter   end if   -- loop over the pages   repeat with tPage = 1 to tNumberOfPages      -- create a new page      p_qrtPDF_NewObject pDocID      p_qrtPDF_ATB pDocID, "<</Type /Page"      p_qrtPDF_ATB pDocID, "/Parent 1 0 R"      -- handle orientation change      if line tPage of sDocumentsA[pDocID][kp_OrientationChanges] is true then         p_qrtPDF_ATB pDocID, format("/MediaBox [0 0 %.2f %.2f]", sDocumentsA[pDocID][kp_CurrentHeightPt], sDocumentsA[pDocID][kp_CurrentWidthtPt])      end if      -- prepare for resources      p_qrtPDF_ATB pDocID, "/Resources 2 0 R"      -- include page links      if sDocumentsA[pDocID][kp_PageLinks][tPage] is not empty then         local tAnnots, tRect, tPageLink, tLinkRef         put "/Annots [" into tAnnots         repeat for each line tPageLink in sDocumentsA[pDocID][kp_PageLinks][tPage]            -- build the link area rectangle            put format("%.2f %.2f %.2f %.2f", item 1 of tPageLink, item 2 of tPageLink, (item 1 of tPageLink) + (item 3 of tPageLink), (item 2 of tPageLink) - (item 4 of tPageLink)) into tRect            put "<</Type /Annot /Subtype /Link /Rect [" & tRect & "] /Border [0 0 0]" & space after tAnnots            put item 5 of tPageLink into tLinkRef            if tLinkRef is a number then               local tLinkData, tLinkPageN, tLinkPageY, tFactor, tHeight               put line tLinkRef of sDocumentsA[pDocID][kp_LinkList] into tLinkData               put item 1 of tLinkData into tLinkPageN               put item 2 of tLinkData into tLinkPageY               if line tLinkPageN of sDocumentsA[pDocID][kp_OrientationChanges] is true then                  put sDocumentsA[pDocID][kp_CurrentWidthtPt] into tHeight               else                  put sDocumentsA[pDocID][kp_CurrentHeightPt] into tHeight               end if               put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor               put format("/Dest [%d 0 R /XYZ 0 %.2f null]>>",1 + 2 * tLinkPageN, tHeight - tLinkPageY * tFactor) after tAnnots            else               put "/A <</S /URI /URI (" & p_qrtPDF_Escape(tLinkRef) & ")>>>>" after tAnnots            end if         end repeat         put "]" after tAnnots         p_qrtPDF_ATB pDocID, tAnnots      end if      -- prepare for the content      p_qrtPDF_ATB pDocID, "/Contents" && (sDocumentsA[pDocID][kp_CurrentObject] + 1) && "0 R>>"      p_qrtPDF_ATB pDocID, "endobj"      -- now insert the actual content of the page      local tPageData, tPageDataLength      put sDocumentsA[pDocID][kp_PageBuffers][tPage] into tPageData      if sDocumentsA[pDocID][kp_CompressionFlag] then         put p_qrtPDF_Deflate(tPageData) into tPageData      end if      put the number of bytes in tPageData into tPageDataLength      p_qrtPDF_NewObject pDocID      p_qrtPDF_ATB pDocID, "<<" & tFilter & "/Length" && tPageDataLength & ">>"      p_qrtPDF_ATBS pDocID, tPageData      p_qrtPDF_ATB pDocID, "endobj"      -- save memory by deleting the page buffer      if kLibDebugMode is not "true" then         delete variable sDocumentsA[pDocID][kp_PageBuffers][tPage]      end if   end repeat   -- pages root   local tPageRootOffset, tKids   put the number of bytes in sDocumentsA[pDocID][kp_Buffer] into tPageRootOffset   put tPageRootOffset into sDocumentsA[pDocID][kp_Offsets][1]   p_qrtPDF_ATB pDocID, "1 0 obj"   p_qrtPDF_ATB pDocID, "<</Type /Pages"   put "/Kids [" into tKids   repeat with tPage = 1 to tNumberOfPages      put (3 + 2 * (tPage - 1)) && "0 R" & space after tKids   end repeat   put "]" after tKids   p_qrtPDF_ATB pDocID, tKids   p_qrtPDF_ATB pDocID, "/Count" && tNumberOfPages   p_qrtPDF_ATB pDocID, format("/MediaBox [0 0 %.2f %.2f]", sDocumentsA[pDocID][kp_CurrentWidthtPt], sDocumentsA[pDocID][kp_CurrentHeightPt])   p_qrtPDF_ATB pDocID, ">>"   p_qrtPDF_ATB pDocID, "endobj"end p_qrtPDF_PutPages/* private */ command p_qrtPDF_PutShaders pDocID   local tShaders   put sDocumentsA[pDocID][kp_ShaderCount] into tShaders   repeat with tShader = 1 to tShaders      local tShaderA, tShaderType      put sDocumentsA[pDocID][kp_Shaders][tShader] into tShaderA      put tShaderA[kp_Shader_Type] into tShaderType      switch tShaderType         case "2"         case "3"            local tStartColor, tEndColor, tCoords            put tShaderA[kp_Shader_StartColor] into tStartColor            put tShaderA[kp_Shader_EndColor] into tEndColor            put tShaderA[kp_Shader_Coords] into tCoords            p_qrtPDF_NewObject pDocID            p_qrtPDF_ATB pDocID, "<<"            p_qrtPDF_ATB pDocID, "/FunctionType 2"            p_qrtPDF_ATB pDocID, "/Domain [0.0 1.0]"            p_qrtPDF_ATB pDocID, "/C0 [" & p_qrtPDF_FormatColor(tStartColor) & "]"            p_qrtPDF_ATB pDocID, "/C1 [" & p_qrtPDF_FormatColor(tEndColor) & "]"            p_qrtPDF_ATB pDocID, "/N 1"            p_qrtPDF_ATB pDocID, ">>"            p_qrtPDF_ATB pDocID, "endobj"            local tShaderFunctionPtr            put sDocumentsA[pDocID][kp_CurrentObject] into tShaderFunctionPtr            p_qrtPDF_NewObject pDocID            p_qrtPDF_ATB pDocID, "<<"            p_qrtPDF_ATB pDocID, "/ShadingType" && tShaderType            p_qrtPDF_ATB pDocID, "/ColorSpace /DeviceRGB"            if tShaderType = "2" then               p_qrtPDF_ATB pDocID, "/Coords [" & p_qrtPDF_FormatCoords("%.3f %.3f %.3f %.3f", tCoords) & "]"            else               p_qrtPDF_ATB pDocID, "/Coords [" & p_qrtPDF_FormatCoords("%.3f %.3f 0 %.3f %.3f %.3f", tCoords) & "]"            end if            p_qrtPDF_ATB pDocID, "/Function" && tShaderFunctionPtr && "0 R"            p_qrtPDF_ATB pDocID, "/Extend [true true] "            p_qrtPDF_ATB pDocID, ">>"            p_qrtPDF_ATB pDocID, "endobj"            put sDocumentsA[pDocID][kp_CurrentObject] into sDocumentsA[pDocID][kp_Shaders][tShader][kp_Shader_Object]            break         default            ## shouldn't happen            break      end switch   end repeatend p_qrtPDF_PutShaders/* private */ command p_qrtPDF_PutExtGStates pDocID   local tExtGStates, tStateParamsA, tStateParam   put sDocumentsA[pDocID][kp_ExtGStateCount] into tExtGStates   repeat with tExtGState = 1 to tExtGStates      put sDocumentsA[pDocID][kp_ExtGStates][tExtGState][kp_ExtG_StateParams] into tStateParamsA      split tStateParamsA using return and colon      p_qrtPDF_NewObject pDocID      put sDocumentsA[pDocID][kp_CurrentObject] into sDocumentsA[pDocID][kp_ExtGStates][tExtGState][kp_ExtG_Object]      p_qrtPDF_ATB pDocID, "<</Type /ExtGState"      repeat for each key tStateParam in tStateParamsA         p_qrtPDF_ATB pDocID, "/" & tStateParam && tStateParamsA[tStateParam]      end repeat      p_qrtPDF_ATB pDocID, ">>"      p_qrtPDF_ATB pDocID, "endobj"   end repeatend p_qrtPDF_PutExtGStates/* private */ command p_qrtPDF_PutFonts pDocID   local tFontList, tCurrentObject, tFontName   put sDocumentsA[pDocID][kp_FontList] into tFontList   repeat for each line tFontID in tFontList      put sDocumentsA[pDocID][kp_CurrentObject] into tCurrentObject      put tCurrentObject + 1 into sDocumentsA[pDocID][kp_Fonts][tFontID][kp_Font_Object]      put kCoreFontsA[tFontID][kp_Font_Name] into tFontName      p_qrtPDF_NewObject pDocID      p_qrtPDF_ATB pDocID, "<</Type /Font"      p_qrtPDF_ATB pDocID, "/BaseFont /" & tFontName      p_qrtPDF_ATB pDocID, "/Subtype /Type1"      if tFontName is not among the items of "Symbol,ZapfDingbats" then          p_qrtPDF_ATB pDocID, "/Encoding /WinAnsiEncoding"      end if      p_qrtPDF_ATB pDocID, ">>"      p_qrtPDF_ATB pDocID, "endobj"   end repeatend p_qrtPDF_PutFonts/* private */ command p_qrtPDF_PutImages pDocID   local tNumberOfImages   put the number of lines in sDocumentsA[pDocID][kp_ImageList] into tNumberOfImages   repeat with tImageID = 1 to tNumberOfImages      p_qrtPDF_PutImage pDocId, sDocumentsA[pDocID][kp_Images][tImageID]      put the result into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_Object]   end repeatend p_qrtPDF_PutImages/* private */ command p_qrtPDF_PutImage pDocId, pImageDA   local tImageObject, tPaletteObject   local tPaletteLength, tPaletteData, tPaletteFilter   local tMask, tMaskPart, tDataLength   p_qrtPDF_NewObject pDocID   put sDocumentsA[pDocID][kp_CurrentObject] into tImageObject   p_qrtPDF_ATB pDocID, "<</Type /XObject"   p_qrtPDF_ATB pDocID, "/Subtype /Image"   p_qrtPDF_ATB pDocID, "/Width" && pImageDA[kp_IMG_Width]   p_qrtPDF_ATB pDocID, "/Height" && pImageDA[kp_IMG_Height]   if pImageDA[kp_IMG_SMaskData] is empty then      put tImageObject + 1 into tPaletteObject   else      put tImageObject + 2 into tPaletteObject   end if   if pImageDA[kp_IMG_ColorSpace] is "Indexed" then      put the number of bytes in pImageDA[kp_IMG_Palette] into tPaletteLength      p_qrtPDF_ATB pDocID, "/ColorSpace [/Indexed /DeviceRGB" && (tPaletteLength / 3 - 1) && tPaletteObject && "0 R]"   else      p_qrtPDF_ATB pDocID, "/ColorSpace /" & pImageDA[kp_IMG_ColorSpace]      if pImageDA[kp_IMG_ColorSpace] = "DeviceCMYK" then         p_qrtPDF_ATB pDocID, "/Decode [1 0 1 0 1 0 1 0]"      end if   end if   p_qrtPDF_ATB pDocID, "/BitsPerComponent" && pImageDA[kp_IMG_BitsPerComponent]   if pImageDA[kp_IMG_Filter] is not empty then      p_qrtPDF_ATB pDocID, "/Filter /" & pImageDA[kp_IMG_Filter]   end if   if pImageDA[kp_IMG_Params] is not empty then      p_qrtPDF_ATB pDocID, "/DecodeParms <<" & pImageDA[kp_IMG_Params] & ">>"   end if   if pImageDA[kp_IMG_MaskData] is not empty then      put empty into tMask      repeat for each item tMaskPart in pImageDA[kp_IMG_MaskData]         put tMaskPart & space & tMaskPart & space after tMask      end repeat      p_qrtPDF_ATB pDocID, "/Mask [" & tMask & "]"   end if   if pImageDA[kp_IMG_SMaskData] is not empty then      p_qrtPDF_ATB pDocID, "/SMask " & sDocumentsA[pDocID][kp_CurrentObject] + 1 & " 0 R"   end if   if sSettingsA[kp_ImageInterpolation] then      p_qrtPDF_ATB pDocID, "/Interpolate true"   end if   if sSettingsA[kp_ImageIntentPerceptual] then      p_qrtPDF_ATB pDocID, "/Intent /Perceptual"   end if   put the number of bytes in pImageDA[kp_IMG_Data] into tDataLength   p_qrtPDF_ATB pDocID, "/Length" && tDataLength & ">>"   p_qrtPDF_ATBS pDocID, pImageDA[kp_IMG_Data]   p_qrtPDF_ATB pDocID, "endobj"   -- append the soft mask data   if pImageDA[kp_IMG_SMaskData] is not empty then      local tSMaskImageDA      put pImageDA[kp_IMG_Width] into tSMaskImageDA[kp_IMG_Width]      put pImageDA[kp_IMG_Height] into tSMaskImageDA[kp_IMG_Height]      put pImageDA[kp_IMG_Filter] into tSMaskImageDA[kp_IMG_Filter]      put pImageDA[kp_IMG_SMaskData] into tSMaskImageDA[kp_IMG_Data]      put "DeviceGray" into tSMaskImageDA[kp_IMG_ColorSpace]      put 8 into tSMaskImageDA[kp_IMG_BitsPerComponent]      put "/Predictor 15 /Colors 1 /BitsPerComponent 8 /Columns" && pImageDA[kp_IMG_Width] into tSMaskImageDA[kp_IMG_Params]      p_qrtPDF_PutImage pDocId, tSMaskImageDA   end if   -- append the palette data   if pImageDA[kp_IMG_ColorSpace] = "Indexed" then      p_qrtPDF_NewObject pDocID      put pImageDA[kp_IMG_Palette] into tPaletteData      put empty into tPaletteFilter      if sDocumentsA[pDocID][kp_CompressionFlag] then         put p_qrtPDF_Deflate(tPaletteData) into tPaletteData         put "/Filter /FlateDecode" & space into tPaletteFilter      end if      put the number of bytes in tPaletteData into tPaletteLength      p_qrtPDF_ATB pDocID, "<<" & tPaletteFilter & "/Length" && tPaletteLength & ">>"      p_qrtPDF_ATBS pDocID, tPaletteData      p_qrtPDF_ATB pDocID, "endobj"   end if   return tImageObjectend p_qrtPDF_PutImage/* private */ command p_qrtPDF_PutFontDict pDocID   local tFontList, tFontID, tFontRef, tFontObject   put sDocumentsA[pDocID][kp_FontList] into tFontList   put 0 into tFontRef   p_qrtPDF_ATB pDocID, "/Font <<"   repeat for each line tFontID in tFontList      add 1 to tFontRef      put sDocumentsA[pDocID][kp_Fonts][tFontID][kp_FONT_Object] into tFontObject      p_qrtPDF_ATB pDocID, "/F" & tFontRef && tFontObject && "0 R"   end repeat   p_qrtPDF_ATB pDocID, ">>"end p_qrtPDF_PutFontDict/* private */ command p_qrtPDF_PutXObjectDict pDocID   local tNumberOfImages, tImageID   put the number of lines in sDocumentsA[pDocID][kp_ImageList] into tNumberOfImages   p_qrtPDF_ATB pDocID, "/XObject <<"   repeat with tImageID = 1 to tNumberOfImages      p_qrtPDF_ATB pDocID, "/I" & tImageID && sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_Object] && "0 R"   end repeat   p_qrtPDF_ATB pDocID, ">>"end p_qrtPDF_PutXObjectDict/* private */ command p_qrtPDF_PutExtGStateDict pDocID   local tExtGStateCount, tExtGState   put sDocumentsA[pDocID][kp_ExtGStateCount] into tExtGStateCount   p_qrtPDF_ATB pDocID, "/ExtGState <<"   repeat with tExtGState = 1 to tExtGStateCount      p_qrtPDF_ATB pDocID, "/GS" & tExtGState && sDocumentsA[pDocID][kp_ExtGStates][tExtGState][kp_EXTG_Object] && "0 R"   end repeat   p_qrtPDF_ATB pDocID, ">>"end p_qrtPDF_PutExtGStateDict/* private */ command p_qrtPDF_PutShadingDict pDocID   local tShaderCount, tShader   put sDocumentsA[pDocID][kp_ShaderCount] into tShaderCount   p_qrtPDF_ATB pDocID, "/Shading <<"   repeat with tShader = 1 to tShaderCount      p_qrtPDF_ATB pDocID, "/Sh" & tShader && sDocumentsA[pDocID][kp_Shaders][tShader][kp_Shader_Object] && "0 R"   end repeat   p_qrtPDF_ATB pDocID, ">>"end p_qrtPDF_PutShadingDict/* private */ command p_qrtPDF_PutResourceDict pDocID   -- first save the resource dictionary offset   put the number of bytes in sDocumentsA[pDocID][kp_Buffer] into sDocumentsA[pDocID][kp_Offsets][2]   p_qrtPDF_ATB pDocID, "2 0 obj"   p_qrtPDF_ATB pDocID, "<<"   p_qrtPDF_ATB pDocID, "/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]"   -- now put the different parts   p_qrtPDF_PutFontDict pDocID   p_qrtPDF_PutXObjectDict pDocID   p_qrtPDF_PutExtGStateDict pDocID   p_qrtPDF_PutShadingDict pDocID   -- close the resource dictionary   p_qrtPDF_ATB pDocID, ">>"   p_qrtPDF_ATB pDocID, "endobj"end p_qrtPDF_PutResourceDict/* private */ command p_qrtPDF_PutResources pDocID   -- actual resources   p_qrtPDF_PutShaders pDocID   p_qrtPDF_PutExtGStates pDocID   p_qrtPDF_PutFonts pDocID   p_qrtPDF_PutImages pDocID   -- resource dictionary   p_qrtPDF_PutResourceDict pDocIDend p_qrtPDF_PutResources/* private */ command p_qrtPDF_PutBookmarks pDocID   local tBMCount   put sDocumentsA[pDocID][kp_BookmarkList] into tBMCount   if tBMCount is empty then exit p_qrtPDF_PutBookmarks   ## prepare to outline   local tCurrentLevel, tBMLevel, tLRU   local tBookmarkPagePairs, tBookmarkPagePair   local tBookmarkID, tActualID, tParentID, tPrevID   put 0 into tCurrentLevel   put empty into tBookmarkPagePairs   repeat with tBookmarkID = 0 to tBMCount      put tBookmarkID & comma & sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_PageNumber] & return after tBookmarkPagePairs   end repeat   delete char -1 of tBookmarkPagePairs   sort lines of tBookmarkPagePairs numeric by item 2 of each   put 0 into tActualID   repeat for each line tBookmarkPagePair in tBookmarkPagePairs      put item 1 of tBookmarkPagePair into tBookmarkID      put tActualID into sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_Actual]      add 1 to tActualID      put sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_Level] into tBMLevel      if tBMLevel > 0 then         put tLRU[tBMLevel - 1] into tParentID         ## set parent and last pointers         put tParentID into sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_Parent]         put tBookmarkID into sDocumentsA[pDocID][kp_Bookmarks][tParentID][kp_BM_Last]         if tBMLevel > tCurrentLevel then            ## level increasing: set first pointer            put tBookmarkID into sDocumentsA[pDocID][kp_Bookmarks][tParentID][kp_BM_First]         end if      else         put tBMCount + 1 into sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_Parent]      end if      if tBMLevel <= tCurrentLevel and tBookmarkID > 0 then         ## set prev and next pointers         put tLRU[tBMlevel] into tPrevID         put tBookmarkID into sDocumentsA[pDocID][kp_Bookmarks][tPrevID][kp_BM_Next]         put tPrevID into sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_Prev]      end if      put tBookmarkID into tLRU[tBMLevel]      put tBMLevel into tCurrentLevel   end repeat   ## outline items   local tFORef, tFactor   put sDocumentsA[pDocID][kp_CurrentObject] + 1 into tFORef   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   repeat for each line tBookmarkPagePair in tBookmarkPagePairs      local tParentBmID, tPrevBmId, tNextBmID, tFirstBmId, tLastBmID      put item 1 of tBookmarkPagePair into tBookmarkId      p_qrtPDF_NewObject pDocID      p_qrtPDF_ATB pDocID, "<</Title" && p_qrtPDF_TextString(pDocID, sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_Title])      put sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_Parent] into tParentBmID      put sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_Prev] into tPrevBmID      put sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_Next] into tNextBmID      put sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_First] into tFirstBmID      put sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_Last] into tLastBmID      if tParentBmID > tBMCount then         put tParentBmID into sDocumentsA[pDocID][kp_Bookmarks][tParentBmID][kp_BM_Actual]      end if      p_qrtPDF_ATB pDocID, "/Parent" && (tFORef + sDocumentsA[pDocID][kp_Bookmarks][tParentBmID][kp_BM_Actual]) && "0 R"      if tPrevBmID is not empty then         p_qrtPDF_ATB pDocID, "/Prev" && (tFORef + sDocumentsA[pDocID][kp_Bookmarks][tPrevBmID][kp_BM_Actual]) && "0 R"      end if      if tNextBmID is not empty then         p_qrtPDF_ATB pDocID, "/Next" && (tFORef + sDocumentsA[pDocID][kp_Bookmarks][tNextBmID][kp_BM_Actual]) && "0 R"      end if      if tFirstBmID is not empty then         p_qrtPDF_ATB pDocID, "/First" && (tFORef + sDocumentsA[pDocID][kp_Bookmarks][tFirstBmID][kp_BM_Actual]) && "0 R"      end if      if tLastBmID is not empty then         p_qrtPDF_ATB pDocID, "/Last" && (tFORef + sDocumentsA[pDocID][kp_Bookmarks][tLastBmID][kp_BM_Actual]) && "0 R"      end if      local tPageNumber, tYComplement      put sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_PageNumber] into tPageNumber      put sDocumentsA[pDocID][kp_Bookmarks][tBookmarkID][kp_BM_YComplement] into tYComplement      p_qrtPDF_ATB pDocID, format("/Dest [%d 0 R /XYZ 0 %.2f null]", 1 + 2 * tPageNumber, tYComplement * tFactor)      p_qrtPDF_ATB pDocID, "/Count 0>>"      p_qrtPDF_ATB pDocID, "endobj"   end repeat   ## outline root   p_qrtPDF_NewObject pDocID   put sDocumentsA[pDocID][kp_CurrentObject] into sDocumentsA[pDocID][kp_OutlineRoot]   p_qrtPDF_ATB pDocID, "<</Type /Outlines /First" && tFORef && "0 R"   p_qrtPDF_ATB pDocID, "/Last" && (tFORef + tLRU[0]) && "0 R>>"   p_qrtPDF_ATB pDocID, "endobj"end p_qrtPDF_PutBookmarks/* private */ command p_qrtPDF_PutMetaData pDocID   p_qrtPDF_NewObject pDocID   p_qrtPDF_ATB pDocID, "<<"   p_qrtPDF_ATB pDocID, "/Producer" && p_qrtPDF_TextString(pDocID, (kPdfProducer && kLibVersion))   if sDocumentsA[pDocID][kp_Title] is not empty then       p_qrtPDF_ATB pDocID, "/Title" && p_qrtPDF_TextString(pDocID, sDocumentsA[pDocID][kp_Title])   end if   if sDocumentsA[pDocID][kp_Subject] is not empty then       p_qrtPDF_ATB pDocID, "/Subject" && p_qrtPDF_TextString(pDocID, sDocumentsA[pDocID][kp_Subject])   end if   if sDocumentsA[pDocID][kp_Author] is not empty then      p_qrtPDF_ATB pDocID, "/Author" && p_qrtPDF_TextString(pDocID, sDocumentsA[pDocID][kp_Author])   end if   if sDocumentsA[pDocID][kp_Keywords] is not empty then      p_qrtPDF_ATB pDocID, "/Keywords" && p_qrtPDF_TextString(pDocID, sDocumentsA[pDocID][kp_Keywords])   end if   if sDocumentsA[pDocID][kp_Creator] is not empty then      p_qrtPDF_ATB pDocID, "/Creator" && p_qrtPDF_TextString(pDocID, sDocumentsA[pDocID][kp_Creator])   end if   p_qrtPDF_ATB pDocID, "/CreationDate" && p_qrtPDF_DateTimeString(pDocID)   -- end of metadata   p_qrtPDF_ATB pDocID, ">>"   p_qrtPDF_ATB pDocID, "endobj"end p_qrtPDF_PutMetaData/* private */ command p_qrtPDF_PutCatalog pDocID   p_qrtPDF_NewObject pDocID   p_qrtPDF_ATB pDocID, "<<"   p_qrtPDF_ATB pDocID, "/Type /Catalog"   p_qrtPDF_ATB pDocID, "/Pages 1 0 R"   -- display mode > zoom   switch sDocumentsA[pDocID][kp_ZoomMode]      case "fullpage"         p_qrtPDF_ATB pDocID, "/OpenAction [3 0 R /Fit]"         break      case "fullwidth"         p_qrtPDF_ATB pDocID, "/OpenAction [3 0 R /FitH null]"         break      case "real"         p_qrtPDF_ATB pDocID, "/OpenAction [3 0 R /XYZ null null 1]"         break      default         p_qrtPDF_ATB pDocID, "/OpenAction [3 0 R /XYZ null null" && sDocumentsA[pDocID][kp_ZoomMode] / 100 &"]"         break   end switch   -- display mode > layout   switch sDocumentsA[pDocID][kp_LayoutMode]      case "single"         p_qrtPDF_ATB pDocID, "/PageLayout /SinglePage"         break      case "two"         p_qrtPDF_ATB pDocID, "/PageLayout /TwoColumnLeft"         break      case "continuous"         p_qrtPDF_ATB pDocID, "/PageLayout /OneColumn"         break   end switch   -- bookmarks > outline   if sDocumentsA[pDocID][kp_BookmarkList] is not empty then      p_qrtPDF_ATB pDocID, "/Outlines" && sDocumentsA[pDocID][kp_OutlineRoot] && "0 R"      p_qrtPDF_ATB pDocID, "/PageMode /UseOutlines"   end if   -- end of catalog   p_qrtPDF_ATB pDocID, ">>"   p_qrtPDF_ATB pDocID, "endobj"end p_qrtPDF_PutCatalog/* private */ command p_qrtPDF_PutXRef pDocID   -- save current offset before building the cross-reference table   put the number of bytes in sDocumentsA[pDocID][kp_Buffer] into sDocumentsA[pDocID][kp_XRefOffset]   -- now go ahead and build the XRef table   local tCurrentObject, tOffset, tIndex   put sDocumentsA[pDocID][kp_CurrentObject] into tCurrentObject   p_qrtPDF_ATB pDocID, "xref"   p_qrtPDF_ATB pDocID, "0" && (tCurrentObject + 1)   p_qrtPDF_ATB pDocID, "0000000000 65535 f "   repeat with tIndex = 1 to tCurrentObject      put sDocumentsA[pDocID][kp_Offsets][tIndex] into tOffset      p_qrtPDF_ATB pDocID, format("%010d 00000 n ", tOffset)   end repeatend p_qrtPDF_PutXRef/* private */ command p_qrtPDF_PutTrailer pDocID   local tCurrentObject   put sDocumentsA[pDocID][kp_CurrentObject] into tCurrentObject   p_qrtPDF_ATB pDocID, "trailer"   p_qrtPDF_ATB pDocID, "<<"   p_qrtPDF_ATB pDocID, "/Size" && (tCurrentObject + 1)   p_qrtPDF_ATB pDocID, "/Root" && tCurrentObject && "0 R"   p_qrtPDF_ATB pDocID, "/Info" && (tCurrentObject - 1) && "0 R"   p_qrtPDF_ATB pDocID, ">>"   p_qrtPDF_ATB pDocID, "startxref"   p_qrtPDF_ATB pDocID, sDocumentsA[pDocID][kp_XRefOffset]   p_qrtPDF_ATB pDocID, "%%EOF"end p_qrtPDF_PutTrailer/* private */ command p_qrtPDF_EndDoc pDocID   put kp_State_Closing into sDocumentsA[pDocID][kp_CurrentState]   -- Build the final document   p_qrtPDF_PutHeader pDocID   p_qrtPDF_PutPages pDocID   p_qrtPDF_PutResources pDocID   p_qrtPDF_PutBookmarks pDocID   p_qrtPDF_PutMetaData pDocID   p_qrtPDF_PutCatalog pDocID   p_qrtPDF_PutXRef pDocID   p_qrtPDF_PutTrailer pDocID   -- All done   put kp_State_Closed into sDocumentsA[pDocID][kp_CurrentState]end p_qrtPDF_EndDoc/* private */ command p_qrtPDF_BeginPage pDocID, pOrientation   local tPage   add 1 to sDocumentsA[pDocID][kp_CurrentPage]   add 1 to sDocumentsA[pDocID][kp_NumberOfPages]   put sDocumentsA[pDocID][kp_CurrentPage] into tPage   put empty into sDocumentsA[pDocID][kp_PageBuffers][tPage]   put kp_State_Drawing into sDocumentsA[pDocID][kp_CurrentState]   put sDocumentsA[pDocID][kp_LeftMargin] into sDocumentsA[pDocID][kp_CurrentX]   put sDocumentsA[pDocID][kp_TopMargin] into sDocumentsA[pDocID][kp_CurrentY]   put empty into sDocumentsA[pDocID][kp_FontFamily]   -- Page orientation   if pOrientation is not sDocumentsA[pDocID][kp_DefaultOrientation] then      put true into line tPage of sDocumentsA[pDocID][kp_OrientationChanges]   end if   if pOrientation is not sDocumentsA[pDocID][kp_CurrentOrientation] then      -- change orientation      if pOrientation = "p" then         put sDocumentsA[pDocID][kp_PageWidthPt] into sDocumentsA[pDocID][kp_CurrentWidthtPt]         put sDocumentsA[pDocID][kp_PageHeightPt] into sDocumentsA[pDocID][kp_CurrentHeightPt]         put sDocumentsA[pDocID][kp_PageWidth] into sDocumentsA[pDocID][kp_CurrentWidth]         put sDocumentsA[pDocID][kp_PageHeight] into sDocumentsA[pDocID][kp_CurrentHeight]      else         put sDocumentsA[pDocID][kp_PageHeightPt] into sDocumentsA[pDocID][kp_CurrentWidthtPt]         put sDocumentsA[pDocID][kp_PageWidthPt] into sDocumentsA[pDocID][kp_CurrentHeightPt]         put sDocumentsA[pDocID][kp_PageHeight] into sDocumentsA[pDocID][kp_CurrentWidth]         put sDocumentsA[pDocID][kp_PageWidth] into sDocumentsA[pDocID][kp_CurrentHeight]      end if      put (sDocumentsA[pDocID][kp_CurrentHeight] - sDocumentsA[pDocID][kp_PageBreakMargin]) into sDocumentsA[pDocID][kp_PageBreakTrigger]      put pOrientation into sDocumentsA[pDocID][kp_CurrentOrientation]   end ifend p_qrtPDF_BeginPage/* private */ command p_qrtPDF_EndPage pDocID   put kp_State_Waiting into sDocumentsA[pDocID][kp_CurrentState]end p_qrtPDF_EndPage/* private */ function p_qrtPDF_DoUnderline pDocID, pX, pY, pText   local tCurrentFont, tHeight, tFontSizePt, tFontSize   local tScaleFactor, tWordSpacing, tFontUp, tFontUt   local tUnderLineWidth   put sDocumentsA[pDocID][kp_CurrentFont] into tCurrentFont   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   put sDocumentsA[pDocID][kp_FontSizePt] into tFontSizePt   put sDocumentsA[pDocID][kp_FontSize] into tFontSize   put sDocumentsA[pDocID][kp_ScaleFactor] into tScaleFactor   put sDocumentsA[pDocID][kp_WordSpacing] into tWordSpacing   put kCoreFontsA[tCurrentFont][kp_Font_Up] into tFontUp   put kCoreFontsA[tCurrentFont][kp_Font_Ut] into tFontUt   put p_qrtPDF_GetStringWidth(pDocID, pText) + tWordSpacing * p_qrtPDF_OccurenceCount(pText, " ") into tUnderlineWidth   return format("%.2f %.2f %.2f %.2f re f", pX * tScaleFactor, (tHeight - (pY - tFontUp / 1000 * tFontSize)) * tScaleFactor, tUnderlineWidth * tScaleFactor, -tFontUt / 1000 * tFontSizePt)end p_qrtPDF_DoUnderline/* private */ function p_qrtPDF_OccurenceCount pText, pToken   local tStart, tOffset, tCount   put 0 into tStart   put 0 into tCount   put offset(pToken, pText, tStart) into tOffset   repeat until tOffset = 0      add 1 to tCount      add tOffset to tStart      put offset(pToken, pText, tStart) into tOffset   end repeat   return tCountend p_qrtPDF_OccurenceCount--> core handlers for buffering and object creation/* private */ command p_qrtPDF_ATB pDocID, pData   -- append data to the appropriate buffer   local tCurrentState, tPage   put sDocumentsA[pDocID][kp_CurrentState] into tCurrentState   if tCurrentState = kp_State_Drawing then      put sDocumentsA[pDocID][kp_CurrentPage] into tPage      put pData & lineFeed after sDocumentsA[pDocID][kp_PageBuffers][tPage]   else if tCurrentState = kp_State_Closing then      put pData & lineFeed after sDocumentsA[pDocID][kp_Buffer]   else      throw "qrtPDFerr: illegal state for appending to buffer"   end ifend p_qrtPDF_ATB/* private */ command p_qrtPDF_ATBS pDocID, pData   -- append data as stream to the appropriate buffer   p_qrtPDF_ATB pDocID, "stream"   p_qrtPDF_ATB pDocID, pData   p_qrtPDF_ATB pDocID, "endstream"end p_qrtPDF_ATBS/* private */ command p_qrtPDF_NewObject pDocID   local tCurrentObject, tCurrentOffset   add 1 to sDocumentsA[pDocID][kp_CurrentObject]   put sDocumentsA[pDocID][kp_CurrentObject] into tCurrentObject   put the number of bytes in sDocumentsA[pDocID][kp_Buffer] into tCurrentOffset   put tCurrentOffset into sDocumentsA[pDocID][kp_Offsets][ tCurrentObject]   p_qrtPDF_ATB pDocID, (tCurrentObject && "0 obj")   return tCurrentObjectend p_qrtPDF_NewObject--> core handlers for page break tracking/* private */ command p_qrtPDF_SetPageBreakMargin pDocID, pMargin   put pMargin into sDocumentsA[pDocID][kp_PageBreakMargin]   put sDocumentsA[pDocID][kp_CurrentHeight] - sDocumentsA[pDocID][kp_PageBreakMargin] into sDocumentsA[pDocID][kp_PageBreakTrigger]end p_qrtPDF_SetPageBreakMargin/* private */ command p_qrtPDF_CheckPageBreak pDocID, pHeight   local tCurrentY, tPBTrigger   put sDocumentsA[pDocID][kp_CurrentY] into tCurrentY   put sDocumentsA[pDocID][kp_PageBreakTrigger] into tPBTrigger   if tCurrentY + pHeight > tPBTrigger then      qrtPDF_CreatePage pDocID, sDocumentsA[pDocID][kp_CurrentOrientation]   end ifend p_qrtPDF_CheckPageBreak-- core text functions/* private */ function p_qrtPDF_EscapeText pDocID, pString   if sSettingsA["MacToISO"] then      return p_qrtPDF_Escape(macToISO(pString))   else      return p_qrtPDF_Escape(pString)   end ifend p_qrtPDF_EscapeText/* private */ function p_qrtPDF_Escape pString   replace "\" with "\\" in pString   replace "(" with "\(" in pString   replace ")" with "\)" in pString   return pStringend p_qrtPDF_Escape/* private */ function p_qrtPDF_TextString pDocID, pString   return "(" & p_qrtPDF_Escape(pString) & ")"end p_qrtPDF_TextString/* private */ function p_qrtPDF_NumberOfLines pDocID, pWidth, pText   -- calculates the number of lines needed to stuff the text in a text area of a certain width   local tMaxWidth, tLength, tSepIndex, tEndIndex, tStartIndex, tLineWidth, tNumberOfLines   put (pWidth - 2 * sDocumentsA[pDocID][kp_BoxMargin]) into tMaxWidth   put length(pText) into tLength   put -1 into tSepIndex   put 1 into tEndIndex   put 1 into tStartIndex   put 0 into tLineWidth   put 1 into tNumberOfLines   local tCurrentChar   repeat while tEndIndex < tLength      put char tEndIndex of pText into tCurrentChar      if tCurrentChar is return then         -- explicit line break         add 1 to tEndIndex         put -1 into tSepIndex         put tEndIndex into tStartIndex         put 0 into tLineWidth         add 1 to tNumberOfLines         next repeat      end if      if tCurrentChar is space then         put tEndIndex into tSepIndex      end if      add p_qrtPDF_GetStringWidth(pDocID, tCurrentChar) to tLineWidth      if tLineWidth > tMaxWidth then         -- automatic line break         if tSepIndex = -1 then            if tEndIndex = tStartIndex then               add 1 to tEndIndex             end if         else            put tSepIndex + 1 into tEndIndex         end if         put -1 into tSepIndex         put tEndIndex into tStartIndex         put 0 into tLineWidth         add 1 to tNumberOfLines      else         add 1 to tEndIndex      end if   end repeat   return tNumberOfLinesend p_qrtPDF_NumberOfLines/* private */ function p_qrtPDF_DateTimeString pDocID, pEnglishDate, pLongTime   local tDateTime, tDateTime_PDF   if pEnglishDate is empty then      put the english date into pEnglishDate   end if   if pLongTime is empty then      put the long time into pLongTime   end if   put pEnglishDate && pLongTime into tDateTime   convert tDateTime from english date and long time to dateItems   put format("%04u%02u%02u%02u%02u%02u", \          item 1 of tDateTime, \          item 2 of tDateTime, \          item 3 of tDateTime, \          item 4 of tDateTime, \          item 5 of tDateTime, \          item 6 of tDateTime) \          into tDateTime_PDF   return p_qrtPDF_TextString(pDocID, "D:" & tDateTime_PDF)end p_qrtPDF_DateTimeString-- core drawing handlers/* private */ command p_qrtPDF_SetPlotPoint pDocID, pX1, pY1   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   p_qrtPDF_ATB pDocID, format("%.2f %.2f m", pX1 * tFactor, (tHeight - pY1) * tFactor)end p_qrtPDF_SetPlotPoint/* private */ command p_qrtPDF_PlotLine pDocID, pX2, pY2   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   p_qrtPDF_ATB pDocID, format("%.2f %.2f l", pX2 * tFactor, (tHeight - pY2) * tFactor)end p_qrtPDF_PlotLine/* private */ command p_qrtPDF_PlotCurve pDocID, pX2, pY2, pX3, pY3, pX4, pY4   local tFactor, tHeight   put sDocumentsA[pDocID][kp_ScaleFactor] into tFactor   put sDocumentsA[pDocID][kp_CurrentHeight] into tHeight   p_qrtPDF_ATB pDocID, format("%.2f %.2f %.2f %.2f %.2f %.2f c", pX2 * tFactor, (tHeight - pY2) * tFactor, pX3 * tFactor, (tHeight - pY3) * tFactor, pX4 * tFactor, (tHeight - pY4) * tFactor)end p_qrtPDF_PlotCurve-- core image functions/* private */ function p_qrtPDF_LoadImage pDocID, pFile, pType   local tImageID   put 0 into tImageID   switch pType      case "PNG"         put p_qrtPDF_LoadPNG(pDocID, pFile) into tImageID         break      case "JPG"      case "JPEG"         put p_qrtPDF_LoadJPG(pDocID, pFile) into tImageID         break   end switch   return tImageIDend p_qrtPDF_LoadImage/* private */ function p_qrtPDF_LoadPNG pDocID, pFile   local tResult, tInt4   open file pFile for binary read   put the result into tResult   if tResult is not empty then throw "qrtPDFErr:" && tResult   -- check the header   local tPNGheader   put numToByte(137) & "PNG" & numToByte(13) & numToByte(10) & numToByte(26) & numToByte(10) into tPNGheader   read from file pFile for 8 bytes   if it is not tPNGHeader then      close file pFile      throw "qrtPDFErr: invalid PNG image file [" & pFile & "]"   end if   read from file pFile for 4 bytes   read from file pFile for 4 bytes   if it is not "IHDR" then      close file pFile      throw "qrtPDFErr: invalid PNG image file [" & pFile & "]"   end if   -- read width and height   local tWidth, tHeight   read from file pFile for 4 bytes   put it into tInt4   get binaryDecode("N", tInt4, tWidth)   read from file pFile for 4 bytes   put it into tInt4   get binaryDecode("N", tInt4, tHeight)   -- read bits per component   local tBitsPerComponent   read from file pFile for 1 byte   put byteToNum(it) into tBitsPerComponent   if tBitsPerComponent > 8 then      close file pFile      throw "qrtPDFErr: 16-bit depth not supported [" & pFile & "]"   end if   -- read color space   local tColorMethod, tColorSpace   read from file pFile for 1 byte   put byteToNum(it) into tColorMethod   if tColorMethod = 0 or tColorMethod = 4 then      put "DeviceGray" into tColorSpace   else if tColorMethod = 2 or tColorMethod = 6 then      put "DeviceRGB" into tColorSpace   else if tColorMethod = 3 then      put "Indexed" into tColorSpace   else      close file pFile      throw "qrtPDFErr: Unknown color option [" & pFile & "]"   end if   -- check bits per component against alpha   if (tColorMethod = 4 or tColorMethod = 6) and tBitsPercomponent <> 8 then      close file pFile      throw "qrtPDFErr: Alpha only supported for 8-bit depth [" & pFile & "]"   end if   -- read compression flag   local tCompression   read from file pFile for 1 byte   put byteToNum(it) into tCompression   if tCompression is not 0 then      close file pFile      throw "qrtPDFErr: Unknown compression method [" & pFile & "]"   end if   -- read filter   local tFilter   read from file pFile for 1 byte   put byteToNum(it) into tFilter   if tFilter is not 0 then      close file pFile      throw "qrtPDFErr: Unknown filter method [" & pFile & "]"   end if   -- read interlacing   local tInterlacing   read from file pFile for 1 byte   put byteToNum(it) into tInterlacing   if tInterlacing is not 0 then      close file pFile      throw "qrtPDFErr: Interlacing not supported [" & pFile & "]"   end if   -- read params   local tParams   read from file pFile for 4 bytes   put "/Predictor 15 /Colors " into tParams   if tColorSpace = "DeviceRGB" then      put "3" after tParams   else       put "1" after tParams   end if   put " /BitsPerComponent" && tBitsPerComponent after tParams   put " /Columns" && tWidth after tParams   -- scan chunks looking for palette, transparency and image data   local tPalette, tMaskData, tImageData, tSMaskData   local tIndex, tChunkType, tChunk   put 1 into tIndex   repeat while tIndex is not 0      read from file pFile for 4 bytes      put it into tInt4      get binaryDecode("N", tInt4, tIndex)      read from file pFile for 4 bytes      put it into tChunkType      switch tChunkType         case "PLTE"            -- read palette            read from file pFile for tIndex bytes            put it into tPalette            break         case "tRNS"            -- read transparency            read from file pFile for tIndex bytes            put it into tChunk            switch tColorMethod               case 0                  put byteToNum(byte 1 of tChunk) into tMaskData                  break               case 2                  put byteToNum(byte 1 of tChunk) & comma & \                        byteToNum(byte 3 of tChunk) & comma & \                        byteToNum(byte 5 of tChunk) into tMaskData                  break               default                  get offset(numToByte(0), tChunk)                  if it > 0 then put it into tMaskData            end switch            break         case "IDAT"            -- read image data block            read from file pFile for tIndex bytes            put it after tImageData            break         case "IEND"            -- break out of the loop            exit repeat            break         default            -- ignore chunk data            read from file pFile for tIndex bytes            break      end switch      read from file pFile for 4 bytes   end repeat   -- we've got everything we need   close file pFile   if tColorSpace = "Indexed" and tPalette is empty then      throw "qrtPDFErr: missing palette [" & pFile & "]"   end if   -- separate alpha channel if applicable   if tColorMethod = 4 or tColorMethod = 6 then      local tBytesPerPixel, tImageDataLength, tColorData, tAlphaData      local tLineLength, tLineIndex, tLineData, tPosition, tPixelOffset      if tColorMethod = 4 then         put 2 into tBytesPerPixel      else if tColormethod = 6 then         put 4 into tBytesPerPixel      end if      put tWidth * tBytesPerPixel + 1 into tLineLength      put tHeight * tLineLength into tImageDataLength      put p_qrtPDF_Inflate(tImageData, tImageDataLength) into tImageData      repeat with tLineIndex = 1 to tHeight         put 1 + tLineLength * (tLineIndex - 1) into tPosition         -- filter method needs to be appended to both color and alpha         put byte tPosition of tImageData after tColorData         put byte tPosition of tImageData after tAlphaData         -- now separate the color and alpha channels for this line         put byte tPosition + 1 to tPosition + tLineLength of tImageData into tLineData         repeat with tPixelOffset = 1 to tLineLength - tBytesPerPixel step tBytesPerPixel            put byte tPixelOffset to tPixelOffset + tBytesPerPixel - 2 of tLineData after tColorData            put byte tPixelOffset + tBytesPerPixel - 1 of tLineData after tAlphaData         end repeat      end repeat      put p_qrtPDF_Deflate(tColorData) into tImageData      put p_qrtPDF_Deflate(tAlphaData) into tSMaskData      -- alpha is only available since PDF 1.4      if sDocumentsA[pDocID][kp_PDFVersion] < "1.4" then         put "1.4" into sDocumentsA[pDocID][kp_PDFVersion]      end if   end if   -- update the images for this document   local tImageID   put p_qrtPDF_NextImageId(pDocId, pFile) into tImageId   -- update the images data array   put tWidth into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_Width]   put tHeight into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_Height]   put tColorSpace into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_ColorSpace]   put tBitsPerComponent into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_BitsPerComponent]   put "FlateDecode" into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_Filter]   put tParams into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_Params]   put tPalette into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_Palette]   put tImageData into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_Data]   put tMaskData into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_MaskData]   put tSMaskData into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_SMaskData]   return tImageIDend p_qrtPDF_LoadPNG/* private */ function p_qrtPDF_LoadJPG pDocID, pFile   local tFileData, tResult   put URL ("binfile:" & pFile) into tFileData   put the result into tResult   if tResult is not empty then throw "qrtPDFErr:" && tResult   local tBytePosition   put 0 into tBytePosition   -- find the header   local tJPGHeader   put numToByte(255) & numToByte(216) & numToByte(255) into tJPGheader   ## note that some JPEG files store their headers in wonky places   ## try not to use this algorithm if you're not sure it's a JPEG file   local tByte, tFoundFlag   put empty into tByte   put false into tFoundFlag   repeat until tFoundFlag      repeat until tByte = byte 1 of tJPGheader         add 1 to tBytePosition         get byte tBytePosition of tFileData         if it is empty then exit repeat         put it into tByte      end repeat      add 2 to tBytePosition      get byte (tBytePosition - 1) to tBytePosition of tFileData      if it is empty then exit repeat      put (it is byte 2 to 3 of tJPGheader) into tFoundFlag   end repeat   if tFoundFlag is false then      throw "qrtPDFErr: invalid JPG image file [" & pFile & "]"   end if   -- find the file data header   local tMarkerSize   put false into tFoundFlag   repeat until tFoundFlag      add 1 to tBytePosition      get byte tBytePosition of tFileData      if it is empty then exit repeat      put byteToNum(it) into tByte      repeat while tByte = 255         add 1 to tBytePosition         get byte tBytePosition of tFileData         if it is empty then             put empty into tByte            exit repeat         end if         put byteToNum(it) into tByte      end repeat      if tByte is empty then exit repeat      if tByte < 192 or tByte > 195 then         add 1 to tBytePosition         get byte tBytePosition of tFileData         if it is empty then exit repeat         put byteToNum(it) * 256 into tMarkerSize         add 1 to tBytePosition         get byte tBytePosition of tFileData         if it is empty then exit repeat         add byteToNum(it) to tMarkerSize         add (tMarkerSize - 1) to tBytePosition      else         put true into tFoundFlag      end if   end repeat   if tFoundFlag is false then      throw "qrtPDFErr: invalid JPG image file [" & pFile & "]"   end if   local tHeaderData   put byte (tBytePosition + 1) to (tBytePosition + 10) of tFileData into tHeaderData   put 0 into tBytePosition   ## read width, height and channels   local tBitsPerComponent, tHeight, tWidth   put byteToNum(byte tBytePosition + 3 of tHeaderData) into tBitsPerComponent   put byteToNum(byte tBytePosition + 4 of tHeaderData) * 256 into tHeight   add byteToNum(byte tBytePosition + 5 of tHeaderData) to tHeight   put byteToNum(byte tBytePosition + 6 of tHeaderData) * 256 into tWidth   add byteToNum(byte tBytePosition + 7 of tHeaderData) to tWidth   local tColorMethod, tColorSpace   put byteToNum(byte tBytePosition + 8 of tHeaderData) into tColorMethod   if tColorMethod = 3 then      put "DeviceRGB" into tColorSpace   else if tColorMethod = 4 then      put "DeviceCMYK" into tColorSpace   else      put "DeviceGray" into tColorSpace   end if   -- update the images for this document   local tImageID   put p_qrtPDF_NextImageId(pDocId, pFile) into tImageID   -- update the images data array   put tWidth into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_Width]   put tHeight into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_Height]   put tColorSpace into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_ColorSpace]   put tBitsPerComponent into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_BitsPerComponent]   put "DCTDecode" into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_Filter]   put tFileData into sDocumentsA[pDocID][kp_Images][tImageID][kp_IMG_Data]   return tImageIDend p_qrtPDF_LoadJPG/* private */ function p_qrtPDF_NextImageId pDocId, pFile   local tImageID   if sDocumentsA[pDocID][kp_ImageList] is empty   then put pFile into sDocumentsA[pDocID][kp_ImageList]   else put return & pFile after sDocumentsA[pDocID][kp_ImageList]   put the number of lines in sDocumentsA[pDocID][kp_ImageList] into tImageID   return tImageIdend p_qrtPDF_NextImageId-- core compression functions/* private */ function p_qrtPDF_Deflate pData   local tCompData   put compress(pData) into tCompData   ## the built-in compress function is very close   ## but PDF doesn't like the header and trailer   ## so we need to recalculate the checksum   local tA, tB, tByte, tNum   put 1 into tA   put 0 into tB   repeat for each byte tByte in pData      put byteToNum(tByte) into tNum      add tNum to tA      if tA > 65521 then subtract 65521 from tA      add tA to tB      if tB > 65521 then subtract 65521 from tB   end repeat   local tA1, tA2, tB1, tB2   put numToByte((tA bitAnd 65280) / 256) into tA1   put numToByte(tA bitAnd 255) into tA2   put numToByte((tB bitAnd 65280) / 256) into tB1   put numToByte(tB bitAnd 255) into tB2   ## replace the header and trailer   put numToByte(120) into byte 1 of tCompData   put numToByte(156) into byte 2 of tCompData   delete byte 3 to 10 of tCompData   put tB1 into byte -8 of tCompData   put tB2 into byte -7 of tCompData   put tA1 into byte -6 of tCompData   put tA2 into byte -5 of tCompData   delete byte -4 to -1 of tCompData   ## ready for use in our PDF file   return tCompDataend p_qrtPDF_Deflatefunction p_qrtPDF_Inflate pData, pOriginalLength   ## the built-in decompress function is very close   ## but LiveCode doesn't like the header and trailer   ## so we need to fiddle the format   delete byte 1 to 2 of pData   delete byte -1 to -4 of pData   local tHeaderByteValues, tHeaderBytes   put 31,139,8,0,0,0,0,0,0,3 into tHeaderByteValues   repeat for each item tHeaderByteValue in tHeaderByteValues      put numToByte(tHeaderByteValue) after tHeaderBytes   end repeat   put tHeaderBytes before pData   ## CRC value is optional   repeat 4 times      put numToByte(0) after pData   end repeat   ## ISIZE value is mandatory   local tISIZENetworkOrderBytes   put binaryEncode("M", pOriginalLength) into tISIZENetworkOrderBytes   repeat with tByteIndex = 4 down to 1      put byte tByteIndex of tISIZENetworkOrderBytes after pData   end repeat   return decompress(pData)end p_qrtPDF_Inflate-- core font functions/* private */ function p_qrtPDF_GetStringWidth pDocID, pString   local tFontID, tFontSize, tStringWidth, tChar   put sDocumentsA[pDocID][kp_CurrentFont] into tFontID   put sDocumentsA[pDocID][kp_FontSize] into tFontSize   put 0 into tStringWidth   repeat for each char tChar in pString      add kCoreFontsA[tFontID][kp_Font_CharWidths][charToNum(tChar)] to tStringWidth   end repeat   return tStringWidth * tFontSize / 1000end p_qrtPDF_GetStringWidth-- formatting functions/* private */ function p_qrtPDF_FormatColor pRGBTriplet   local tR, tG, tB   put item 1 of pRGBTriplet into tR   put item 2 of pRGBTriplet into tG   put item 3 of pRGBTriplet into tB   return format("%.3f %.3f %.3f", tR/255, tG/255, tB/255)end p_qrtPDF_FormatColor/* private */ function p_qrtPDF_FormatCoords pFormat, pCoords   return value("format(" & quote & pFormat & quote & "," & pCoords & ")")end p_qrtPDF_FormatCoords-- parameter assertion handlers/* private */ command p_qrtPDF_AssertAlign pAlign   if pAlign is not among the items of kSupportedAligns then throw "qrtPDFErr: align must be one of '" & kSupportedAligns & "'"end p_qrtPDF_AssertAlign/* private */ command p_qrtPDF_AssertAlignList pAlignList   repeat for each item pAlign in pAlignList      if pAlign is not among the items of kSupportedAligns then throw "qrtPDFErr: aligns must be a comma-separated list of '" & kSupportedAligns & "'"   end repeatend p_qrtPDF_AssertAlignList/* private */ command p_qrtPDF_AssertBlendmode pBlendmode   if pBlendmode is not among the items of kSupportedBlendModes then throw "qrtPDFErr: blend mode should be one of '" & kSupportedBlendModes & "'"end p_qrtPDF_AssertBlendmode/* private */ command p_qrtPDF_AssertBorder @pBorder   if pBorder is empty then exit p_qrtPDF_AssertBorder   local tBorder   if pBorder is "frame" then      put "bottom,left,right,top" into pBorder -- alphabetical order   else      repeat for each item tBorderItem in pBorder         if tBorderItem is not among the items of "left,top,right,bottom"          then throw "qrtPDFErr: border must be empty, 'frame' or a combination of 'left,top,right,bottom'"         put tBorderItem & comma after tBorder      end repeat      delete char -1 of tBorder      sort items in tBorder      put tBorder into pBorder   end ifend p_qrtPDF_AssertBorder/* private */ command p_qrtPDF_AssertCap pCap  if pCap is not among the items of kSupportedCapTypes then throw "qrtPDFErr: cap should be one of '" & kSupportedCapTypes & "'"end p_qrtPDF_AssertCap/* private */ command p_qrtPDF_AssertColor pLabel, @pRGB   if the number of items of pRGB > 3 then throw "qrtPDFErr: invalid" && pLabel && pRGB   local tR, tG, tB   put item 1 of pRGB into tR   put item 2 of pRGB into tG   put item 3 of pRGB into tB   p_qrtPDF_AssertColorTriplet tR, tG, tB   put tR,tG,tB into pRGBend p_qrtPDF_AssertColor/* private */ command p_qrtPDF_AssertColorTriplet @pR, @pG, @pB   local tColor   if pG is empty and pB is empty then      if char 1 of pR is "#" then         -- should be an HTML color         --> expand shorthand notation if applicable         if length(pR) is 4 then            put char 4 of pR after char 4 of pR            put char 3 of pR after char 3 of pR            put char 2 of pR after char 2 of pR         end if         if length(pR) is not 7 then throw "qrtPDFErr: invalid HTML color" && pR         repeat with i = 2 to 7            if char i of pR is not in "0123456789ABCDEF" then throw "qrtPDFErr: invalid HTML color" && pR         end repeat         -- now convert it to proper RGB values         put pR into tColor         put baseConvert(char 2 to 3 of tColor, 16, 10) into pR          put baseConvert(char 4 to 5 of tColor, 16, 10) into pG         put baseConvert(char 6 to 7 of tColor, 16, 10) into pB      else if char 1 to 2 of pR is "0x" then         -- should be a HEX color         if length(pR) is not 8 then throw "qrtPDFErr: invalid HEX color" && pR         repeat with i = 3 to 8            if char i of pR is not in "0123456789ABCDEF" then throw "qrtPDFErr: invalid HEX color" && pR         end repeat         -- now convert it to proper RGB values         put pR into tColor         put baseConvert(char 3 to 4 of tColor, 16, 10) into pR          put baseConvert(char 5 to 6 of tColor, 16, 10) into pG         put baseConvert(char 7 to 8 of tColor, 16, 10) into pB      else if pR is an integer then         p_qrtPDF_AssertInteger "grayscale value", pR, 0, 255         put pR into pG         put pR into pB      else if the number of items of pR is 3 then         put item 2 of pR into pG         put item 3 of pR into pB         put item 1 of pR into pR         p_qrtPDF_AssertInteger "red value", pR, 0, 255         p_qrtPDF_AssertInteger "green value", pG, 0, 255         p_qrtPDF_AssertInteger "blue value", pB, 0, 255      else         put kColorNamesA[pR] into tColor         if tColor is empty then throw "qrtPDFErr: unknown color name" && pR         put item 1 of tColor into pR         put item 2 of tColor into pG         put item 3 of tColor into pB      end if   else      p_qrtPDF_AssertInteger "red value", pR, 0, 255      p_qrtPDF_AssertInteger "green value", pG, 0, 255      p_qrtPDF_AssertInteger "blue value", pB, 0, 255   end ifend p_qrtPDF_AssertColorTriplet/* private */ command p_qrtPDF_AssertDashes @pDashes  replace space with empty in pDashes  repeat for each item tDash in pDashes    if tDash is not an integer then throw "qrtPDFErr: invalid dashes"  end repeatend p_qrtPDF_AssertDashes/* private */ command p_qrtPDF_AssertDocID pDocID, pState   if pDocID is not among the lines of the keys of sDocumentsA then throw "qrtPDFErr: unknown document ID '" & pDocID & "'"   local tDocumentState   put sDocumentsA[pDocID][kp_CurrentState] into tDocumentState   if pState is empty and tDocumentState is kp_State_Created then throw "qrtPDFErr: document ID '" & pDocID & "' is not opened yet"   if pState is empty and tDocumentState is kp_State_Closed then throw "qrtPDFErr: document ID '" & pDocID & "' is already closed"   if pState is not empty then      switch pState         case kp_State_Created            if tDocumentState > kp_State_Created then throw "qrtPDFErr: document ID '" & pDocID & "' has already been opened"            break         case kp_State_Waiting            if tDocumentState > kp_State_Waiting then throw "qrtPDFErr: document ID '" & pDocID & "' has already been edited"            break         case kp_State_Drawing            if tDocumentState > kp_State_Drawing then throw "qrtPDFErr: document ID '" & pDocID & "' has already been closed"            break      end switch   end ifend p_qrtPDF_AssertDocID/* private */ command p_qrtPDF_AssertDrawStyle @pStyle   if pStyle is not empty and pStyle is not among the items of "F,fill,D,draw,DF,drawfill,FD,filldraw"    then throw "qrtPDFErr: drawStyle must be empty or one of 'F,fill,D,draw,DF,drawfill,FD,filldraw'"   if pStyle is "fill" then put "F" into pStyle   if pStyle is "drawfill" then put "DF" into pStyle   if pStyle is "filldraw" then put "FD" into pStyle   if pStyle is "draw" or pStyle is empty then put "D" into pStyleend p_qrtPDF_AssertDrawStyle/* private */ command p_qrtPDF_AssertExtGStateID pDocID, pExtGStateID   if sDocumentsA[pDocID][kp_ExtGStates][pExtGStateID][kp_EXTG_StateParams] is empty then throw "qrtPDFErr: invalid extGStateID" && pExtGStateIDend p_qrtPDF_AssertExtGStateID/* private */ command p_qrtPDF_AssertFile pFile  if there is not a file pFile then throw "qrtPDFErr: could not find file '" & pFile & "'"end p_qrtPDF_AssertFile/* private */ command p_qrtPDF_AssertFileType pFileType   if length(pFileType) <> 8 then throw "qrtPDFErr: invalid filetype '" & pFileType & "'"end p_qrtPDF_AssertFileType/* private */ command p_qrtPDF_AssertFitMode pFitMode  if pFitMode is not among the items of kSupportedFitModes then throw "qrtPDFErr: fit mode should be empty or one of '" & kSupportedFitModes & "'"end p_qrtPDF_AssertFitMode/* private */ command p_qrtPDF_AssertFlag pLabel, pFlag   if pFlag is not a boolean   then throw "qrtPDFErr:" && pLabel && "flag must be 'true' or 'false'"end p_qrtPDF_AssertFlag/* private */ command p_qrtPDF_AssertFontName pFont   if pFont is not empty and pFont is not among the items of kSupportedFontFamilies then throw "qrtPDFErr: font must be one of '" & kSupportedFontFamilies & "'"end p_qrtPDF_AssertFontName/* private */ command p_qrtPDF_AssertFontStyle @pStyle   if pStyle is empty then exit p_qrtPDF_AssertFontStyle   replace "bold" with "b" in pStyle   replace "italic" with "i" in pStyle   replace "underline" with "u" in pStyle   replace comma with empty in pStyle   put upper(pStyle) into pStyle   repeat for each char tChar in pStyle      if tChar is not among the items of "B,I,U" then throw "qrtPDFErr: fontStyle must be empty or a combination of 'bold,italic,underline'"   end repeatend p_qrtPDF_AssertFontStyle/* private */ command p_qrtPDF_AssertGradientData pGradientType, @pGradientData   if the keys of pGradientData is empty then throw "qrtPDFErr: invalid gradient data" && pGradientData   local tColor   switch pGradientType      case "2"         put pGradientData[kp_Shader_StartColor] into tColor         p_qrtPDF_AssertColor "start color", tColor         put tColor into pGradientData[kp_Shader_StartColor]         put pGradientData[kp_Shader_EndColor] into tColor         p_qrtPDF_AssertColor "end color", tColor         put tColor into pGradientData[kp_Shader_EndColor]         p_qrtPDF_AssertLinearGradientData pGradientData[kp_Shader_Coords]         break      case "3"         put pGradientData[kp_Shader_StartColor] into tColor         p_qrtPDF_AssertColor "start color", tColor         put tColor into pGradientData[kp_Shader_StartColor]         put pGradientData[kp_Shader_EndColor] into tColor         p_qrtPDF_AssertColor "end color", tColor         put tColor into pGradientData[kp_Shader_EndColor]         p_qrtPDF_AssertRadialGradientData pGradientData[kp_Shader_Coords]         break      default         throw "qrtPDFErr: unsupported gradient type" && pGradientType         break   end switchend p_qrtPDF_AssertGradientData/* private */ command p_qrtPDF_AssertImagePositioning pImgPositioning   if pImgPositioning is not among the items of kSupportedImagePositioningTypes then throw "qrtPDFErr: image positioning should be one of '" & kSupportedImagePositioningTypes & "'"end p_qrtPDF_AssertImagePositioning/* private */ command p_qrtPDF_AssertImageType pFile, @pType   local tFileName, tExtension   if pType is empty then      set the itemDelimiter to slash      put item -1 of pFile into tFileName      set the itemDelimiter to "."      put item -1 of tFileName into tExtension      set the itemDelimiter to comma      if tExtension is empty then throw "qrtPDFErr: image file has no extension and no type was specified for file '" & pFile & "'"      put tExtension into pType   end if   if pType is not among the items of kSupportedImageTypes then throw "qrtPDFErr: image type must be one of '" & kSupportedImageTypes & "'"end p_qrtPDF_AssertImageType/* private */ command p_qrtPDF_AssertInteger pLabel, pNumber, pMin, pMax, pNot   if pNumber is not an integer then throw "qrtPDFErr:" && pLabel && "must be an integer number"   if (pMin is not empty) and (pMax is not empty) and (pNumber < pMin or pNumber > pMax) then throw "qrtPDFErr:" && pLabel && "must be between" && pMin && "and" && pMax   if (pMin is not empty) and (pNumber < pMin) then throw "qrtPDFErr:" && pLabel && "must be greater than or equal to" && pMin   if (pMax is not empty) and (pNumber > pMax) then throw "qrtPDFErr:" && pLabel && "must be less than or equal to" && pMax   if (pNot is not empty) and (pNumber = pNot) then throw "qrtPDFErr:" && pLabel && "cannot be" && pNotend p_qrtPDF_AssertInteger/* private */ command p_qrtPDF_AssertIntegerList pLabel, pNumberList, pMin, pMax, pNot   repeat for each item pNumber in pNumberList      if pNumber is not an integer then throw "qrtPDFErr:" && pLabel && "must be a comma-separated list of integer numbers"      if (pMin is not empty) and (pMax is not empty) and (pNumber < pMin or pNumber > pMax) then throw "qrtPDFErr: each item of" && pLabel && "must be between" && pMin && "and" && pMax      if (pMin is not empty) and (pNumber < pMin) then throw "qrtPDFErr: each item of" && pLabel && "must be greater than or equal to" && pMin      if (pMax is not empty) and (pNumber > pMax) then throw "qrtPDFErr: each item of" && pLabel && "must be less than or equal to" && pMax      if (pNot is not empty) and (pNumber = pNot) then throw "qrtPDFErr: no item of" && pLabel && "can be" && pNot   end repeatend p_qrtPDF_AssertIntegerList/* private */ command p_qrtPDF_AssertJoin pJoin  if pJoin is not among the items of kSupportedJoinTypes then throw "qrtPDFErr: join should be one of '" & kSupportedJoinTypes & "'"end p_qrtPDF_AssertJoin/* private */ command p_qrtPDF_AssertLayoutMode @pLayout  if pLayout is empty then put "continuous" into pLayout  if pLayout is not among the items of "single,continuous,two,default"  then throw "qrtPDFErr: layout display mode must be one of 'single,continuous,two,default'"end p_qrtPDF_AssertLayoutMode/* private */ command p_qrtPDF_AssertLinearGradientData pGradientData   if the number of items of pGradientData is not 4 then throw "qrtPDFErr: invalid linear gradient coords" && pGradientData   p_qrtPDF_AssertNumber "linear gradient coord x1", item 1 of pGradientData   p_qrtPDF_AssertNumber "linear gradient coord y1", item 2 of pGradientData   p_qrtPDF_AssertNumber "linear gradient coord x2", item 3 of pGradientData   p_qrtPDF_AssertNumber "linear gradient coord y2", item 4 of pGradientDataend p_qrtPDF_AssertLinearGradientData/* private */ command p_qrtPDF_AssertLink pDocID, pLink   if the number of lines in sDocumentsA[pDocID][kp_LinkList] < pLink then throw "qrtPDFErr: unknown link '" & pLink & "'"end p_qrtPDF_AssertLink/* private */ command p_qrtPDF_AssertNewPosition @pNewPosition   if pNewPosition is empty then put "begin" into pNewPosition   if pNewPosition is not among the items of "begin,below,left,right" then throw "qrtPDFErr: new position must be one of 'begin,below,left,right'"end p_qrtPDF_AssertNewPosition/* private */ command p_qrtPDF_AssertNumber pLabel, pNumber, pMin, pMax, pNot   if pNumber is not a number then throw "qrtPDFErr:" && pLabel && "must be a number"   if (pMin is not empty) and (pMax is not empty) and (pNumber < pMin or pNumber > pMax) then throw "qrtPDFErr:" && pLabel && "must be between" && pMin && "and" && pMax   if (pMin is not empty) and (pNumber < pMin) then throw "qrtPDFErr:" && pLabel && "must be greater than or equal to" && pMin   if (pMax is not empty) and (pNumber > pMax) then throw "qrtPDFErr:" && pLabel && "must be less than or equal to" && pMax   if (pNot is not empty) and (pNumber = pNot) then throw "qrtPDFErr:" && pLabel && "cannot be" && pNotend p_qrtPDF_AssertNumber/* private */ command p_qrtPDF_AssertNumberList pLabel, pNumberList, pMin, pMax, pNot   repeat for each item pNumber in pNumberList      if pNumber is not a number then throw "qrtPDFErr:" && pLabel && "must be a comma-separated list of numbers"      if (pMin is not empty) and (pMax is not empty) and (pNumber < pMin or pNumber > pMax) then throw "qrtPDFErr: each item of" && pLabel && "must be between" && pMin && "and" && pMax      if (pMin is not empty) and (pNumber < pMin) then throw "qrtPDFErr: each item of" && pLabel && "must be greater than or equal to" && pMin      if (pMax is not empty) and (pNumber > pMax) then throw "qrtPDFErr: each item of" && pLabel && "must be less than or equal to" && pMax      if (pNot is not empty) and (pNumber = pNot) then throw "qrtPDFErr: no item of" && pLabel && "can be" && pNot   end repeatend p_qrtPDF_AssertNumberList/* private */ command p_qrtPDF_AssertObjectRef pObjectRef   local tExistsFlag   try      put exists(pObjectRef) into tExistsFlag   catch tError      put false into tExistsFlag   end try   if tExistsFlag is false then throw "qrtPDFErr: invalid callback object reference '" & pObjectRef & "'"end p_qrtPDF_AssertObjectRef/* private */ command p_qrtPDF_AssertOrientation @pOrientation   if pOrientation is not among the items of "p,portrait,l,landscape" then throw "qrtPDFErr: orientation must be one of 'p,portrait,l,landscape'"   -- use short form internally   if pOrientation is "portrait" then put "p" into pOrientation   if pOrientation is "landscape" then put "l" into pOrientationend p_qrtPDF_AssertOrientation/* private */ command p_qrtPDF_AssertPageFormat pPageFormat   local tPageFormats, tErrorFlag   put the keys of kPageFormatsA into tPageFormats   replace return with comma in tPageFormats   put false into tErrorFlag   if comma is not in pPageFormat then      if pPageFormat is not among the items of tPageFormats then          put true into tErrorFlag      end if   else      if pPageFormat is not a point then         put true into tErrorFLag      end if   end if   if tErrorFlag then throw "qrtPDFErr: pageFormat must be one of '" & tPageFormats & "' or of the form '<width>,<height>'"end p_qrtPDF_AssertPageFormat/* private */ command p_qrtPDF_AssertPoints pPoints   repeat for each line tPoint in pPoints      if tPoint is not a point then throw "qrtPDFErr: invalid points list"   end repeatend p_qrtPDF_AssertPoints/* private */ command p_qrtPDF_AssertRadialGradientData pGradientData   if the number of items of pGradientData is not 5 then throw "qrtPDFErr: invalid radial gradient coords" && pGradientData   p_qrtPDF_AssertNumber "radial gradient coord fx", item 1 of pGradientData   p_qrtPDF_AssertNumber "radial gradient coord fy", item 2 of pGradientData   p_qrtPDF_AssertNumber "radial gradient coord cx", item 3 of pGradientData   p_qrtPDF_AssertNumber "radial gradient coord cy", item 4 of pGradientData   p_qrtPDF_AssertNumber "radial gradient coord r", item 5 of pGradientDataend p_qrtPDF_AssertRadialGradientData/* private */ command p_qrtPDF_AssertTableBorder pBorder   if pBorder is not among the items of "none,frame,grid" then throw "qrtPDFErr: table border must be one of 'none,frame,grid'"end p_qrtPDF_AssertTableBorder/* private */ command p_qrtPDF_AssertTextArray @pText   local tExtents, tText, tRow, tColumn, tLine, tItem   if the keys of pText is not empty then      put the extents of pText into tExtents      if the number of lines in tExtents is not 2 or tExtents is empty then         throw "qrtPDFErr: table text must be either a two dimensional array with numeric index or a tab-and-return delimited string"      end if   else      set the itemDelimiter to tab      put 0 into tRow      repeat for each line tLine in pText         add 1 to tRow         put 0 into tColumn         repeat for each item tItem in tLine            add 1 to tColumn            put tItem into tText[tRow,tColumn]         end repeat      end repeat      put tText into pText   end ifend p_qrtPDF_AssertTextArray/* private */ command p_qrtPDF_AssertUnit @pUnit   if pUnit is not among the items of "pt,point,mm,millimeter,cm,centimeter,in,inch"    then throw "qrtPDFErr: unit must be one of 'pt,point,mm,millimeter,cm,centimeter,in,inch'"   -- use short form internally   if pUnit is "point" then put "pt" into pUnit   if pUnit is "millimeter" then put "mm" into pUnit   if pUnit is "centimeter" then put "cm" into pUnit   if pUnit is "inch" then put "in" into pUnitend p_qrtPDF_AssertUnit/* private */ command p_qrtPDF_AssertZoomMode pZoom   if pZoom is not among the items of "fullpage,fullwidth,real,default" and pZoom is not a number   then throw "qrtPDFErr: zoom display mode must be one of 'fullpage,fullwidth,real,default' or a number"end p_qrtPDF_AssertZoomMode--> private loader commands/* private */ command p_qrtPDF_LoadColorNames   put "239,247,255" into kColorNamesA["AliceBlue"]   put "249,232,210" into kColorNamesA["AntiqueWhite"]   put "254,237,214" into kColorNamesA["AntiqueWhite1"]   put "235,219,197" into kColorNamesA["AntiqueWhite2"]   put "200,185,166" into kColorNamesA["AntiqueWhite3"]   put "139,131,120" into kColorNamesA["AntiqueWhite4"]   put "67,183,186" into kColorNamesA["Aquamarine"]   put "127,255,212" into kColorNamesA["Aquamarine1"]   put "118,238,198" into kColorNamesA["Aquamarine2"]   put "102,205,170" into kColorNamesA["Aquamarine3"]   put "65,124,100" into kColorNamesA["Aquamarine4"]   put "239,255,255" into kColorNamesA["Azure"]   put "239,255,255" into kColorNamesA["Azure1"]   put "222,236,236" into kColorNamesA["Azure2"]   put "188,199,199" into kColorNamesA["Azure3"]   put "122,125,125" into kColorNamesA["Azure4"]   put "245,243,215" into kColorNamesA["Beige"]   put "255,228,196" into kColorNamesA["Bisque"]   put "253,224,188" into kColorNamesA["Bisque1"]   put "234,208,174" into kColorNamesA["Bisque2"]   put "199,175,146" into kColorNamesA["Bisque3"]   put "129,110,89" into kColorNamesA["Bisque4"]   put "0,0,0" into kColorNamesA["Black"]   put "254,232,198" into kColorNamesA["BlanchedAlmond"]   put "0,0,255" into kColorNamesA["Blue"]   put "21,53,255" into kColorNamesA["Blue1"]   put "21,49,236" into kColorNamesA["Blue2"]   put "21,40,199" into kColorNamesA["Blue3"]   put "21,27,126" into kColorNamesA["Blue4"]   put "138,43,226" into kColorNamesA["BlueViolet"]   put "152,5,23" into kColorNamesA["Brown"]   put "246,53,38" into kColorNamesA["Brown1"]   put "228,45,23" into kColorNamesA["Brown2"]   put "194,34,23" into kColorNamesA["Brown3"]   put "126,5,23" into kColorNamesA["Brown4"]   put "216,175,121" into kColorNamesA["Burlywood"]   put "252,206,142" into kColorNamesA["Burlywood1"]   put "234,190,131" into kColorNamesA["Burlywood2"]   put "198,160,109" into kColorNamesA["Burlywood3"]   put "128,99,65" into kColorNamesA["Burlywood4"]   put "87,134,147" into kColorNamesA["CadetBlue"]   put "152,245,255" into kColorNamesA["CadetBlue1"]   put "142,226,236" into kColorNamesA["CadetBlue2"]   put "119,191,199" into kColorNamesA["CadetBlue3"]   put "76,120,126" into kColorNamesA["CadetBlue4"]   put "127,255,0" into kColorNamesA["Chartreuse"]   put "127,255,0" into kColorNamesA["Chartreuse1"]   put "118,238,0" into kColorNamesA["Chartreuse2"]   put "102,205,0" into kColorNamesA["Chartreuse3"]   put "67,124,23" into kColorNamesA["Chartreuse4"]   put "200,90,23" into kColorNamesA["Chocolate"]   put "248,114,23" into kColorNamesA["Chocolate1"]   put "229,103,23" into kColorNamesA["Chocolate2"]   put "195,86,23" into kColorNamesA["Chocolate3"]   put "126,49,23" into kColorNamesA["Chocolate4"]   put "247,101,65" into kColorNamesA["Coral"]   put "247,101,65" into kColorNamesA["Coral1"]   put "229,91,60" into kColorNamesA["Coral2"]   put "195,74,44" into kColorNamesA["Coral3"]   put "126,40,23" into kColorNamesA["Coral4"]   put "100,149,237" into kColorNamesA["CornflowerBlue"]   put "255,247,215" into kColorNamesA["CornSilk"]   put "255,247,215" into kColorNamesA["CornSilk1"]   put "236,229,198" into kColorNamesA["CornSilk2"]   put "200,194,167" into kColorNamesA["CornSilk3"]   put "129,122,104" into kColorNamesA["CornSilk4"]   put "0,255,255" into kColorNamesA["Cyan"]   put "87,254,255" into kColorNamesA["Cyan1"]   put "80,235,236" into kColorNamesA["Cyan2"]   put "70,199,199" into kColorNamesA["Cyan3"]   put "48,125,126" into kColorNamesA["Cyan4"]   put "0,0,139" into kColorNamesA["DarkBlue"]   put "0,139,139" into kColorNamesA["DarkCyan"]   put "175,120,23" into kColorNamesA["DarkGoldenrod"]   put "251,177,23" into kColorNamesA["DarkGoldenrod1"]   put "232,163,23" into kColorNamesA["DarkGoldenrod2"]   put "197,137,23" into kColorNamesA["DarkGoldenrod3"]   put "127,82,23" into kColorNamesA["DarkGoldenrod4"]   put "169,169,169" into kColorNamesA["DarkGray"]   put "0,100,0" into kColorNamesA["DarkGreen"]   put "183,173,89" into kColorNamesA["DarkKhaki"]   put "139,0,139" into kColorNamesA["DarkMagenta"]   put "74,65,23" into kColorNamesA["DarkOliveGreen"]   put "202,255,112" into kColorNamesA["DarkOliveGreen1"]   put "188,233,84" into kColorNamesA["DarkOliveGreen2"]   put "160,197,68" into kColorNamesA["DarkOliveGreen3"]   put "102,124,38" into kColorNamesA["DarkOliveGreen4"]   put "248,128,23" into kColorNamesA["DarkOrange"]   put "248,114,23" into kColorNamesA["DarkOrange1"]   put "229,103,23" into kColorNamesA["DarkOrange2"]   put "195,86,23" into kColorNamesA["DarkOrange3"]   put "126,49,23" into kColorNamesA["DarkOrange4"]   put "125,27,126" into kColorNamesA["DarkOrchid"]   put "176,65,255" into kColorNamesA["DarkOrchid1"]   put "162,59,236" into kColorNamesA["DarkOrchid2"]   put "139,49,199" into kColorNamesA["DarkOrchid3"]   put "104,34,139" into kColorNamesA["DarkOrchid4"]   put "139,0,0" into kColorNamesA["DarkRed"]   put "225,139,107" into kColorNamesA["DarkSalmon"]   put "139,179,129" into kColorNamesA["DarkSeaGreen"]   put "193,255,193" into kColorNamesA["DarkSeaGreen1"]   put "180,238,180" into kColorNamesA["DarkSeaGreen2"]   put "153,198,142" into kColorNamesA["DarkSeaGreen3"]   put "105,139,105" into kColorNamesA["DarkSeaGreen4"]   put "43,56,86" into kColorNamesA["DarkSlateBlue"]   put "37,56,60" into kColorNamesA["DarkSlateGray"]   put "151,255,255" into kColorNamesA["DarkSlateGray1"]   put "141,238,238" into kColorNamesA["DarkSlateGray2"]   put "120,199,199" into kColorNamesA["DarkSlateGray3"]   put "76,125,126" into kColorNamesA["DarkSlateGray4"]   put "59,156,156" into kColorNamesA["DarkTurquoise"]   put "132,45,206" into kColorNamesA["DarkViolet"]   put "245,40,135" into kColorNamesA["DeepPink"]   put "255,20,147" into kColorNamesA["DeepPink1"]   put "228,40,124" into kColorNamesA["DeepPink2"]   put "193,34,103" into kColorNamesA["DeepPink3"]   put "125,5,63" into kColorNamesA["DeepPink4"]   put "0,191,255" into kColorNamesA["DeepSkyBlue"]   put "59,185,255" into kColorNamesA["DeepSkyBlue1"]   put "0,178,238" into kColorNamesA["DeepSkyBlue2"]   put "0,154,205" into kColorNamesA["DeepSkyBlue3"]   put "0,104,139" into kColorNamesA["DeepSkyBlue4"]   put "70,62,65" into kColorNamesA["DimGray"]   put "21,137,255" into kColorNamesA["DodgerBlue"]   put "30,144,255" into kColorNamesA["DodgerBlue1"]   put "28,134,238" into kColorNamesA["DodgerBlue2"]   put "24,116,205" into kColorNamesA["DodgerBlue3"]   put "16,78,139" into kColorNamesA["DodgerBlue4"]   put "128,5,23" into kColorNamesA["Firebrick"]   put "246,40,23" into kColorNamesA["Firebrick1"]   put "228,34,23" into kColorNamesA["Firebrick2"]   put "193,27,23" into kColorNamesA["Firebrick3"]   put "126,5,23" into kColorNamesA["Firebrick4"]   put "255,249,238" into kColorNamesA["FloralWhite"]   put "34,139,34" into kColorNamesA["ForestGreen"]   put "216,217,215" into kColorNamesA["Gainsboro"]   put "247,247,255" into kColorNamesA["GhostWhite"]   put "212,160,23" into kColorNamesA["Gold"]   put "253,208,23" into kColorNamesA["Gold1"]   put "234,193,23" into kColorNamesA["Gold2"]   put "199,163,23" into kColorNamesA["Gold3"]   put "128,101,23" into kColorNamesA["Gold4"]   put "218,165,32" into kColorNamesA["Goldenrod"]   put "251,185,23" into kColorNamesA["Goldenrod1"]   put "233,171,23" into kColorNamesA["Goldenrod2"]   put "198,142,23" into kColorNamesA["Goldenrod3"]   put "128,88,23" into kColorNamesA["Goldenrod4"]   put "190,190,190" into kColorNamesA["Gray"]   put "0,0,0" into kColorNamesA["Gray0"]   put "21,5,23" into kColorNamesA["Gray1"]   put "21,5,23" into kColorNamesA["Gray10"]   put "255,255,255" into kColorNamesA["Gray100"]   put "21,5,23" into kColorNamesA["Gray11"]   put "21,5,23" into kColorNamesA["Gray12"]   put "21,5,23" into kColorNamesA["Gray13"]   put "21,5,23" into kColorNamesA["Gray14"]   put "21,5,23" into kColorNamesA["Gray15"]   put "21,5,23" into kColorNamesA["Gray16"]   put "21,5,23" into kColorNamesA["Gray17"]   put "37,5,23" into kColorNamesA["Gray18"]   put "37,5,23" into kColorNamesA["Gray19"]   put "21,5,23" into kColorNamesA["Gray2"]   put "37,5,23" into kColorNamesA["Gray20"]   put "43,27,23" into kColorNamesA["Gray21"]   put "43,27,23" into kColorNamesA["Gray22"]   put "48,34,23" into kColorNamesA["Gray23"]   put "48,34,38" into kColorNamesA["Gray24"]   put "52,40,38" into kColorNamesA["Gray25"]   put "52,40,44" into kColorNamesA["Gray26"]   put "56,45,44" into kColorNamesA["Gray27"]   put "59,49,49" into kColorNamesA["Gray28"]   put "62,53,53" into kColorNamesA["Gray29"]   put "21,5,23" into kColorNamesA["Gray3"]   put "65,56,57" into kColorNamesA["Gray30"]   put "65,56,60" into kColorNamesA["Gray31"]   put "70,62,63" into kColorNamesA["Gray32"]   put "70,62,65" into kColorNamesA["Gray33"]   put "74,67,68" into kColorNamesA["Gray34"]   put "76,70,70" into kColorNamesA["Gray35"]   put "78,72,72" into kColorNamesA["Gray36"]   put "80,74,75" into kColorNamesA["Gray37"]   put "84,78,79" into kColorNamesA["Gray38"]   put "86,80,81" into kColorNamesA["Gray39"]   put "10,10,10" into kColorNamesA["Gray4"]   put "102,102,102" into kColorNamesA["Gray40"]   put "105,105,105" into kColorNamesA["Gray41"]   put "107,107,107" into kColorNamesA["Gray42"]   put "110,110,110" into kColorNamesA["Gray43"]   put "100,96,96" into kColorNamesA["Gray44"]   put "102,99,98" into kColorNamesA["Gray45"]   put "105,101,101" into kColorNamesA["Gray46"]   put "109,105,104" into kColorNamesA["Gray47"]   put "110,106,107" into kColorNamesA["Gray48"]   put "114,110,109" into kColorNamesA["Gray49"]   put "13,13,13" into kColorNamesA["Gray5"]   put "116,113,112" into kColorNamesA["Gray50"]   put "120,116,115" into kColorNamesA["Gray51"]   put "122,119,119" into kColorNamesA["Gray52"]   put "124,121,121" into kColorNamesA["Gray53"]   put "128,125,124" into kColorNamesA["Gray54"]   put "130,128,126" into kColorNamesA["Gray55"]   put "133,131,129" into kColorNamesA["Gray56"]   put "135,133,131" into kColorNamesA["Gray57"]   put "139,137,135" into kColorNamesA["Gray58"]   put "141,139,137" into kColorNamesA["Gray59"]   put "15,15,15" into kColorNamesA["Gray6"]   put "143,142,141" into kColorNamesA["Gray60"]   put "147,145,144" into kColorNamesA["Gray61"]   put "149,148,146" into kColorNamesA["Gray62"]   put "153,151,149" into kColorNamesA["Gray63"]   put "154,153,152" into kColorNamesA["Gray64"]   put "158,156,155" into kColorNamesA["Gray65"]   put "160,159,157" into kColorNamesA["Gray66"]   put "163,162,160" into kColorNamesA["Gray67"]   put "165,164,163" into kColorNamesA["Gray68"]   put "169,168,166" into kColorNamesA["Gray69"]   put "18,18,18" into kColorNamesA["Gray7"]   put "172,171,169" into kColorNamesA["Gray70"]   put "174,173,172" into kColorNamesA["Gray71"]   put "177,177,175" into kColorNamesA["Gray72"]   put "179,179,177" into kColorNamesA["Gray73"]   put "183,182,180" into kColorNamesA["Gray74"]   put "185,184,182" into kColorNamesA["Gray75"]   put "188,187,186" into kColorNamesA["Gray76"]   put "190,190,188" into kColorNamesA["Gray77"]   put "193,193,191" into kColorNamesA["Gray78"]   put "195,196,194" into kColorNamesA["Gray79"]   put "20,20,20" into kColorNamesA["Gray8"]   put "199,199,197" into kColorNamesA["Gray80"]   put "202,202,201" into kColorNamesA["Gray81"]   put "204,204,203" into kColorNamesA["Gray82"]   put "208,207,207" into kColorNamesA["Gray83"]   put "210,210,209" into kColorNamesA["Gray84"]   put "213,213,212" into kColorNamesA["Gray85"]   put "215,215,215" into kColorNamesA["Gray86"]   put "219,219,217" into kColorNamesA["Gray87"]   put "221,221,220" into kColorNamesA["Gray88"]   put "224,224,224" into kColorNamesA["Gray89"]   put "21,5,23" into kColorNamesA["Gray9"]   put "226,227,225" into kColorNamesA["Gray90"]   put "229,230,228" into kColorNamesA["Gray91"]   put "232,233,232" into kColorNamesA["Gray92"]   put "235,235,234" into kColorNamesA["Gray93"]   put "238,238,238" into kColorNamesA["Gray94"]   put "240,241,240" into kColorNamesA["Gray95"]   put "244,244,243" into kColorNamesA["Gray96"]   put "246,246,245" into kColorNamesA["Gray97"]   put "249,249,250" into kColorNamesA["Gray98"]   put "251,251,251" into kColorNamesA["Gray99"]   put "0,255,0" into kColorNamesA["Green"]   put "95,251,23" into kColorNamesA["Green1"]   put "0,238,0" into kColorNamesA["Green2"]   put "0,205,0" into kColorNamesA["Green3"]   put "0,139,0" into kColorNamesA["Green4"]   put "173,255,47" into kColorNamesA["GreenYellow"]   put "240,254,238" into kColorNamesA["Honeydew"]   put "240,255,240" into kColorNamesA["Honeydew1"]   put "222,235,220" into kColorNamesA["Honeydew2"]   put "188,199,185" into kColorNamesA["Honeydew3"]   put "122,125,116" into kColorNamesA["Honeydew4"]   put "246,96,171" into kColorNamesA["HotPink"]   put "246,101,171" into kColorNamesA["HotPink1"]   put "228,94,157" into kColorNamesA["HotPink2"]   put "194,82,131" into kColorNamesA["HotPink3"]   put "125,34,82" into kColorNamesA["HotPink4"]   put "205,92,92" into kColorNamesA["IndianRed"]   put "247,93,89" into kColorNamesA["IndianRed1"]   put "229,84,81" into kColorNamesA["IndianRed2"]   put "194,70,65" into kColorNamesA["IndianRed3"]   put "126,34,23" into kColorNamesA["IndianRed4"]   put "255,255,238" into kColorNamesA["Ivory"]   put "255,255,238" into kColorNamesA["Ivory1"]   put "236,236,220" into kColorNamesA["Ivory2"]   put "201,199,185" into kColorNamesA["Ivory3"]   put "129,125,116" into kColorNamesA["Ivory4"]   put "173,169,110" into kColorNamesA["Khaki"]   put "255,243,128" into kColorNamesA["Khaki1"]   put "237,226,117" into kColorNamesA["Khaki2"]   put "201,190,98" into kColorNamesA["Khaki3"]   put "130,120,57" into kColorNamesA["Khaki4"]   put "227,228,250" into kColorNamesA["Lavender"]   put "253,238,244" into kColorNamesA["LavenderBlush"]   put "255,240,245" into kColorNamesA["LavenderBlush1"]   put "235,221,226" into kColorNamesA["LavenderBlush2"]   put "200,187,190" into kColorNamesA["LavenderBlush3"]   put "129,118,121" into kColorNamesA["LavenderBlush4"]   put "124,252,0" into kColorNamesA["LawnGreen"]   put "255,248,198" into kColorNamesA["LemonChiffon"]   put "255,250,205" into kColorNamesA["LemonChiffon1"]   put "238,233,191" into kColorNamesA["LemonChiffon2"]   put "205,201,165" into kColorNamesA["LemonChiffon3"]   put "139,137,112" into kColorNamesA["LemonChiffon4"]   put "173,216,230" into kColorNamesA["LightBlue"]   put "189,237,255" into kColorNamesA["LightBlue1"]   put "175,220,236" into kColorNamesA["LightBlue2"]   put "149,185,199" into kColorNamesA["LightBlue3"]   put "104,131,139" into kColorNamesA["LightBlue4"]   put "231,116,113" into kColorNamesA["LightCoral"]   put "224,255,255" into kColorNamesA["LightCyan"]   put "224,255,255" into kColorNamesA["LightCyan1"]   put "207,236,236" into kColorNamesA["LightCyan2"]   put "175,199,199" into kColorNamesA["LightCyan3"]   put "113,125,125" into kColorNamesA["LightCyan4"]   put "236,216,114" into kColorNamesA["LightGoldenrod"]   put "255,232,124" into kColorNamesA["LightGoldenrod1"]   put "236,214,114" into kColorNamesA["LightGoldenrod2"]   put "200,181,96" into kColorNamesA["LightGoldenrod3"]   put "129,115,57" into kColorNamesA["LightGoldenrod4"]   put "250,248,204" into kColorNamesA["LightGoldenrodYellow"]   put "160,159,157" into kColorNamesA["LightGray"]   put "144,238,144" into kColorNamesA["LightGreen"]   put "250,175,186" into kColorNamesA["LightPink"]   put "249,167,176" into kColorNamesA["LightPink1"]   put "231,153,163" into kColorNamesA["LightPink2"]   put "196,129,137" into kColorNamesA["LightPink3"]   put "127,78,82" into kColorNamesA["LightPink4"]   put "249,150,107" into kColorNamesA["LightSalmon"]   put "255,160,122" into kColorNamesA["LightSalmon1"]   put "231,138,97" into kColorNamesA["LightSalmon2"]   put "196,116,81" into kColorNamesA["LightSalmon3"]   put "127,70,44" into kColorNamesA["LightSalmon4"]   put "32,178,170" into kColorNamesA["LightSeaGreen"]   put "130,202,250" into kColorNamesA["LightSkyBlue"]   put "173,223,255" into kColorNamesA["LightSkyBlue1"]   put "160,207,236" into kColorNamesA["LightSkyBlue2"]   put "135,175,199" into kColorNamesA["LightSkyBlue3"]   put "86,109,126" into kColorNamesA["LightSkyBlue4"]   put "115,106,255" into kColorNamesA["LightSlateBlue"]   put "109,123,141" into kColorNamesA["LightSlateGray"]   put "114,143,206" into kColorNamesA["LightSteelBlue"]   put "198,222,255" into kColorNamesA["LightSteelBlue1"]   put "183,206,236" into kColorNamesA["LightSteelBlue2"]   put "154,173,199" into kColorNamesA["LightSteelBlue3"]   put "100,109,126" into kColorNamesA["LightSteelBlue4"]   put "255,254,220" into kColorNamesA["LightYellow"]   put "255,255,224" into kColorNamesA["LightYellow1"]   put "237,235,203" into kColorNamesA["LightYellow2"]   put "201,199,170" into kColorNamesA["LightYellow3"]   put "130,125,107" into kColorNamesA["LightYellow4"]   put "50,205,50" into kColorNamesA["LimeGreen"]   put "249,238,226" into kColorNamesA["Linen"]   put "244,62,255" into kColorNamesA["Magenta"]   put "255,0,255" into kColorNamesA["Magenta1"]   put "226,56,236" into kColorNamesA["Magenta2"]   put "192,49,199" into kColorNamesA["Magenta3"]   put "125,27,126" into kColorNamesA["Magenta4"]   put "129,5,65" into kColorNamesA["Maroon"]   put "245,53,170" into kColorNamesA["Maroon1"]   put "227,49,157" into kColorNamesA["Maroon2"]   put "193,34,131" into kColorNamesA["Maroon3"]   put "125,5,82" into kColorNamesA["Maroon4"]   put "102,205,170" into kColorNamesA["MediumAquamarine"]   put "0,0,205" into kColorNamesA["MediumBlue"]   put "52,114,53" into kColorNamesA["MediumForestGreen"]   put "204,185,84" into kColorNamesA["MediumGoldenrod"]   put "176,72,181" into kColorNamesA["MediumOrchid"]   put "212,98,255" into kColorNamesA["MediumOrchid1"]   put "196,90,236" into kColorNamesA["MediumOrchid2"]   put "167,74,199" into kColorNamesA["MediumOrchid3"]   put "106,40,126" into kColorNamesA["MediumOrchid4"]   put "132,103,215" into kColorNamesA["MediumPurple"]   put "171,130,255" into kColorNamesA["MediumPurple1"]   put "159,121,238" into kColorNamesA["MediumPurple2"]   put "137,104,205" into kColorNamesA["MediumPurple3"]   put "93,71,139" into kColorNamesA["MediumPurple4"]   put "48,103,84" into kColorNamesA["MediumSeaGreen"]   put "123,104,238" into kColorNamesA["MediumSlateBlue"]   put "0,250,154" into kColorNamesA["MediumSpringGreen"]   put "72,204,205" into kColorNamesA["MediumTurquoise"]   put "199,21,133" into kColorNamesA["MediumVioletRed"]   put "21,27,84" into kColorNamesA["MidnightBlue"]   put "245,255,249" into kColorNamesA["MintCream"]   put "253,225,221" into kColorNamesA["MistyRose"]   put "255,228,225" into kColorNamesA["MistyRose1"]   put "234,208,204" into kColorNamesA["MistyRose2"]   put "198,175,172" into kColorNamesA["MistyRose3"]   put "128,111,108" into kColorNamesA["MistyRose4"]   put "253,224,172" into kColorNamesA["Moccasin"]   put "253,218,163" into kColorNamesA["NavajoWhite"]   put "255,222,173" into kColorNamesA["NavajoWhite1"]   put "234,201,149" into kColorNamesA["NavajoWhite2"]   put "199,170,125" into kColorNamesA["NavajoWhite3"]   put "128,106,75" into kColorNamesA["NavajoWhite4"]   put "0,0,128" into kColorNamesA["Navy"]   put "0,0,128" into kColorNamesA["NavyBlue"]   put "252,243,226" into kColorNamesA["OldLace"]   put "101,128,23" into kColorNamesA["OliveDrab"]   put "192,255,62" into kColorNamesA["OliveDrab1"]   put "179,238,58" into kColorNamesA["OliveDrab2"]   put "153,197,23" into kColorNamesA["OliveDrab3"]   put "105,139,34" into kColorNamesA["OliveDrab4"]   put "248,122,23" into kColorNamesA["Orange"]   put "250,155,23" into kColorNamesA["Orange1"]   put "231,142,23" into kColorNamesA["Orange2"]   put "197,119,23" into kColorNamesA["Orange3"]   put "127,72,23" into kColorNamesA["Orange4"]   put "246,56,23" into kColorNamesA["OrangeRed"]   put "255,69,0" into kColorNamesA["OrangeRed1"]   put "228,49,23" into kColorNamesA["OrangeRed2"]   put "194,40,23" into kColorNamesA["OrangeRed3"]   put "126,5,23" into kColorNamesA["OrangeRed4"]   put "218,112,214" into kColorNamesA["Orchid"]   put "246,125,250" into kColorNamesA["Orchid1"]   put "228,115,231" into kColorNamesA["Orchid2"]   put "193,96,195" into kColorNamesA["Orchid3"]   put "125,56,124" into kColorNamesA["Orchid4"]   put "237,228,158" into kColorNamesA["PaleGoldenrod"]   put "121,216,103" into kColorNamesA["PaleGreen"]   put "154,255,154" into kColorNamesA["PaleGreen1"]   put "144,238,144" into kColorNamesA["PaleGreen2"]   put "124,205,124" into kColorNamesA["PaleGreen3"]   put "78,124,65" into kColorNamesA["PaleGreen4"]   put "174,235,236" into kColorNamesA["PaleTurquoise"]   put "187,255,255" into kColorNamesA["PaleTurquoise1"]   put "173,235,236" into kColorNamesA["PaleTurquoise2"]   put "146,199,199" into kColorNamesA["PaleTurquoise3"]   put "102,139,139" into kColorNamesA["PaleTurquoise4"]   put "209,101,135" into kColorNamesA["PaleVioletRed"]   put "247,120,161" into kColorNamesA["PaleVioletRed1"]   put "229,110,148" into kColorNamesA["PaleVioletRed2"]   put "194,90,124" into kColorNamesA["PaleVioletRed3"]   put "126,53,77" into kColorNamesA["PaleVioletRed4"]   put "254,236,207" into kColorNamesA["PapayaWhip"]   put "252,213,176" into kColorNamesA["PeachPuff"]   put "255,218,185" into kColorNamesA["PeachPuff1"]   put "234,197,163" into kColorNamesA["PeachPuff2"]   put "198,166,136" into kColorNamesA["PeachPuff3"]   put "128,103,82" into kColorNamesA["PeachPuff4"]   put "197,119,38" into kColorNamesA["Peru"]   put "250,175,190" into kColorNamesA["Pink"]   put "255,181,197" into kColorNamesA["Pink1"]   put "231,161,176" into kColorNamesA["Pink2"]   put "196,135,147" into kColorNamesA["Pink3"]   put "127,82,93" into kColorNamesA["Pink4"]   put "185,59,143" into kColorNamesA["Plum"]   put "249,183,255" into kColorNamesA["Plum1"]   put "230,169,236" into kColorNamesA["Plum2"]   put "195,142,199" into kColorNamesA["Plum3"]   put "126,88,126" into kColorNamesA["Plum4"]   put "173,220,227" into kColorNamesA["PowderBlue"]   put "142,53,239" into kColorNamesA["Purple"]   put "137,59,255" into kColorNamesA["Purple1"]   put "127,56,236" into kColorNamesA["Purple2"]   put "108,45,199" into kColorNamesA["Purple3"]   put "70,27,126" into kColorNamesA["Purple4"]   put "255,0,0" into kColorNamesA["Red"]   put "246,34,23" into kColorNamesA["Red1"]   put "228,27,23" into kColorNamesA["Red2"]   put "193,27,23" into kColorNamesA["Red3"]   put "126,5,23" into kColorNamesA["Red4"]   put "179,132,129" into kColorNamesA["RosyBrown"]   put "251,187,185" into kColorNamesA["RosyBrown1"]   put "232,173,170" into kColorNamesA["RosyBrown2"]   put "197,144,142" into kColorNamesA["RosyBrown3"]   put "127,90,88" into kColorNamesA["RosyBrown4"]   put "43,96,222" into kColorNamesA["RoyalBlue"]   put "48,110,255" into kColorNamesA["RoyalBlue1"]   put "43,101,236" into kColorNamesA["RoyalBlue2"]   put "37,84,199" into kColorNamesA["RoyalBlue3"]   put "21,49,126" into kColorNamesA["RoyalBlue4"]   put "126,49,23" into kColorNamesA["SaddleBrown"]   put "225,139,107" into kColorNamesA["Salmon"]   put "248,129,88" into kColorNamesA["Salmon1"]   put "230,116,81" into kColorNamesA["Salmon2"]   put "195,98,65" into kColorNamesA["Salmon3"]   put "126,56,23" into kColorNamesA["Salmon4"]   put "238,154,77" into kColorNamesA["SandyBrown"]   put "46,139,87" into kColorNamesA["SeaGreen"]   put "106,251,146" into kColorNamesA["SeaGreen1"]   put "100,233,134" into kColorNamesA["SeaGreen2"]   put "67,205,128" into kColorNamesA["SeaGreen3"]   put "46,139,87" into kColorNamesA["SeaGreen4"]   put "254,243,235" into kColorNamesA["Seashell"]   put "255,245,238" into kColorNamesA["Seashell1"]   put "238,229,222" into kColorNamesA["Seashell2"]   put "205,197,191" into kColorNamesA["Seashell3"]   put "139,134,130" into kColorNamesA["Seashell4"]   put "160,82,45" into kColorNamesA["Sienna"]   put "248,116,49" into kColorNamesA["Sienna1"]   put "230,108,44" into kColorNamesA["Sienna2"]   put "195,88,23" into kColorNamesA["Sienna3"]   put "126,53,23" into kColorNamesA["Sienna4"]   put "102,152,255" into kColorNamesA["SkyBlue"]   put "130,202,255" into kColorNamesA["SkyBlue1"]   put "121,186,236" into kColorNamesA["SkyBlue2"]   put "101,158,199" into kColorNamesA["SkyBlue3"]   put "65,98,126" into kColorNamesA["SkyBlue4"]   put "106,90,205" into kColorNamesA["SlateBlue"]   put "115,105,255" into kColorNamesA["SlateBlue1"]   put "105,96,236" into kColorNamesA["SlateBlue2"]   put "105,89,205" into kColorNamesA["SlateBlue3"]   put "52,45,126" into kColorNamesA["SlateBlue4"]   put "101,115,131" into kColorNamesA["SlateGray"]   put "194,223,255" into kColorNamesA["SlateGray1"]   put "180,207,236" into kColorNamesA["SlateGray2"]   put "152,175,199" into kColorNamesA["SlateGray3"]   put "108,123,139" into kColorNamesA["SlateGray4"]   put "255,249,250" into kColorNamesA["Snow"]   put "255,250,250" into kColorNamesA["Snow1"]   put "236,231,230" into kColorNamesA["Snow2"]   put "200,196,194" into kColorNamesA["Snow3"]   put "129,124,123" into kColorNamesA["Snow4"]   put "0,255,127" into kColorNamesA["SpringGreen"]   put "94,251,110" into kColorNamesA["SpringGreen1"]   put "0,238,118" into kColorNamesA["SpringGreen2"]   put "0,205,102" into kColorNamesA["SpringGreen3"]   put "0,139,69" into kColorNamesA["SpringGreen4"]   put "70,130,180" into kColorNamesA["SteelBlue"]   put "92,179,255" into kColorNamesA["SteelBlue1"]   put "86,165,236" into kColorNamesA["SteelBlue2"]   put "72,138,199" into kColorNamesA["SteelBlue3"]   put "43,84,126" into kColorNamesA["SteelBlue4"]   put "210,180,140" into kColorNamesA["Tan"]   put "250,155,60" into kColorNamesA["Tan1"]   put "231,142,53" into kColorNamesA["Tan2"]   put "197,119,38" into kColorNamesA["Tan3"]   put "127,72,23" into kColorNamesA["Tan4"]   put "210,185,211" into kColorNamesA["Thistle"]   put "252,223,255" into kColorNamesA["Thistle1"]   put "233,207,236" into kColorNamesA["Thistle2"]   put "198,174,199" into kColorNamesA["Thistle3"]   put "128,109,126" into kColorNamesA["Thistle4"]   put "247,84,49" into kColorNamesA["Tomato"]   put "255,99,71" into kColorNamesA["Tomato1"]   put "229,76,44" into kColorNamesA["Tomato2"]   put "194,62,23" into kColorNamesA["Tomato3"]   put "126,34,23" into kColorNamesA["Tomato4"]   put "21,5,23" into kColorNamesA["Transparent"]   put "64,224,208" into kColorNamesA["Turquoise"]   put "0,245,255" into kColorNamesA["Turquoise1"]   put "0,229,238" into kColorNamesA["Turquoise2"]   put "0,197,205" into kColorNamesA["Turquoise3"]   put "0,134,139" into kColorNamesA["Turquoise4"]   put "141,56,201" into kColorNamesA["Violet"]   put "208,32,144" into kColorNamesA["VioletRed"]   put "246,53,138" into kColorNamesA["VioletRed1"]   put "228,49,127" into kColorNamesA["VioletRed2"]   put "193,40,105" into kColorNamesA["VioletRed3"]   put "125,5,65" into kColorNamesA["VioletRed4"]   put "243,218,169" into kColorNamesA["Wheat"]   put "254,228,177" into kColorNamesA["Wheat1"]   put "235,211,163" into kColorNamesA["Wheat2"]   put "200,177,137" into kColorNamesA["Wheat3"]   put "129,111,84" into kColorNamesA["Wheat4"]   put "255,255,255" into kColorNamesA["White"]   put "244,244,243" into kColorNamesA["WhiteSmoke"]   put "255,255,0" into kColorNamesA["Yellow"]   put "255,255,0" into kColorNamesA["Yellow1"]   put "238,233,23" into kColorNamesA["Yellow2"]   put "202,197,23" into kColorNamesA["Yellow3"]   put "130,124,23" into kColorNamesA["Yellow4"]   put "154,205,50" into kColorNamesA["YellowGreen"]end p_qrtPDF_LoadColorNames/* private */ command p_qrtPDF_LoadCoreFonts   local tCoreFont, tIndex   --> CoreFont: Courier (courier)   put "courier" into tCoreFont   put "Courier" into kCoreFontsA[tCoreFont][kp_Font_Name]   put "50" into kCoreFontsA[tCoreFont][kp_Font_Ut]   put "-100" into kCoreFontsA[tCoreFont][kp_Font_Up]   repeat with tIndex = 0 to 255      put 600 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][tIndex]   end repeat   --> CoreFont: Courier-Bold (courierB)   put "courierB" into tCoreFont   put "Courier-Bold" into kCoreFontsA[tCoreFont][kp_Font_Name]   put "50" into kCoreFontsA[tCoreFont][kp_Font_Ut]   put "-100" into kCoreFontsA[tCoreFont][kp_Font_Up]   repeat with tIndex = 0 to 255      put 600 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][tIndex]   end repeat   --> CoreFont: Courier-BoldOblique (courierBI)   put "courierBI" into tCoreFont   put "Courier-BoldOblique" into kCoreFontsA[tCoreFont][kp_Font_Name]   put "50" into kCoreFontsA[tCoreFont][kp_Font_Ut]   put "-100" into kCoreFontsA[tCoreFont][kp_Font_Up]   repeat with tIndex = 0 to 255      put 600 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][tIndex]   end repeat   --> CoreFont: Courier-Oblique (courierI)   put "courierI" into tCoreFont   put "Courier-Oblique" into kCoreFontsA[tCoreFont][kp_Font_Name]   put "50" into kCoreFontsA[tCoreFont][kp_Font_Ut]   put "-100" into kCoreFontsA[tCoreFont][kp_Font_Up]   repeat with tIndex = 0 to 255      put 600 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][tIndex]   end repeat   --> CoreFont: Helvetica (helvetica)   put "helvetica" into tCoreFont   put "Helvetica" into kCoreFontsA[tCoreFont][kp_Font_Name]   put "50" into kCoreFontsA[tCoreFont][kp_Font_Ut]   put "-100" into kCoreFontsA[tCoreFont][kp_Font_Up]   repeat with tIndex = 0 to 31      put "278" into kCoreFontsA[tCoreFont][kp_Font_CharWidths][tIndex]   end repeat   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][32]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][33]   put 355 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][34]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][35]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][36]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][37]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][38]   put 191 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][39]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][40]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][41]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][42]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][43]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][44]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][45]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][46]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][47]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][48]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][49]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][50]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][51]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][52]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][53]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][54]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][55]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][56]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][57]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][58]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][59]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][60]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][61]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][62]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][63]   put 1015 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][64]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][65]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][66]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][67]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][68]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][69]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][70]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][71]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][72]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][73]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][74]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][75]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][76]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][77]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][78]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][79]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][80]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][81]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][82]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][83]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][84]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][85]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][86]   put 944 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][87]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][88]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][89]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][90]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][91]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][92]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][93]   put 469 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][94]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][95]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][96]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][97]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][98]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][99]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][100]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][101]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][102]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][103]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][104]   put 222 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][105]   put 222 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][106]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][107]   put 222 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][108]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][109]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][110]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][111]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][112]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][113]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][114]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][115]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][116]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][117]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][118]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][119]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][120]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][121]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][122]   put 334 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][123]   put 260 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][124]   put 334 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][125]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][126]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][127]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][128]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][129]   put 222 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][130]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][131]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][132]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][133]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][134]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][135]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][136]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][137]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][138]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][139]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][140]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][141]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][142]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][143]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][144]   put 222 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][145]   put 222 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][146]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][147]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][148]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][149]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][150]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][151]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][152]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][153]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][154]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][155]   put 944 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][156]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][157]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][158]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][159]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][160]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][161]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][162]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][163]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][164]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][165]   put 260 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][166]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][167]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][168]   put 737 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][169]   put 370 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][170]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][171]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][172]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][173]   put 737 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][174]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][175]   put 400 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][176]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][177]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][178]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][179]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][180]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][181]   put 537 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][182]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][183]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][184]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][185]   put 365 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][186]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][187]   put 834 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][188]   put 834 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][189]   put 834 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][190]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][191]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][192]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][193]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][194]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][195]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][196]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][197]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][198]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][199]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][200]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][201]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][202]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][203]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][204]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][205]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][206]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][207]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][208]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][209]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][210]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][211]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][212]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][213]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][214]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][215]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][216]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][217]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][218]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][219]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][220]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][221]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][222]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][223]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][224]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][225]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][226]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][227]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][228]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][229]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][230]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][231]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][232]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][233]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][234]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][235]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][236]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][237]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][238]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][239]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][240]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][241]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][242]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][243]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][244]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][245]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][246]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][247]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][248]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][249]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][250]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][251]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][252]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][253]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][254]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][255]   --> CoreFont: Helvetica-Bold (helveticaB)   put "helveticaB" into tCoreFont   put "Helvetica-Bold" into kCoreFontsA[tCoreFont][kp_Font_Name]   put "50" into kCoreFontsA[tCoreFont][kp_Font_Ut]   put "-100" into kCoreFontsA[tCoreFont][kp_Font_Up]   repeat with tIndex = 0 to 31      put "278" into kCoreFontsA[tCoreFont][kp_Font_CharWidths][tIndex]   end repeat   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][32]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][33]   put 474 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][34]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][35]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][36]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][37]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][38]   put 238 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][39]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][40]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][41]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][42]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][43]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][44]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][45]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][46]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][47]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][48]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][49]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][50]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][51]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][52]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][53]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][54]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][55]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][56]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][57]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][58]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][59]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][60]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][61]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][62]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][63]   put 975 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][64]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][65]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][66]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][67]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][68]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][69]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][70]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][71]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][72]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][73]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][74]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][75]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][76]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][77]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][78]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][79]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][80]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][81]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][82]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][83]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][84]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][85]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][86]   put 944 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][87]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][88]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][89]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][90]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][91]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][92]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][93]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][94]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][95]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][96]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][97]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][98]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][99]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][100]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][101]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][102]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][103]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][104]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][105]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][106]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][107]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][108]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][109]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][110]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][111]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][112]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][113]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][114]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][115]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][116]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][117]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][118]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][119]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][120]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][121]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][122]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][123]   put 280 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][124]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][125]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][126]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][127]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][128]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][129]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][130]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][131]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][132]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][133]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][134]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][135]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][136]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][137]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][138]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][139]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][140]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][141]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][142]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][143]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][144]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][145]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][146]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][147]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][148]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][149]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][150]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][151]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][152]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][153]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][154]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][155]   put 944 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][156]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][157]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][158]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][159]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][160]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][161]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][162]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][163]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][164]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][165]   put 280 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][166]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][167]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][168]   put 737 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][169]   put 370 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][170]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][171]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][172]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][173]   put 737 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][174]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][175]   put 400 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][176]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][177]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][178]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][179]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][180]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][181]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][182]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][183]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][184]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][185]   put 365 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][186]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][187]   put 834 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][188]   put 834 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][189]   put 834 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][190]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][191]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][192]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][193]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][194]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][195]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][196]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][197]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][198]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][199]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][200]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][201]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][202]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][203]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][204]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][205]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][206]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][207]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][208]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][209]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][210]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][211]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][212]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][213]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][214]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][215]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][216]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][217]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][218]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][219]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][220]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][221]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][222]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][223]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][224]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][225]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][226]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][227]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][228]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][229]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][230]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][231]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][232]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][233]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][234]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][235]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][236]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][237]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][238]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][239]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][240]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][241]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][242]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][243]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][244]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][245]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][246]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][247]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][248]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][249]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][250]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][251]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][252]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][253]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][254]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][255]   --> CoreFont: Helvetica-BoldOblique (helveticaBI)   put "helveticaBI" into tCoreFont   put "Helvetica-BoldOblique" into kCoreFontsA[tCoreFont][kp_Font_Name]   put "50" into kCoreFontsA[tCoreFont][kp_Font_Ut]   put "-100" into kCoreFontsA[tCoreFont][kp_Font_Up]   repeat with tIndex = 0 to 31      put "278" into kCoreFontsA[tCoreFont][kp_Font_CharWidths][tIndex]   end repeat   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][32]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][33]   put 474 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][34]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][35]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][36]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][37]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][38]   put 238 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][39]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][40]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][41]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][42]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][43]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][44]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][45]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][46]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][47]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][48]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][49]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][50]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][51]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][52]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][53]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][54]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][55]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][56]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][57]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][58]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][59]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][60]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][61]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][62]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][63]   put 975 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][64]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][65]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][66]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][67]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][68]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][69]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][70]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][71]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][72]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][73]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][74]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][75]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][76]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][77]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][78]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][79]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][80]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][81]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][82]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][83]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][84]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][85]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][86]   put 944 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][87]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][88]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][89]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][90]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][91]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][92]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][93]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][94]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][95]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][96]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][97]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][98]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][99]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][100]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][101]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][102]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][103]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][104]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][105]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][106]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][107]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][108]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][109]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][110]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][111]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][112]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][113]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][114]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][115]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][116]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][117]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][118]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][119]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][120]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][121]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][122]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][123]   put 280 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][124]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][125]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][126]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][127]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][128]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][129]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][130]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][131]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][132]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][133]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][134]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][135]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][136]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][137]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][138]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][139]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][140]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][141]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][142]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][143]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][144]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][145]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][146]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][147]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][148]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][149]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][150]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][151]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][152]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][153]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][154]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][155]   put 944 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][156]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][157]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][158]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][159]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][160]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][161]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][162]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][163]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][164]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][165]   put 280 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][166]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][167]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][168]   put 737 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][169]   put 370 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][170]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][171]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][172]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][173]   put 737 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][174]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][175]   put 400 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][176]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][177]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][178]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][179]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][180]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][181]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][182]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][183]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][184]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][185]   put 365 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][186]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][187]   put 834 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][188]   put 834 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][189]   put 834 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][190]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][191]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][192]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][193]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][194]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][195]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][196]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][197]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][198]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][199]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][200]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][201]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][202]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][203]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][204]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][205]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][206]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][207]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][208]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][209]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][210]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][211]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][212]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][213]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][214]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][215]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][216]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][217]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][218]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][219]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][220]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][221]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][222]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][223]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][224]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][225]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][226]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][227]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][228]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][229]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][230]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][231]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][232]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][233]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][234]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][235]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][236]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][237]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][238]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][239]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][240]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][241]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][242]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][243]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][244]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][245]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][246]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][247]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][248]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][249]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][250]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][251]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][252]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][253]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][254]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][255]   --> CoreFont: Helvetica-Oblique (helveticaI)   put "helveticaI" into tCoreFont   put "Helvetica-Oblique" into kCoreFontsA[tCoreFont][kp_Font_Name]   put "50" into kCoreFontsA[tCoreFont][kp_Font_Ut]   put "-100" into kCoreFontsA[tCoreFont][kp_Font_Up]   repeat with tIndex = 0 to 31      put "278" into kCoreFontsA[tCoreFont][kp_Font_CharWidths][tIndex]   end repeat   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][32]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][33]   put 355 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][34]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][35]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][36]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][37]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][38]   put 191 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][39]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][40]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][41]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][42]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][43]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][44]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][45]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][46]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][47]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][48]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][49]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][50]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][51]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][52]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][53]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][54]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][55]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][56]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][57]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][58]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][59]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][60]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][61]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][62]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][63]   put 1015 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][64]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][65]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][66]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][67]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][68]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][69]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][70]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][71]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][72]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][73]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][74]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][75]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][76]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][77]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][78]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][79]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][80]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][81]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][82]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][83]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][84]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][85]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][86]   put 944 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][87]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][88]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][89]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][90]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][91]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][92]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][93]   put 469 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][94]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][95]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][96]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][97]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][98]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][99]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][100]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][101]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][102]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][103]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][104]   put 222 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][105]   put 222 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][106]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][107]   put 222 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][108]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][109]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][110]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][111]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][112]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][113]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][114]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][115]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][116]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][117]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][118]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][119]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][120]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][121]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][122]   put 334 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][123]   put 260 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][124]   put 334 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][125]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][126]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][127]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][128]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][129]   put 222 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][130]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][131]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][132]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][133]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][134]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][135]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][136]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][137]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][138]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][139]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][140]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][141]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][142]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][143]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][144]   put 222 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][145]   put 222 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][146]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][147]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][148]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][149]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][150]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][151]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][152]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][153]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][154]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][155]   put 944 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][156]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][157]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][158]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][159]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][160]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][161]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][162]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][163]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][164]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][165]   put 260 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][166]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][167]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][168]   put 737 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][169]   put 370 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][170]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][171]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][172]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][173]   put 737 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][174]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][175]   put 400 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][176]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][177]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][178]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][179]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][180]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][181]   put 537 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][182]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][183]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][184]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][185]   put 365 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][186]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][187]   put 834 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][188]   put 834 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][189]   put 834 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][190]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][191]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][192]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][193]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][194]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][195]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][196]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][197]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][198]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][199]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][200]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][201]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][202]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][203]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][204]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][205]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][206]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][207]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][208]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][209]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][210]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][211]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][212]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][213]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][214]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][215]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][216]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][217]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][218]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][219]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][220]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][221]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][222]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][223]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][224]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][225]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][226]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][227]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][228]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][229]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][230]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][231]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][232]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][233]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][234]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][235]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][236]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][237]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][238]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][239]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][240]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][241]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][242]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][243]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][244]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][245]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][246]   put 584 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][247]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][248]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][249]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][250]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][251]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][252]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][253]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][254]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][255]   --> CoreFont: Symbol (symbol)   put "symbol" into tCoreFont   put "Symbol" into kCoreFontsA[tCoreFont][kp_Font_Name]   put "50" into kCoreFontsA[tCoreFont][kp_Font_Ut]   put "-100" into kCoreFontsA[tCoreFont][kp_Font_Up]   repeat with tIndex = 0 to 31      put "250" into kCoreFontsA[tCoreFont][kp_Font_CharWidths][tIndex]   end repeat   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][32]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][33]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][34]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][35]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][36]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][37]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][38]   put 439 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][39]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][40]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][41]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][42]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][43]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][44]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][45]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][46]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][47]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][48]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][49]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][50]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][51]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][52]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][53]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][54]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][55]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][56]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][57]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][58]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][59]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][60]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][61]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][62]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][63]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][64]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][65]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][66]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][67]   put 612 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][68]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][69]   put 763 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][70]   put 603 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][71]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][72]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][73]   put 631 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][74]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][75]   put 686 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][76]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][77]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][78]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][79]   put 768 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][80]   put 741 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][81]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][82]   put 592 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][83]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][84]   put 690 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][85]   put 439 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][86]   put 768 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][87]   put 645 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][88]   put 795 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][89]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][90]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][91]   put 863 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][92]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][93]   put 658 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][94]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][95]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][96]   put 631 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][97]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][98]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][99]   put 494 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][100]   put 439 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][101]   put 521 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][102]   put 411 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][103]   put 603 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][104]   put 329 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][105]   put 603 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][106]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][107]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][108]   put 576 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][109]   put 521 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][110]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][111]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][112]   put 521 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][113]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][114]   put 603 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][115]   put 439 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][116]   put 576 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][117]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][118]   put 686 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][119]   put 493 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][120]   put 686 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][121]   put 494 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][122]   put 480 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][123]   put 200 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][124]   put 480 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][125]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][126]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][127]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][128]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][129]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][130]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][131]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][132]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][133]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][134]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][135]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][136]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][137]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][138]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][139]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][140]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][141]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][142]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][143]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][144]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][145]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][146]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][147]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][148]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][149]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][150]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][151]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][152]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][153]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][154]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][155]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][156]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][157]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][158]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][159]   put 750 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][160]   put 620 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][161]   put 247 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][162]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][163]   put 167 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][164]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][165]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][166]   put 753 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][167]   put 753 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][168]   put 753 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][169]   put 753 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][170]   put 1042 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][171]   put 987 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][172]   put 603 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][173]   put 987 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][174]   put 603 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][175]   put 400 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][176]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][177]   put 411 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][178]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][179]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][180]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][181]   put 494 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][182]   put 460 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][183]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][184]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][185]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][186]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][187]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][188]   put 603 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][189]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][190]   put 658 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][191]   put 823 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][192]   put 686 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][193]   put 795 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][194]   put 987 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][195]   put 768 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][196]   put 768 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][197]   put 823 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][198]   put 768 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][199]   put 768 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][200]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][201]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][202]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][203]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][204]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][205]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][206]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][207]   put 768 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][208]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][209]   put 790 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][210]   put 790 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][211]   put 890 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][212]   put 823 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][213]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][214]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][215]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][216]   put 603 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][217]   put 603 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][218]   put 1042 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][219]   put 987 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][220]   put 603 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][221]   put 987 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][222]   put 603 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][223]   put 494 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][224]   put 329 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][225]   put 790 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][226]   put 790 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][227]   put 786 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][228]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][229]   put 384 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][230]   put 384 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][231]   put 384 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][232]   put 384 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][233]   put 384 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][234]   put 384 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][235]   put 494 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][236]   put 494 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][237]   put 494 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][238]   put 494 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][239]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][240]   put 329 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][241]   put 274 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][242]   put 686 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][243]   put 686 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][244]   put 686 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][245]   put 384 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][246]   put 384 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][247]   put 384 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][248]   put 384 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][249]   put 384 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][250]   put 384 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][251]   put 494 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][252]   put 494 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][253]   put 494 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][254]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][255]   --> CoreFont: Times-Roman (times)   put "times" into tCoreFont   put "Times-Roman" into kCoreFontsA[tCoreFont][kp_Font_Name]   put 50 into kCoreFontsA[tCoreFont][kp_Font_Ut]   put -100 into kCoreFontsA[tCoreFont][kp_Font_Up]   repeat with tIndex = 0 to 31      put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][tIndex]   end repeat   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][32]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][33]   put 408 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][34]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][35]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][36]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][37]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][38]   put 180 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][39]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][40]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][41]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][42]   put 564 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][43]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][44]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][45]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][46]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][47]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][48]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][49]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][50]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][51]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][52]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][53]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][54]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][55]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][56]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][57]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][58]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][59]   put 564 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][60]   put 564 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][61]   put 564 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][62]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][63]   put 921 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][64]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][65]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][66]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][67]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][68]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][69]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][70]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][71]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][72]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][73]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][74]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][75]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][76]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][77]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][78]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][79]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][80]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][81]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][82]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][83]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][84]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][85]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][86]   put 944 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][87]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][88]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][89]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][90]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][91]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][92]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][93]   put 469 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][94]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][95]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][96]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][97]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][98]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][99]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][100]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][101]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][102]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][103]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][104]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][105]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][106]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][107]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][108]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][109]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][110]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][111]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][112]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][113]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][114]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][115]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][116]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][117]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][118]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][119]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][120]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][121]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][122]   put 480 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][123]   put 200 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][124]   put 480 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][125]   put 541 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][126]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][127]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][128]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][129]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][130]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][131]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][132]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][133]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][134]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][135]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][136]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][137]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][138]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][139]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][140]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][141]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][142]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][143]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][144]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][145]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][146]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][147]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][148]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][149]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][150]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][151]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][152]   put 980 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][153]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][154]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][155]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][156]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][157]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][158]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][159]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][160]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][161]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][162]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][163]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][164]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][165]   put 200 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][166]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][167]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][168]   put 760 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][169]   put 276 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][170]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][171]   put 564 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][172]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][173]   put 760 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][174]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][175]   put 400 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][176]   put 564 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][177]   put 300 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][178]   put 300 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][179]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][180]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][181]   put 453 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][182]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][183]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][184]   put 300 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][185]   put 310 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][186]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][187]   put 750 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][188]   put 750 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][189]   put 750 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][190]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][191]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][192]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][193]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][194]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][195]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][196]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][197]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][198]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][199]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][200]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][201]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][202]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][203]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][204]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][205]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][206]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][207]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][208]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][209]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][210]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][211]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][212]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][213]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][214]   put 564 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][215]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][216]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][217]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][218]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][219]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][220]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][221]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][222]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][223]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][224]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][225]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][226]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][227]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][228]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][229]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][230]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][231]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][232]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][233]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][234]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][235]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][236]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][237]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][238]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][239]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][240]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][241]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][242]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][243]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][244]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][245]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][246]   put 564 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][247]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][248]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][249]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][250]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][251]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][252]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][253]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][254]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][255]   --> CoreFont: Times-Bold (timesB)   put "timesB" into tCoreFont   put "Times-Bold" into kCoreFontsA[tCoreFont][kp_Font_Name]   put 50 into kCoreFontsA[tCoreFont][kp_Font_Ut]   put -100 into kCoreFontsA[tCoreFont][kp_Font_Up]   repeat with tIndex = 0 to 31      put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][tIndex]   end repeat   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][32]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][33]   put 555 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][34]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][35]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][36]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][37]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][38]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][39]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][40]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][41]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][42]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][43]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][44]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][45]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][46]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][47]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][48]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][49]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][50]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][51]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][52]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][53]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][54]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][55]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][56]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][57]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][58]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][59]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][60]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][61]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][62]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][63]   put 930 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][64]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][65]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][66]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][67]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][68]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][69]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][70]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][71]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][72]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][73]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][74]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][75]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][76]   put 944 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][77]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][78]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][79]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][80]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][81]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][82]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][83]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][84]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][85]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][86]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][87]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][88]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][89]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][90]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][91]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][92]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][93]   put 581 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][94]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][95]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][96]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][97]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][98]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][99]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][100]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][101]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][102]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][103]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][104]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][105]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][106]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][107]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][108]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][109]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][110]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][111]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][112]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][113]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][114]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][115]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][116]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][117]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][118]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][119]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][120]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][121]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][122]   put 394 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][123]   put 220 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][124]   put 394 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][125]   put 520 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][126]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][127]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][128]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][129]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][130]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][131]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][132]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][133]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][134]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][135]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][136]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][137]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][138]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][139]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][140]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][141]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][142]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][143]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][144]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][145]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][146]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][147]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][148]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][149]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][150]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][151]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][152]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][153]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][154]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][155]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][156]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][157]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][158]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][159]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][160]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][161]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][162]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][163]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][164]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][165]   put 220 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][166]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][167]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][168]   put 747 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][169]   put 300 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][170]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][171]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][172]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][173]   put 747 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][174]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][175]   put 400 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][176]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][177]   put 300 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][178]   put 300 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][179]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][180]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][181]   put 540 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][182]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][183]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][184]   put 300 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][185]   put 330 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][186]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][187]   put 750 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][188]   put 750 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][189]   put 750 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][190]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][191]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][192]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][193]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][194]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][195]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][196]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][197]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][198]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][199]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][200]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][201]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][202]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][203]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][204]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][205]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][206]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][207]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][208]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][209]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][210]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][211]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][212]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][213]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][214]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][215]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][216]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][217]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][218]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][219]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][220]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][221]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][222]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][223]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][224]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][225]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][226]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][227]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][228]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][229]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][230]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][231]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][232]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][233]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][234]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][235]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][236]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][237]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][238]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][239]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][240]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][241]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][242]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][243]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][244]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][245]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][246]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][247]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][248]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][249]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][250]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][251]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][252]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][253]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][254]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][255]   --> CoreFont: Times-BoldItalic (timesBI)   put "timesBI" into tCoreFont   put "Times-BoldItalic" into kCoreFontsA[tCoreFont][kp_Font_Name]   put 50 into kCoreFontsA[tCoreFont][kp_Font_Ut]   put -100 into kCoreFontsA[tCoreFont][kp_Font_Up]   repeat with tIndex = 0 to 31      put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][tIndex]   end repeat   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][32]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][33]   put 555 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][34]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][35]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][36]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][37]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][38]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][39]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][40]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][41]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][42]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][43]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][44]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][45]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][46]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][47]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][48]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][49]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][50]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][51]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][52]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][53]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][54]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][55]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][56]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][57]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][58]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][59]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][60]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][61]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][62]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][63]   put 832 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][64]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][65]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][66]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][67]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][68]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][69]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][70]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][71]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][72]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][73]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][74]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][75]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][76]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][77]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][78]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][79]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][80]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][81]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][82]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][83]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][84]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][85]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][86]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][87]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][88]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][89]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][90]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][91]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][92]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][93]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][94]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][95]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][96]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][97]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][98]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][99]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][100]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][101]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][102]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][103]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][104]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][105]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][106]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][107]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][108]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][109]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][110]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][111]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][112]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][113]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][114]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][115]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][116]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][117]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][118]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][119]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][120]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][121]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][122]   put 348 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][123]   put 220 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][124]   put 348 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][125]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][126]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][127]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][128]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][129]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][130]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][131]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][132]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][133]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][134]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][135]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][136]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][137]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][138]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][139]   put 944 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][140]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][141]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][142]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][143]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][144]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][145]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][146]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][147]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][148]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][149]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][150]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][151]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][152]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][153]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][154]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][155]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][156]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][157]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][158]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][159]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][160]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][161]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][162]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][163]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][164]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][165]   put 220 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][166]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][167]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][168]   put 747 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][169]   put 266 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][170]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][171]   put 606 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][172]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][173]   put 747 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][174]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][175]   put 400 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][176]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][177]   put 300 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][178]   put 300 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][179]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][180]   put 576 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][181]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][182]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][183]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][184]   put 300 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][185]   put 300 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][186]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][187]   put 750 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][188]   put 750 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][189]   put 750 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][190]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][191]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][192]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][193]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][194]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][195]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][196]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][197]   put 944 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][198]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][199]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][200]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][201]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][202]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][203]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][204]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][205]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][206]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][207]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][208]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][209]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][210]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][211]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][212]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][213]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][214]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][215]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][216]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][217]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][218]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][219]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][220]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][221]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][222]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][223]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][224]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][225]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][226]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][227]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][228]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][229]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][230]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][231]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][232]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][233]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][234]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][235]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][236]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][237]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][238]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][239]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][240]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][241]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][242]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][243]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][244]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][245]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][246]   put 570 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][247]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][248]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][249]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][250]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][251]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][252]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][253]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][254]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][255]   --> CoreFont: Times-Italic (timesI)   put "timesI" into tCoreFont   put "Times-Italic" into kCoreFontsA[tCoreFont][kp_Font_Name]   put 50 into kCoreFontsA[tCoreFont][kp_Font_Ut]   put -100 into kCoreFontsA[tCoreFont][kp_Font_Up]   repeat with tIndex = 0 to 31      put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][tIndex]   end repeat   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][32]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][33]   put 420 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][34]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][35]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][36]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][37]   put 778 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][38]   put 214 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][39]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][40]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][41]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][42]   put 675 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][43]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][44]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][45]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][46]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][47]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][48]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][49]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][50]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][51]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][52]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][53]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][54]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][55]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][56]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][57]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][58]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][59]   put 675 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][60]   put 675 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][61]   put 675 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][62]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][63]   put 920 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][64]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][65]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][66]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][67]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][68]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][69]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][70]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][71]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][72]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][73]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][74]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][75]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][76]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][77]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][78]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][79]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][80]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][81]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][82]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][83]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][84]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][85]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][86]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][87]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][88]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][89]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][90]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][91]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][92]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][93]   put 422 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][94]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][95]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][96]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][97]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][98]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][99]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][100]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][101]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][102]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][103]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][104]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][105]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][106]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][107]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][108]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][109]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][110]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][111]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][112]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][113]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][114]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][115]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][116]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][117]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][118]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][119]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][120]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][121]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][122]   put 400 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][123]   put 275 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][124]   put 400 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][125]   put 541 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][126]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][127]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][128]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][129]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][130]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][131]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][132]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][133]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][134]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][135]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][136]   put 1000 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][137]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][138]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][139]   put 944 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][140]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][141]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][142]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][143]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][144]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][145]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][146]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][147]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][148]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][149]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][150]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][151]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][152]   put 980 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][153]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][154]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][155]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][156]   put 350 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][157]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][158]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][159]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][160]   put 389 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][161]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][162]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][163]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][164]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][165]   put 275 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][166]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][167]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][168]   put 760 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][169]   put 276 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][170]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][171]   put 675 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][172]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][173]   put 760 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][174]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][175]   put 400 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][176]   put 675 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][177]   put 300 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][178]   put 300 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][179]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][180]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][181]   put 523 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][182]   put 250 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][183]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][184]   put 300 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][185]   put 310 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][186]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][187]   put 750 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][188]   put 750 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][189]   put 750 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][190]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][191]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][192]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][193]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][194]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][195]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][196]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][197]   put 889 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][198]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][199]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][200]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][201]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][202]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][203]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][204]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][205]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][206]   put 333 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][207]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][208]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][209]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][210]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][211]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][212]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][213]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][214]   put 675 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][215]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][216]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][217]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][218]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][219]   put 722 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][220]   put 556 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][221]   put 611 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][222]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][223]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][224]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][225]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][226]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][227]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][228]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][229]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][230]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][231]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][232]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][233]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][234]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][235]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][236]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][237]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][238]   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][239]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][240]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][241]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][242]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][243]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][244]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][245]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][246]   put 675 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][247]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][248]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][249]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][250]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][251]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][252]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][253]   put 500 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][254]   put 444 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][255]   --> CoreFont: ZapfDingbats (zapfdingbats)   put "zapfdingbats" into tCoreFont   put "ZapfDingbats" into kCoreFontsA[tCoreFont][kp_Font_Name]   put 50 into kCoreFontsA[tCoreFont][kp_Font_Ut]   put -100 into kCoreFontsA[tCoreFont][kp_Font_Up]   repeat with tIndex = 0 to 31      put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][tIndex]   end repeat   put 278 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][32]   put 974 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][33]   put 961 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][34]   put 974 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][35]   put 980 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][36]   put 719 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][37]   put 789 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][38]   put 790 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][39]   put 791 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][40]   put 690 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][41]   put 960 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][42]   put 939 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][43]   put 549 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][44]   put 855 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][45]   put 911 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][46]   put 933 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][47]   put 911 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][48]   put 945 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][49]   put 974 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][50]   put 755 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][51]   put 846 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][52]   put 762 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][53]   put 761 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][54]   put 571 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][55]   put 677 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][56]   put 763 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][57]   put 760 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][58]   put 759 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][59]   put 754 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][60]   put 494 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][61]   put 552 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][62]   put 537 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][63]   put 577 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][64]   put 692 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][65]   put 786 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][66]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][67]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][68]   put 790 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][69]   put 793 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][70]   put 794 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][71]   put 816 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][72]   put 823 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][73]   put 789 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][74]   put 841 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][75]   put 823 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][76]   put 833 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][77]   put 816 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][78]   put 831 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][79]   put 923 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][80]   put 744 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][81]   put 723 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][82]   put 749 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][83]   put 790 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][84]   put 792 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][85]   put 695 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][86]   put 776 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][87]   put 768 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][88]   put 792 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][89]   put 759 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][90]   put 707 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][91]   put 708 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][92]   put 682 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][93]   put 701 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][94]   put 826 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][95]   put 815 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][96]   put 789 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][97]   put 789 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][98]   put 707 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][99]   put 687 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][100]   put 696 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][101]   put 689 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][102]   put 786 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][103]   put 787 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][104]   put 713 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][105]   put 791 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][106]   put 785 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][107]   put 791 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][108]   put 873 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][109]   put 761 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][110]   put 762 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][111]   put 762 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][112]   put 759 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][113]   put 759 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][114]   put 892 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][115]   put 892 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][116]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][117]   put 784 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][118]   put 438 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][119]   put 138 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][120]   put 277 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][121]   put 415 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][122]   put 392 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][123]   put 392 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][124]   put 668 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][125]   put 668 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][126]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][127]   put 390 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][128]   put 390 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][129]   put 317 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][130]   put 317 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][131]   put 276 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][132]   put 276 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][133]   put 509 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][134]   put 509 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][135]   put 410 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][136]   put 410 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][137]   put 234 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][138]   put 234 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][139]   put 334 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][140]   put 334 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][141]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][142]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][143]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][144]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][145]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][146]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][147]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][148]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][149]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][150]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][151]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][152]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][153]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][154]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][155]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][156]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][157]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][158]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][159]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][160]   put 732 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][161]   put 544 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][162]   put 544 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][163]   put 910 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][164]   put 667 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][165]   put 760 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][166]   put 760 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][167]   put 776 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][168]   put 595 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][169]   put 694 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][170]   put 626 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][171]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][172]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][173]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][174]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][175]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][176]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][177]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][178]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][179]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][180]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][181]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][182]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][183]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][184]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][185]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][186]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][187]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][188]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][189]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][190]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][191]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][192]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][193]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][194]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][195]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][196]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][197]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][198]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][199]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][200]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][201]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][202]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][203]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][204]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][205]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][206]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][207]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][208]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][209]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][210]   put 788 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][211]   put 894 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][212]   put 838 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][213]   put 1016 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][214]   put 458 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][215]   put 748 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][216]   put 924 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][217]   put 748 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][218]   put 918 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][219]   put 927 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][220]   put 928 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][221]   put 928 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][222]   put 834 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][223]   put 873 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][224]   put 828 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][225]   put 924 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][226]   put 924 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][227]   put 917 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][228]   put 930 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][229]   put 931 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][230]   put 463 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][231]   put 883 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][232]   put 836 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][233]   put 836 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][234]   put 867 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][235]   put 867 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][236]   put 696 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][237]   put 696 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][238]   put 874 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][239]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][240]   put 874 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][241]   put 760 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][242]   put 946 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][243]   put 771 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][244]   put 865 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][245]   put 771 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][246]   put 888 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][247]   put 967 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][248]   put 888 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][249]   put 831 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][250]   put 873 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][251]   put 927 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][252]   put 970 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][253]   put 918 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][254]   put 0 into kCoreFontsA[tCoreFont][kp_Font_CharWidths][255]end p_qrtPDF_LoadCoreFonts/* private */ command p_qrtPDF_LoadPageFormats   put "521.86,756.00" into kPageFormatsA["EXECUTIVE"]   put "612.00,936.00" into kPageFormatsA["FOLIO"]   put "612.00,1008.00" into kPageFormatsA["LEGAL"]   put "612.00,792.00" into kPageFormatsA["LETTER"]   put "4767.87,6740.79" into kPageFormatsA["4A0"]   put "3370.39,4767.87" into kPageFormatsA["2A0"]   put "2383.94,3370.39" into kPageFormatsA["A0"]   put "1683.78,2383.94" into kPageFormatsA["A1"]   put "1190.55,1683.78" into kPageFormatsA["A2"]   put "841.89,1190.55" into kPageFormatsA["A3"]   put "595.28,841.89" into kPageFormatsA["A4"]   put "419.53,595.28" into kPageFormatsA["A5"]   put "297.64,419.53" into kPageFormatsA["A6"]   put "209.76,419.53" into kPageFormatsA["A7"]   put "147.40,209.76" into kPageFormatsA["A8"]   put "104.88,147.40" into kPageFormatsA["A9"]   put "73.70,104.88" into kPageFormatsA["A10"]   put "2834.65,4008.19" into kPageFormatsA["B0"]   put "2004.09,2834.65" into kPageFormatsA["B1"]   put "1417.32,2004.09" into kPageFormatsA["B2"]   put "1000.63,1417.32" into kPageFormatsA["B3"]   put "708.66,1000.63" into kPageFormatsA["B4"]   put "498.90,708.66" into kPageFormatsA["B5"]   put "354.33,498.90" into kPageFormatsA["B6"]   put "249.45,354.33" into kPageFormatsA["B7"]   put "175.75,249.45" into kPageFormatsA["B8"]   put "124.72,175.75" into kPageFormatsA["B9"]   put "87.87,124.72" into kPageFormatsA["B10"]   put "2599.37,3676.54" into kPageFormatsA["C0"]   put "1836.85,2599.37" into kPageFormatsA["C1"]   put "1298.28,1836.85" into kPageFormatsA["C2"]   put "918.43,1298.27" into kPageFormatsA["C3"]   put "649.13,918.43" into kPageFormatsA["C4"]   put "459.21,649.13" into kPageFormatsA["C5"]   put "323.15,459.21" into kPageFormatsA["C6"]   put "229.61,323.15" into kPageFormatsA["C7"]   put "161.57,229.61" into kPageFormatsA["C8"]   put "113.39,161.57" into kPageFormatsA["C9"]   put "79.37,113.39" into kPageFormatsA["C10"]   put "2437.80,3458.27" into kPageFormatsA["RA0"]   put "1729.13,2437.80" into kPageFormatsA["RA1"]   put "1218.90,1729.13" into kPageFormatsA["RA2"]   put "864.57,1218.90" into kPageFormatsA["RA3"]   put "609.45,864.57" into kPageFormatsA["RA4"]   put "2551.18,3628.35" into kPageFormatsA["SRA0"]   put "1814.17,2551.18" into kPageFormatsA["SRA1"]   put "1275.59,1814.17" into kPageFormatsA["SRA2"]   put "907.09,1275.59" into kPageFormatsA["SRA3"]   put "637.80,907.09" into kPageFormatsA["SRA4"]end p_qrtPDF_LoadPageFormats/* private */ command p_qrtPDF_LoadScaleFactors   put 72/2.54 into kScaleFactorsA["cm"]   put 72/25.4 into kScaleFactorsA["mm"]   put 72 into kScaleFactorsA["in"]   put 1 into kScaleFactorsA["pt"]end p_qrtPDF_LoadScaleFactors/* end of qrtpdflib.inc.txt */